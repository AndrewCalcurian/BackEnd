{"version":3,"sources":["webpack:///src/app/producto-ymaquinaria/productos/productos.component.ts","webpack:///src/app/producto-ymaquinaria/productos/productos.component.html","webpack:///src/app/producto-ymaquinaria/maquinaria/maquinaria.component.ts","webpack:///src/app/producto-ymaquinaria/maquinaria/maquinaria.component.html","webpack:///src/app/almacen/almacen-routing.module.ts","webpack:///src/app/models/usuario.model.ts","webpack:///src/app/producto-ymaquinaria/producto-ymaquinaria.module.ts","webpack:///src/app/producto-ymaquinaria/producto-ymaquinaria-routing.module.ts","webpack:///src/environments/environment.ts","webpack:///src/app/producto-ymaquinaria/producto-ymaquinaria.component.ts","webpack:///src/app/producto-ymaquinaria/producto-ymaquinaria.component.html","webpack:///src/app/shared/navbar/navbar.component.ts","webpack:///src/app/shared/navbar/navbar.component.html","webpack:///src/app/almacen/almacen.module.ts","webpack:///src/app/Auth/auth-guard.guard.ts","webpack:///src/app/ordenes/ordenes-routing.module.ts","webpack:///src/app/ordenes/gestion/gestion.component.ts","webpack:///src/app/ordenes/gestion/gestion.component.html","webpack:///src/app/ordenes/main/main.component.ts","webpack:///src/app/ordenes/main/main.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/ordenes/ordenes.component.ts","webpack:///src/app/ordenes/ordenes.component.html","webpack:///src/app/nuevo-pedido/nuevo-pedido.module.ts","webpack:///src/app/almacen/almacen.component.ts","webpack:///src/app/almacen/almacen.component.html","webpack:///src/app/orden/orden.component.html","webpack:///src/app/orden/orden.component.ts","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/nuevo-pedido/main/main.component.ts","webpack:///src/app/nuevo-pedido/main/main.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/planificacion/planificacion.component.ts","webpack:///src/app/planificacion/planificacion.component.html","webpack:///src/app/nuevo-pedido/nuevo-pedido.component.ts","webpack:///src/app/nuevo-pedido/nuevo-pedido.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/index/index.component.ts","webpack:///src/app/index/index.component.html","webpack:///src/app/nuevo-pedido/nuevo-pedido-routing.module.ts","webpack:///src/app/ordenes/ordenes.module.ts","webpack:///src/app/almacen/main/main.component.html","webpack:///src/app/almacen/main/main.component.ts","webpack:///src/app/services/rest-api.service.ts","webpack:///src/app/index/index-routing.module.ts","webpack:///src/app/producto-ymaquinaria/main/main.component.ts","webpack:///src/app/producto-ymaquinaria/main/main.component.html","webpack:///src/app/index/main/main.component.ts","webpack:///src/app/index/main/main.component.html","webpack:///src/app/index/index.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ProductosComponent","api","fb","NUEVO_CLIENTE","MATERIALES_NECESARIOS","NUEVO_PRODUCTO","EJEMPLARES","POST","SUSTRATO","Sus_Done","dimensiones","_producto_seleccionado","montajes","i_montajes","i_montajes_","necesidad","listo","cinco","seis","siete","ocho","almacenes","new_almacen","VER_PRODUCTO","OneProduct","producto","cliente","nombre","codigo","grupo","_id","version","ejemplares","fibra","post","sustrato","marca","calibre","gramaje","materiales","ClienteForm","group","required","EDITAR_PRODUCTO","usuario","obtenerGrupodeMateriales","BuscarGruposEnAlmacen","obtenerClientes","obtenerMateriales","obtenerGrupos","cliente_id","document","getElementById","value","n","e","product_selected","hidden","clase","toString","disabled","Included","includes","push","i","indexOf","splice","console","log","TROQUEL","target","Math","abs","buscar","find","x","index","input","campo","focus","buscarSiExiste","c","material","nuevo","id","data","cantidad","GetGrupoMp","subscribe","resp","GRUPOS_MATERIA","GetClientes","CLIENTES","clientes","get","setValue","invalid","fire","title","text","icon","showConfirmButton","timer","PostClientes","reset","getAlmacen","MATERIALES","getGrupos","GRUPOS","grupos","valor","inde","SECCIONES","alert","cod_cliente","edicion","postProducto","Modal_Producto","buscar_producto","ancho","tamano","length","largo","DirFibra","pop","getById","PRODUCTOS","productos","Material","size","name","updateProducto","editar","getOneById","Modal_Producto_E","material2","deleted","findIndex","ver_Modal_Producto","Modal_Cliente","addCliente","add_almacen","post_impresion","Ejemplar","finalizar","cambiarCalculo","editar_producto","selector","templateUrl","styleUrls","MaquinariaComponent","NUEVA_MAQUINA","NUEVO_GRUPO","MAQUINAS","FUNCIONES","FASES","EDITAR_MAQUINA","maquinaForm","tipo","colores","cph","ObtenerMaquinas","Edicion_Modal_Maquina","getMaquinaID","MaquinaID","toUpperCase","putMaquina","position","PostMaquinas","GetMaquinas","maquinas","obtenerTipos","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","then","result","isConfirmed","BorrarMaquina","EliminarGrupo","deleteGrupo","DeleteMaquinas","este","nuevoTipo","tipos","PostGrupos","Modal_Maquina","nuevaMaquina","Modal_Grupo","agregarTipo","routes","path","component","children","AlmacenRoutingModule","forChild","declarations","imports","Usuario","estado","Nombre","Apellido","Correo","Departamento","Role","Nueva_orden","Consulta","Almacen","Maquinaria","Planificacion","Gestiones","ProductoYMaquinariaModule","ProductoYMaquinariaRoutingModule","environment","production","ProductoYMaquinariaComponent","NavbarComponent","usuarioService","logout","AlmacenModule","AuthGuard","router","route","state","validarToken","pipe","isAuth","navigateByUrl","providedIn","OrdenesRoutingModule","GestionComponent","TRABAJOS","NUEVA_GESTION","FASE","HOY","format","Tarea","getMaquinas","getGestiones","value_hojas","orden","Ejemplares","montaje","value_productos","maquina","fecha","trabajo","postRestrasar","fechaI","fecha_lapsos","fechaI_lapso","lapso","diff","postAcelerar","hoy","hojas","restante","GESTIONES","filter","long","_productos","_hojas","Actual","Number","paginas","Rproductos","Rhojas","postGestion","modal_nueva_gestion","getTrabajos","Long","fase","calcular_Productos","calcular_Hojas","MainComponent","getOrdenes","obtenerTrabajos","getOrden","ORDENES","estado2","SharedModule","exports","OrdenesComponent","NuevoPedidoModule","AlmacenComponent","OrdenComponent","snapshot","paramMap","getOrdenById","PRODUCTO","Intl","NumberFormat","demasia","ceil","ejemplares_montados","paginas_sin_demasia","getMaquinasByOrdens","Maquinas","fecha_o","fecha_s","cantidad_","NumToLet","maquinasDB","peliculas","tintas","barniz","cant_barniz","cantidad_barniz","toFixed","pega","cantidad_pega","pega_nombre","pega_marca","pega_unidad","cant_pega","unidad","caja","cant_cajas","cantidad_cajas","cinta_","cinta","Nombre_sustrato","tintas_color","tintas_marca","Estandar_de_color","e_c","_i","color","peli","cantidad_tinta","tinta","pdf","setFonts","generarPDF","width","margin","build","rowSpan","end","bold","alignment","fontSize","fillColor","widths","add","colSpan","sort","layout","border","i_ancho","i_largo","observacion","create","download","descargarPDF","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","webpackContextKeys","Object","resolve","module","NUEVA_ORDEN","cs","ps","os","Cantidad_ejemplares","Ejemplares_montados","Fases","SinMaterial","oc_","fo_","ae_","observacion_","TOTALES","total","presentacion","neto","CANTIDAD","_CANTIDAD","restantes","BuscarAlmacen","Almacenado","aja","CLIENTE","ALMACEN","getAlmacenado","totalizar_materiales","respuesta","OC","Demasia","almacenado","cantidades","necesario","EnAlmacen","existe","def","Fecha_S","resto","restantes_","modal_nueva_orden","getFechas","HorasAgregadas","MaquinaSelected2","dias","hoymas3","orden_compra","almacen","checked","postOrden","fases","Data","postOrden2","navigate","cliente_selected","Cantidad","Fecha_s","cambios","AppComponent","PlanificacionComponent","cargado","week","mes","ano","getDaysFromDate","month","year","months","startDate","endDate","clone","endOf","dateSelect","diffDays","numberDays","round","arrayDays","Array","a","parseInt","dayObject","indexWeek","isoWeekday","monthSelect","flag","prevDate","subtract","nextDate","day","monthYear","parse","objectDate","dateValue","funcion","betas","final","changeMonth","NuevoPedidoComponent","AppModule","provide","useValue","providers","bootstrap","IndexComponent","NuevoPedidoRoutingModule","OrdenesModule","fileName","resumido","detallado","PESO","GRAMAJE","ANCHO","LARGO","HOJAS","PESO_","GRAMAJE_","ANCHO_","LARGO_","HOJAS_","empty","OTRO","CONVERSION","BOBINAS","CONSULTAB","boolean_sustrato","New_Sustrato","_NUEVO_PRODUCTO","EDICION_ALMACEN","DESCUENTOS","eliminacion","eliminar_sustrato","reporte","loading","_bobina","descontar_b","codigoID","loteID","cantidadID","lote","New_color","caja_","_Almacenado","Editar_NUEVO_PRODUCTO","_bobina_","LOTES","InventarioForm","NewControl","BobinaForm","Nbobina","peso","convertidora","_sustratos_","_gramajes_","_ancho_","SUSTRATO_CONVERSION","conversiones","getAalmacenado","porConfirmar","Gs","Buscar_conversiones","getbobinas","seccion","existencia","sustratos","MaterialID","Modal_Almacen_ep","getMaterialesID","putMaterialID","edit_almacen","getAlmacenadoID","AlmacenadoId","selecciona_producto","body","putAlmacenadoID","buscarSustratos","bobina","bobina__","numero","deleteBobina","descontar_bobina","postAlmacenado","Nuevo_producto","PostAlmacen","Modal_Almacen","otro","trunc","all","postNuevaBobina","Modal_bobinas","getBobina","BOBINAS_","getConversiones","Gramaje","Ancho","Largo","Num_Bobina","solicitado","postNuevoSustrato","modal_Conversion","recibo","pageOrientation","ln","getMaterialesPorConfirmar","MAT_NECESARIO","cantidad_Mat","cantidad_orden","El_Material","total_necesario","Total_en_Presentacion","En_Almacen","Cargados","lotes","realizarDescuentoAlmacen","Descuento","name_p_e","cantidad_p_e","id_p_e","modal_eliminacion","motivo","eliminarSustrato","eliminarMaterial","desde","hasta","reporteInventario","ingresos","descuentos","descuento","razon","slice","modal_reporte","materiales_en_almacen","cintas_","cajas","m_cantidad","splited","split","_cantidad","unidad_necesaria","previo","innerHTML","cantidad_solicitada","style","display","check","onclick","fijalote","resta","Almacenes","producto_seleccionado","almacenar","Almacenar","Cambio_opciones","check_bobinas","nuevaBobina","buscarGramaje","buscarAncho","Buscar_Bobina","Peso","Generar_Conversion","Hojas_","Gramaje_","Ancho_","Largo_","Modal_Mat_Nec","confirmar_eliminacion","descargarInventario","RestApiService","http","api_url","localStorage","getItem","token","url","headers","setItem","JSON","stringify","menu","error","removeItem","put","IndexRoutingModule","IndexModule","canActivate","loadChildren","m","AppRoutingModule","forRoot","LoginComponent","cargando","correo","email","formSubmitted","loginForm","Password","remember","patchValue","Login","err","message","login","bootstrapModule","webpackEmptyAsyncContext","Promise"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { RestApiService } from 'src/app/services/rest-api.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { Subscriber, timer } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-productos',\r\n  templateUrl: './productos.component.html',\r\n  styleUrls: ['./productos.component.css']\r\n})\r\nexport class ProductosComponent implements OnInit {\r\n\r\n  public NUEVO_CLIENTE:boolean = false;\r\n  public CLIENTES;\r\n  public MATERIALES;\r\n  public MATERIALES_NECESARIOS = [];\r\n  public NUEVO_PRODUCTO:boolean = false;\r\n  public GRUPOS;\r\n\r\n  public EJEMPLARES = [];\r\n  public POST = [];\r\n  public TROQUEL\r\n\r\n  public SECCIONES;\r\n\r\n  public GRUPOS_MATERIA;\r\n\r\n  public PRODUCTOS;\r\n  public SUSTRATO = [];\r\n\r\n  public Sus_Done:boolean = false;\r\n\r\n  public dimensiones = []\r\n\r\n  product_selected;\r\n  _producto_seleccionado:boolean = false;\r\n\r\n  montajes = 1;\r\n  i_montajes = 0;\r\n  i_montajes_ = 0;\r\n\r\n  necesidad = 0;\r\n  listo:boolean = true;\r\n  \r\n  cinco:boolean = true;\r\n  seis:boolean = true;\r\n  siete:boolean = true;\r\n  ocho:boolean = true;\r\n\r\n\r\n  almacenes = [];\r\n  public new_almacen = ''\r\n\r\n  public VER_PRODUCTO:boolean = false;\r\n  OneProduct:any = {producto:'',\r\n                          cliente:{\r\n                            nombre:'',\r\n                            codigo:''\r\n                          },\r\n                          grupo:{_id:''},\r\n                          codigo:'',\r\n                          version:'',\r\n                          ejemplares:[],\r\n                          dimensiones:'',\r\n                          fibra:'',\r\n                          post:[],\r\n                          sustrato:[{\r\n                            nombre:'',\r\n                            marca:'',\r\n                            calibre:'',\r\n                            gramaje:''\r\n                          }],\r\n                          materiales:[]};\r\n\r\n  ClienteForm:FormGroup = this.fb.group({\r\n    nombre:['',Validators.required],\r\n    codigo:['',Validators.required],\r\n    almacenes:['', Validators.required]\r\n  })\r\n\r\n  constructor(private api:RestApiService,\r\n              private fb:FormBuilder) { \r\n                this.usuario = api.usuario\r\n              }\r\n\r\n  ngOnInit(): void {\r\n    this. obtenerGrupodeMateriales();\r\n    this.BuscarGruposEnAlmacen();\r\n    this.obtenerClientes();\r\n    this.obtenerMateriales();\r\n    this.obtenerGrupos();\r\n    let cliente_id = (<HTMLInputElement>document.getElementById('cliente_Seleccionado')).value;\r\n    // this.buscar_producto(cliente_id);\r\n  }\r\n  public usuario\r\n\r\n  NumToLet(n){\r\n    switch(n)\r\n    {\r\n        case 0: return \"A\";\r\n        case 1: return \"B\";\r\n        case 2: return \"C\";\r\n        case 3: return \"D\";\r\n        case 4: return \"E\";\r\n        case 5: return \"F\";\r\n        case 6: return \"G\";\r\n        case 7: return \"H\";\r\n        case 8: return \"I\";\r\n    }\r\n\r\n  }\r\n\r\n  producto_seleccionado(e){\r\n    if(e === 0){\r\n      this._producto_seleccionado = false;\r\n    }else{\r\n      this._producto_seleccionado = true;\r\n      if(this.product_selected == 'Sustrato'){\r\n        this._producto_seleccionado = false;\r\n        document.getElementById('cant').hidden = true;\r\n      }else{\r\n        this._producto_seleccionado = true;\r\n        document.getElementById('cant').hidden = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  selecciona_producto(e){\r\n    let clase = this.i_montajes.toString()\r\n    if(e == 0){\r\n      (<HTMLInputElement>document.getElementById(clase)).disabled = true;\r\n    }else{\r\n      (<HTMLInputElement>document.getElementById(clase)).disabled = false;\r\n      this.product_selected = e;\r\n    }\r\n  }\r\n\r\n  selecciona_producto2(e){\r\n    let clase = this.i_montajes.toString()\r\n    if(e == 0){\r\n      (<HTMLInputElement>document.getElementById(`x-${clase}`)).disabled = true;\r\n    }else{\r\n      (<HTMLInputElement>document.getElementById(`x-${clase}`)).disabled = false;\r\n      this.product_selected = e;\r\n    }\r\n  }\r\n\r\n  post_impresion(e){\r\n    let Included = this.POST.includes(e);\r\n    if(!Included){\r\n      this.POST.push(e);\r\n    }else{\r\n      let i = this.POST.indexOf(e)\r\n      this.POST.splice(i, 1)\r\n    }\r\n\r\n    //console.log(this.POST)\r\n  }\r\n\r\n  troquel(e){\r\n    this.TROQUEL = e.target.value;\r\n  }\r\n\r\n  Ejemplar(e){\r\n    if(!this.EJEMPLARES[this.i_montajes]){\r\n      this.EJEMPLARES[this.i_montajes] = ''\r\n    }\r\n    this.EJEMPLARES[this.i_montajes] = e;\r\n  }\r\n\r\n  public Modal_Cliente(){\r\n    if(this.NUEVO_CLIENTE){\r\n      this.NUEVO_CLIENTE = false;\r\n    }else{\r\n      this.NUEVO_CLIENTE = true;\r\n    }\r\n  }\r\n\r\n  public Modal_Producto(){\r\n    if(this.NUEVO_PRODUCTO){\r\n      this.NUEVO_PRODUCTO = false;\r\n    }else{\r\n      this.NUEVO_PRODUCTO = true;\r\n    }\r\n  }\r\n\r\n  public ver_Modal_Producto(){\r\n    if(this.VER_PRODUCTO){\r\n      this.VER_PRODUCTO = false;\r\n    }else{\r\n      this.VER_PRODUCTO = true;\r\n      this.i_montajes = 0;\r\n      this.listo = true;\r\n    }\r\n  }\r\n\r\n  sumaTintas(n){\r\n    if(this.listo){\r\n      this.listo = false;\r\n      this.necesidad = n - 5;\r\n      return n + Math.abs(this.necesidad);\r\n    }else{\r\n      return n + Math.abs(this.necesidad);\r\n    }\r\n  }\r\n\r\n  cambiarCalculo(){\r\n    this.listo = true;\r\n  }\r\n\r\n  add_almacen(){\r\n    this.almacenes.push(this.new_almacen)\r\n    this.new_almacen = ''\r\n  }\r\n\r\n  delete_this_almacen(i){\r\n    let buscar = this.almacenes.find(x => x == i)\r\n    let index = this.almacenes.indexOf(buscar)\r\n    this.almacenes.splice(index,1)\r\n  }\r\n\r\n  enable(input){\r\n    let campo = (<HTMLInputElement>document.getElementById(input)).disabled;\r\n\r\n    if(campo){\r\n      (<HTMLInputElement>document.getElementById(input)).disabled = false;\r\n      (<HTMLInputElement>document.getElementById(input)).focus();\r\n    } else {\r\n      (<HTMLInputElement>document.getElementById(input)).disabled = true;\r\n      let buscarSiExiste = this.MATERIALES_NECESARIOS.find(c => c.material == input);\r\n      if(buscarSiExiste){\r\n        let index = this.MATERIALES_NECESARIOS.indexOf(buscarSiExiste)\r\n        this.MATERIALES_NECESARIOS.splice(index, 1)\r\n      }\r\n  }\r\n}\r\n\r\njust_a_sec(e){\r\n  let nuevo = this.MATERIALES_NECESARIOS.find(c => c.material == e.target.id);\r\n  let index;\r\n  if(!nuevo){\r\n    let data = {\r\n      material:e.target.id,\r\n      cantidad:e.target.value\r\n    }\r\n\r\n    this.MATERIALES_NECESARIOS.push(data)\r\n  }else{\r\n    index = this.MATERIALES_NECESARIOS.indexOf(nuevo)\r\n    this.MATERIALES_NECESARIOS[index].cantidad = e.target.value\r\n  }\r\n}\r\n\r\n  obtenerGrupodeMateriales(){\r\n    this.api.GetGrupoMp()\r\n      .subscribe((resp:any)=>{\r\n        this.GRUPOS_MATERIA = resp;\r\n      })\r\n  }\r\n  obtenerClientes(){\r\n    this.api.GetClientes()\r\n      .subscribe((resp:any) =>{\r\n        this.CLIENTES = resp.clientes\r\n      })\r\n  }\r\n\r\n  addCliente(){\r\n\r\n    this.ClienteForm.get('almacenes').setValue(this.almacenes)\r\n\r\n    if(this.ClienteForm.invalid) {\r\n      Swal.fire({\r\n        title:'Oops!',\r\n        text:'Debes rellenar todos los campos para continuar',\r\n        icon:'error',\r\n        showConfirmButton:false,\r\n        timer:1500\r\n      })\r\n      return;\r\n    }\r\n    \r\n\r\n    this.api.PostClientes(this.ClienteForm.value)\r\n        .subscribe((resp:any)=>{\r\n          this.obtenerClientes();\r\n          this.ClienteForm.reset();\r\n          this.NUEVO_CLIENTE = false;\r\n          this.almacenes = []\r\n          Swal.fire({\r\n            title:'Excelente!',\r\n            text:'Se registro nuevo cliente',\r\n            showConfirmButton:false,\r\n            icon:'success',\r\n            timer:2000\r\n          })\r\n        })\r\n  }\r\n\r\n  //--------------------- PRODUCTOS----\r\n\r\n  obtenerMateriales(){\r\n    this.api.getAlmacen()\r\n      .subscribe((resp:any)=>{\r\n        this.MATERIALES = resp.materiales\r\n        //console.log(this.MATERIALES)\r\n      })\r\n  }\r\n\r\n  obtenerGrupos(){\r\n    this.api.getGrupos()\r\n      .subscribe((resp:any)=>{\r\n        this.GRUPOS = resp.grupos\r\n        //console.log(this.GRUPOS,'GRUPOOOOS')\r\n      })\r\n  }\r\n\r\n  Ordenar_Producto(){\r\n    let valor = (<HTMLInputElement>document.getElementById('material_Necesario')).value\r\n    let inde = this.MATERIALES_NECESARIOS.includes(valor);\r\n\r\n    if(!inde){\r\n      this.MATERIALES_NECESARIOS.push(valor)\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  BuscarGruposEnAlmacen(){\r\n    this.api.GetGrupoMp()\r\n      .subscribe((resp:any)=>{\r\n        this.SECCIONES = resp\r\n        alert('THIS IS WORKING')\r\n        //console.log(this.SECCIONES,'SECCIONEEEES');\r\n      })\r\n  }\r\n\r\n  finalizar(){\r\n\r\n    // let name = (<HTMLInputElement>document.getElementById('sustrato_name')).value\r\n\r\n    // let marca = (<HTMLInputElement>document.getElementById('sustrato_marca')).value\r\n    // let gramaje = (<HTMLInputElement>document.getElementById('sustrato_gramaje')).value\r\n    // let calibre = (<HTMLInputElement>document.getElementById('sustrato_calibre')).value\r\n\r\n    // let sustrato = {\r\n    //   nombre:name,\r\n    //   marca,\r\n    //   gramaje,\r\n    //   calibre\r\n    // }\r\n\r\n\r\n    let data = {\r\n      cliente: (<HTMLInputElement>document.getElementById('cliente_Seleccionado')).value,\r\n      producto:(<HTMLInputElement>document.getElementById('nombre_nuevo_producto')).value,\r\n      grupo:(<HTMLInputElement>document.getElementById('grupo_producto')).value,\r\n      cod_cliente:(<HTMLInputElement>document.getElementById('cod_cliente')).value,\r\n      materiales: this.MATERIALES_NECESARIOS,\r\n      post:this.POST,\r\n      ejemplares:this.EJEMPLARES,\r\n      // sustrato: sustrato,\r\n      codigo:(<HTMLInputElement>document.getElementById('cod_producto')).value,\r\n      version:(<HTMLInputElement>document.getElementById('version')).value,\r\n      edicion:(<HTMLInputElement>document.getElementById('edicion')).value,\r\n      montajes:this.montajes\r\n    }\r\n\r\n    \r\n    this.api.postProducto(data)\r\n      .subscribe((resp:any)=>{\r\n        this.Modal_Producto();\r\n        let cliente_id = (<HTMLInputElement>document.getElementById('cliente_Seleccionado')).value;\r\n        this.buscar_producto(cliente_id);\r\n      })\r\n  }\r\n\r\n  ancho(e){\r\n    let ancho = e.target.value;\r\n    \r\n    this.dimensiones.push(ancho);\r\n    let tamano = this.dimensiones.length\r\n\r\n    const largo = (<HTMLInputElement>document.getElementById('largo'))\r\n    const DirFibra = (<HTMLInputElement>document.getElementById('d_fibra'))\r\n\r\n    largo.disabled = false;\r\n\r\n    if(ancho == ''){\r\n      this.dimensiones = []\r\n\r\n      largo.value = ''\r\n      largo.disabled = true;\r\n      DirFibra.disabled = true;\r\n    }\r\n\r\n    if(largo.value != ''){\r\n      DirFibra.disabled = false\r\n    }\r\n    \r\n  }\r\n\r\n  largo(e){\r\n    let largo = e.target.value;\r\n\r\n    let tamano = this.dimensiones.length;\r\n    \r\n    const DirFibra = (<HTMLInputElement>document.getElementById('d_fibra'))\r\n    \r\n    if(largo == ''){\r\n      this.dimensiones.pop();\r\n      DirFibra.disabled = true;\r\n    }\r\n    \r\n    if(largo != ''){\r\n      if(tamano>1){\r\n        this.dimensiones.pop();\r\n      }\r\n      this.dimensiones.push(largo);\r\n      DirFibra.disabled = false;\r\n    }\r\n      // }else{\r\n    //   DirFibra.disabled = false;\r\n    // }\r\n\r\n\r\n  }\r\n\r\n  \r\n  buscar_producto(e){\r\n    this.api.getById(e)\r\n      .subscribe((resp:any)=>{\r\n        this.PRODUCTOS = resp.productos;\r\n        //console.log(this.PRODUCTOS)\r\n      });\r\n\r\n      if(e == \"\"){\r\n        (<HTMLInputElement>document.getElementById('NP_button')).disabled = true;\r\n      }else{\r\n        (<HTMLInputElement>document.getElementById('NP_button')).disabled = false;\r\n      }\r\n  }\r\n\r\n  // sustratos(e){\r\n\r\n  //   this.SUSTRATO = [];\r\n\r\n  //   this.SUSTRATO.push(e.target.value);\r\n\r\n  //   this.Sus_Done = true;\r\n\r\n    \r\n  // }\r\n  NuevoSustrato(){\r\n    this.SUSTRATO = [];\r\n    this.Sus_Done = false;\r\n  }\r\n\r\n  add_materia2(producto, cantidad){\r\n\r\n    let i = this.i_montajes.toString();\r\n\r\n    producto = (<HTMLInputElement>document.getElementById(i)).value\r\n    cantidad = (<HTMLInputElement>document.getElementById(`cantidad${this.i_montajes}`)).value\r\n\r\n    let Material = this.MATERIALES.find(x => x._id === producto);\r\n\r\n    //console.log(Material, '--' )\r\n\r\n    let size = cantidad\r\n    let name = Material.nombre\r\n\r\n    if(this.product_selected == \"Sustrato\"){\r\n      size = '0'\r\n    }\r\n\r\n    if(Material.ancho){\r\n      name = `${Material.nombre} (${Material.ancho} x ${Material.largo})`;\r\n    }\r\n\r\n    let productos = {\r\n      material:name,\r\n      marca:Material.marca,\r\n      producto:producto,\r\n      cantidad: size\r\n    }\r\n\r\n    //console.log(productos);\r\n\r\n    this.OneProduct.materiales[this.i_montajes].push(productos)\r\n    //console.log(this.MATERIALES_NECESARIOS, 'this')\r\n    // this.MATERIALES_NECESARIOS.push(productos);\r\n\r\n\r\n    // let field_material = (<HTMLInputElement>document.getElementById('field_material'))\r\n    // let field_marca = (<HTMLInputElement>document.getElementById('field_marca'))\r\n    // let field_cantidad = (<HTMLInputElement>document.getElementById('field_cantidad'))\r\n\r\n    // let new_material = {\r\n    //   material:material.value,\r\n    //   marca:marca.value,\r\n    //   cantidad:cantidad.value\r\n    // }\r\n\r\n    // this.MATERIALES_NECESARIOS.push(new_material)\r\n\r\n    // field_cantidad.value = '';\r\n    // field_marca.value = '';\r\n    // field_material.value = '';\r\n  }\r\n\r\nadd_materia3(producto, cantidad){\r\n  let i = this.i_montajes.toString();\r\n\r\n  producto = (<HTMLInputElement>document.getElementById(`x-${i}`)).value\r\n  cantidad = (<HTMLInputElement>document.getElementById(`xcantidad${this.i_montajes}`)).value\r\n\r\n\r\n  let Material = this.MATERIALES.find(x => x._id == producto)\r\n \r\n\r\n\r\n  //console.log(Material, '--' )\r\n\r\n  let size = cantidad\r\n  let name = Material.nombre\r\n\r\n  if(this.product_selected == \"Sustrato\"){\r\n    size = '0'\r\n  }\r\n\r\n  if(Material.ancho){\r\n    name = `${Material.producto.nombre} (${Material.producto.ancho} x ${Material.producto.largo})`;\r\n  }\r\n\r\n\r\n\r\n  let productos = {\r\n    material:name,\r\n    marca:Material.marca,\r\n    producto:producto,\r\n    cantidad: size\r\n  }\r\n  \r\n  this.OneProduct.materiales[this.i_montajes].push(productos)\r\n\r\n  this.api.updateProducto(this.OneProduct, this.OneProduct._id)\r\n      .subscribe((resp:any)=>{\r\n        //console.log(resp,'respuesta')\r\n        this.editar(this.OneProduct)\r\n        this.api.getOneById(this.OneProduct._id)\r\n          .subscribe((resp:any)=>{\r\n            //console.log('ok')\r\n          })\r\n          this.Modal_Producto_E()\r\n          this.Modal_Producto_E()\r\n      });\r\n  \r\n  \r\n  \r\n  \r\n\r\n  // this.verProducto(producto)\r\n}\r\n  \r\nadd_materia(producto, cantidad){\r\n\r\n    let i = this.i_montajes.toString();\r\n\r\n    producto = (<HTMLInputElement>document.getElementById(i)).value\r\n    cantidad = (<HTMLInputElement>document.getElementById(`cantidad${this.i_montajes}`)).value\r\n\r\n    let Material = this.MATERIALES.find(x => x._id === producto);\r\n\r\n    //console.log(Material, '--' )\r\n\r\n    let size = cantidad\r\n    let name = Material.nombre\r\n\r\n    if(this.product_selected == \"Sustrato\"){\r\n      size = '0'\r\n    }\r\n\r\n    if(Material.ancho){\r\n      name = `${Material.nombre} (${Material.ancho} x ${Material.largo})`;\r\n    }\r\n\r\n    let productos = {\r\n      material:name,\r\n      marca:Material.marca,\r\n      producto:producto,\r\n      cantidad: size\r\n    }\r\n\r\n    //console.log(productos);\r\n    if(!this.MATERIALES_NECESARIOS[this.i_montajes])\r\n    { \r\n      this.MATERIALES_NECESARIOS[this.i_montajes] = []\r\n    }\r\n\r\n    this.MATERIALES_NECESARIOS[this.i_montajes].push(productos)\r\n    //console.log(this.MATERIALES_NECESARIOS, 'this')\r\n    // this.MATERIALES_NECESARIOS.push(productos);\r\n\r\n\r\n    // let field_material = (<HTMLInputElement>document.getElementById('field_material'))\r\n    // let field_marca = (<HTMLInputElement>document.getElementById('field_marca'))\r\n    // let field_cantidad = (<HTMLInputElement>document.getElementById('field_cantidad'))\r\n\r\n    // let new_material = {\r\n    //   material:material.value,\r\n    //   marca:marca.value,\r\n    //   cantidad:cantidad.value\r\n    // }\r\n\r\n    // this.MATERIALES_NECESARIOS.push(new_material)\r\n\r\n    // field_cantidad.value = '';\r\n    // field_marca.value = '';\r\n    // field_material.value = '';\r\n  }\r\n\r\n  Delete_Material(material2){\r\n\r\n        let deleted = this.MATERIALES_NECESARIOS[this.i_montajes].findIndex(x => x.material == material2)\r\n\r\n        //console.log(deleted)\r\n\r\n        this.MATERIALES_NECESARIOS.splice(deleted, 1);\r\n  }\r\n  Delete_Material2(material2){\r\n\r\n    //console.log(this.OneProduct.materiales[this.i_montajes])\r\n    let deleted = this.OneProduct.materiales[this.i_montajes].findIndex(x => x.producto.nombre == material2)\r\n    //console.log(deleted)\r\n\r\n    this.OneProduct.materiales[this.i_montajes].splice(deleted, 1);\r\n\r\n    // let deleted = this.OneProduct.materiales[this.i_montajes].producto.findIndex(x => x.nombre == material2)\r\n\r\n    // //console.log(deleted)\r\n\r\n    // this.MATERIALES_NECESARIOS.splice(deleted, 1);\r\n}\r\n\r\n  borrarPost(post){\r\n    let i = this.POST.indexOf(post)\r\n\r\n    this.POST.splice(i, 1)\r\n  }\r\n\r\n  borrarPost2(post){\r\n    let i = this.OneProduct.post.indexOf(post)\r\n\r\n    //console.log(i)\r\n\r\n    this.POST.splice(i, 1)\r\n  }\r\n\r\n  editar_producto(){\r\n    this.api.updateProducto(this.OneProduct, this.OneProduct._id)\r\n      .subscribe((resp:any)=>{\r\n        Swal.fire({\r\n          title:'Producto editado con exito!',\r\n          icon:'success',\r\n          showConfirmButton:false\r\n        })\r\n        this.editar(this.OneProduct)\r\n        this.buscar_producto(this.OneProduct.cliente._id)\r\n        this.Modal_Producto_E()\r\n      });\r\n  }\r\n\r\n  verProducto(producto){\r\n\r\n    this.api.getOneById(producto)\r\n      .subscribe((resp:any)=>{\r\n        this.OneProduct = resp.producto\r\n        //console.log('AQUIIIIIIIIIIIIII', this.OneProduct)\r\n        this.ver_Modal_Producto()\r\n      })\r\n  }\r\n  public EDITAR_PRODUCTO:boolean = false;\r\n  Modal_Producto_E(){\r\n    if(this.EDITAR_PRODUCTO){\r\n      this.EDITAR_PRODUCTO = false\r\n    }else{\r\n      this.EDITAR_PRODUCTO = true\r\n      this.EDITAR_PRODUCTO = false\r\n      if(this.OneProduct.materiales[this.i_montajes_].length > 0){\r\n        this.EDITAR_PRODUCTO = true\r\n      }\r\n    }\r\n  }\r\n\r\n  editar(producto){\r\n    this.api.getOneById(producto)\r\n      .subscribe((resp:any)=>{\r\n        this.OneProduct = resp.producto;\r\n        //console.log('AQUIIIIIIIIIIIIII', this.OneProduct);\r\n      })\r\n      if(this.OneProduct){\r\n        this.Modal_Producto_E();\r\n      }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"columns mt-5\">\r\n    <div class=\"column is-3\">\r\n        <div class=\"card\">\r\n            <div class=\"card-content\">\r\n                <div class=\"field\">\r\n                    <label class=\"label\">Cliente:</label>\r\n                    <div class=\"control\">\r\n                        <div class=\"select\">\r\n                            <select id='cliente_Seleccionado' (change)='buscar_producto($event.target.value)' value=''>\r\n                                <option value=\"\">Seleccionar Cliente</option>\r\n                                <option *ngFor='let cliente of CLIENTES' value='{{cliente._id}}'>{{cliente.nombre}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button class=\"button is-primary\" (click)='Modal_Cliente()' *ngIf='usuario.Maquinaria == 2'>Nuevo Cliente</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"column\">\r\n        <div class=\"card\">\r\n            <div class=\"card-content\">\r\n                <div class=\"titulo\">Productos</div>\r\n                <button class=\"button is-primary\" (click)='Modal_Producto()' disabled id='NP_button' *ngIf='usuario.Maquinaria == 2'>Nuevo Producto</button>\r\n                <hr>\r\n                <table class=\"table is-fullwidth\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Especificación</th>\r\n                            <th>Nombre del Producto</th>\r\n                            <th>Ver</th>\r\n                            <th *ngIf='usuario.Maquinaria == 2'>Editar</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor='let producto of PRODUCTOS;let i = index'>\r\n                            <td>E {{producto.cliente.codigo}} - {{producto.codigo}} - {{producto.version}} - {{producto.edicion}}</td>\r\n                            <td>{{producto.producto}}</td>\r\n                            <td><button class=\"button is-primary\" (click)='verProducto(producto._id)'>Ver</button></td>\r\n                            <td *ngIf='usuario.Maquinaria == 2'><button class=\"button is-primary\" (click)='editar(producto._id)'>Editar</button></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':NUEVO_CLIENTE}\">\r\n    <div class=\"modal-background\" (click)='Modal_Cliente()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            <form\r\n            autocomplete=\"off\"\r\n            [formGroup]=\"ClienteForm\"\r\n            (ngSubmit)=\"addCliente()\">\r\n                <div class=\"subtitulo\">Nuevo Cliente</div>\r\n                <hr>\r\n                <div class=\"columns\">\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Nombre del Cliente</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" formControlName='nombre'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column is-3\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Cód. Cliente</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" formControlName='codigo'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <table class=\"table is-fullwidth\">\r\n                    <thead>\r\n                        <th>Nombre de almacen</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let almacen of almacenes;let i from index\">\r\n                            <td>\r\n                                {{almacen}}\r\n\r\n                                <span class=\"icon\" (click)=\"delete_this_almacen(i)\">\r\n                                    <i class=\"fas fa-times\"></i>\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"columns\">\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" id=\"almacen_nuevo\" formControlName='almacenes' [(ngModel)]=\"new_almacen\" name=\"nuevoAlmacen\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column is-3\">\r\n                        <button class=\"button is-success is-outlined\" (click)=\"add_almacen()\" [disabled]=\"!new_almacen\">Agregar</button>\r\n                    </div>\r\n                </div>\r\n                <br>                \r\n                <button class=\"button is-primary\">Nuevo Cliente</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':NUEVO_PRODUCTO}\">\r\n    <div class=\"modal-background\" (click)='Modal_Producto()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body tabla\">\r\n            <div class=\"subtitulo\">\r\n                Nuevo Producto\r\n            </div>\r\n            <div class=\"separador\">\r\n                Información del producto\r\n            </div>\r\n            <br>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Nombre Producto</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" id='nombre_nuevo_producto' placeholder=\"Nombre Producto\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Categoria</label>\r\n                        <div class=\"select\">\r\n                            <select id='grupo_producto'>\r\n                                <option *ngFor='let grupo of GRUPOS' value=\"{{grupo._id}}\">{{grupo.nombre}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Cod. Producto</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" id='cod_producto' placeholder=\"Código de producto\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Versión</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" id='version' placeholder=\"Versión\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Especificación</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" id='edicion' placeholder=\"Especificación\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Código de producto de cliente</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" placeholder=\"Código de producto de cliente\" id=\"cod_cliente\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <input type=\"checkbox\" name=\"troquelado\" id=\"troquelado\" (click)='post_impresion(\"Troquelado\")'><label> Troquelado</label><br>\r\n                    <input type=\"checkbox\" name=\"pegado\" id=\"pegado\" (click)='post_impresion(\"Pegado\")'><label> Pegado</label><br>\r\n                    <input type=\"checkbox\" name=\"corte\" id=\"corte\" (click)='post_impresion(\"Corte Recto\")'><label> Corte Recto</label><br>\r\n                </div>\r\n            </div>\r\n            <div class=\"separador\">\r\n                Pre Impresión\r\n            </div>\r\n            <br>\r\n\r\n            <!-- <div class=\"columns\"> -->\r\n            \r\n            <div class=\"columns is-3\">\r\n                <div class=\"column\">\r\n                    <div class=\"columns\">\r\n                        <div class=\"column\">\r\n                            <label for=\"\" class=\"label\">Cantidad de montajes:</label>\r\n                        </div>\r\n                        <div class=\"column is-4\">\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" min=\"1\" max=\"5\" placeholder=\"Cantidad de montajes\" [(ngModel)]=\"montajes\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column \">\r\n                    <div class=\"columns\">\r\n                        <div class=\"column\">\r\n                            <label for=\"\" class=\"label\">Montaje:</label>\r\n                        </div>\r\n                        <div class=\"column\">\r\n                            <div class=\"field\">\r\n                                <div class=\"control\">\r\n                                    <div class=\"select\">\r\n                                        <select name=\"montajes\" [(ngModel)]=\"i_montajes\">\r\n                                            <option value=\"{{i}}\" *ngFor=\"let e of [].constructor(montajes); let i = index\">Montaje {{NumToLet(i)}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"separador\">\r\n                Materia Prima - Montaje\r\n            </div>\r\n            <br>\r\n\r\n\r\n                <!-- <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Ejemplares Montados:</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"number\" class=\"input\" min='1' value=\"1\" (change)='Ejemplar($event)'>\r\n                        </div>\r\n                    </div>\r\n                </div> -->\r\n                <!-- <div class=\"column\">\r\n                    <input type=\"checkbox\" name=\"troquelado\" id=\"troquelado\" (click)='post_impresion(\"Troquelado\")'><label> Troquelado</label><br>\r\n                    <input type=\"checkbox\" name=\"pegado\" id=\"pegado\" (click)='post_impresion(\"Pegado\")'><label> Pegado</label><br>\r\n                    <input type=\"checkbox\" name=\"corte\" id=\"corte\" (click)='post_impresion(\"Corte Recto\")'><label> Corte Recto</label><br>\r\n                \r\n                </div> -->\r\n                <!-- <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\"> <br> Ancho:</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" id='ancho' (change)='ancho($event)'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\"> <br> Largo:</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" id='largo' (change)='largo($event)' disabled>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Dirección de Fibra:</label>\r\n                        <div class=\"control\">\r\n                            <div class=\"select\">\r\n                                <select name=\"d_fibra\" id=\"d_fibra\" disabled>\r\n                                    <option value=\"{{dim}}\" *ngFor='let dim of dimensiones'>{{dim}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> -->\r\n            <!-- </div> -->\r\n\r\n            <!-- <div class=\"separador\">\r\n                Post Impresión\r\n            </div>\r\n            <br>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">POST-IMPRESION</label>\r\n                        <div class=\"select is-multiple\">\r\n                            <select  multiple value='Recto' id='p_i' (change)='post_impresion($event)'>\r\n                                <option value=\"Recto\">Corte Recto</option>\r\n                                <option value=\"Doblado\">Doblado</option>\r\n                                <option value=\"Signado\">Signado</option>\r\n                                <option value=\"Fleje\">De Fleje</option>\r\n                                <option value=\"Molde\">De Molde</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <ul>\r\n                        <li *ngFor='let post of POST' (click)='borrarPost(post)'>{{post}}</li>\r\n                    </ul>\r\n                </div>\r\n            </div> -->\r\n\r\n            <!-- SELECCION DE SUSTRATO SACADO DE LAS BOBINAS *************** -->\r\n\r\n            <!-- <div class=\"separador\">\r\n                Sustratos\r\n            </div>\r\n            <br>\r\n\r\n            <div class=\"Sustrato\" *ngIf='SUSTRATO.length > 0'>\r\n                <div class=\"columns\">\r\n                    <div class=\"column\">\r\n                        {{SUSTRATO}} ({{dimensiones[0]}} x {{dimensiones[1]}})\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <button class=\"button is-danger is-outlined is-small\" (click)='NuevoSustrato()'>\r\n                            <span>Eliminar</span>\r\n                            <span class=\"icon is-small\">\r\n                              <i class=\"fas fa-times\"></i>\r\n                            </span>\r\n                          </button>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n\r\n            <!-- <div class=\"done\" *ngIf='!Sus_Done'>\r\n                <div class=\"columns\">\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Sustrato</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" placeholder=\"Sustrato\" id='sustrato_name'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Marca</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" placeholder=\"Marca\" id='sustrato_marca'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column is-2\">\r\n                        <div class=\"field\">\r\n                            <label  class=\"label\">Gramaje</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" placeholder=\"Gramaje\" id='sustrato_gramaje'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column is-2\">\r\n                        <div class=\"field\">\r\n                            <label  class=\"label\">Calibre</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" placeholder=\"Calibre\" id='sustrato_calibre'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <br>\r\n                            <button class=\"button is-success is-outlined\" (click)='sustratos($event)'>\r\n                                <span class=\"icon is-small\">\r\n                                  <i class=\"fas fa-check\"></i>\r\n                                </span>\r\n                                <span>Agregar</span>\r\n                              </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n            <br>\r\n                    \r\n            <!--\r\n            <div class=\"card\">\r\n                <div class=\"card-content\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Tipo</label>\r\n                        <div class=\"select\">\r\n                            <select id='sustrato'>\r\n                                <option value=\"{{sustrato}}\" *ngFor='let sustrato of SUSTRATO'>{{sustrato}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"columns\">\r\n                        <div class=\"column\">\r\n                            <label class=\"label\">Ejemplares montados:</label>\r\n                        </div>\r\n                        <div class=\"column is-4\">\r\n                            <div class=\"field\">\r\n                                <div class=\"control\">\r\n                                    <input type=\"number\" class=\"input\" placeholder=\"Ejemplares montados\" (change)=\"Ejemplar($event.target.value)\" [(ngModel)]=\"EJEMPLARES[i_montajes]\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <!-- <div class=\"columns\">\r\n                        <div class=\"column\">\r\n                            <div class=\"field\">\r\n                                <label class=\"label\">Código de peliculas</label>\r\n                                <div class=\"control\">\r\n                                    <input type=\"text\" class=\"input\" placeholder=\"Código de peliculas\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"materiales\" *ngFor=\"let e of [].constructor(montajes); let i = index\">\r\n                <table class=\"table is-fullwidth\" *ngIf=\"i == i_montajes\">\r\n                    <thead>\r\n                    <tr>\r\n                            <th>Materia</th>\r\n                            <th>Marca</th>\r\n                            <th>Cantidad</th>\r\n                            <th>Eliminar</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor='let Material of MATERIALES_NECESARIOS[i_montajes]'>\r\n                            <td>{{Material.material}} \r\n                                <ng-container *ngIf='Material.ancho'>\r\n                                    ({{Material.ancho}} x {{Material.ancho}})\r\n                                </ng-container>\r\n                            </td>\r\n                            <td>{{Material.marca}}</td>\r\n                            <td>{{Material.cantidad}}</td>\r\n                            <td>\r\n                                <button class=\"button is-danger is-outlined is-small\" (click)='Delete_Material(Material.material)'>\r\n                                    <span class=\"icon is-small\">\r\n                                      <i class=\"fas fa-check\"></i>\r\n                                    </span>\r\n                                    <span>Eliminar</span>\r\n                                  </button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div class=\"columns\" *ngIf=\"i == i_montajes\">\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Categoria:</label>\r\n                            <div class=\"select\">\r\n                                <select name=\"\" id=\"\" (change)='selecciona_producto($event.target.value)'>\r\n                                    <option value=\"0\">Selecciona Categoria</option>\r\n                                    <option value=\"{{seccion.nombre}}\" *ngFor='let seccion of SECCIONES'>{{seccion.nombre}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"columns\" *ngIf=\"i == i_montajes\">\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Producto:</label>\r\n                            <div class=\"select\">\r\n                                <select name=\"\" id=\"{{i}}\" (change)='producto_seleccionado($event.target.value)' disabled #producto>\r\n                                    <option value=\"0\">Selecciona Producto</option>\r\n                                    <ng-container *ngFor='let producto of MATERIALES'>\r\n                                        <ng-container *ngIf='producto.grupo.nombre === product_selected'>\r\n                                            <option value=\"{{producto._id}}\">{{producto.nombre}} ({{producto.marca}})\r\n                                                <ng-container *ngIf='producto.ancho'>\r\n                                                    ({{producto.ancho}} x {{producto.largo}})\r\n                                                </ng-container>\r\n                                            </option>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <div class=\"field\" id='cant'>\r\n                            <label class=\"label\">Cantidad:</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" id='cantidad{{i}}' class=\"input\" #size [disabled]='!_producto_seleccionado'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    <div class=\"field\" *ngIf=\"i == i_montajes\">\r\n                        <label class=\"label\"></label>\r\n                        <div class=\"control\">\r\n                            <button class=\"button is-success is-outlined\" (click)=\"add_materia(i, size)\">\r\n                                <span class=\"icon is-small\">\r\n                                  <i class=\"fas fa-check\"></i>\r\n                                </span>\r\n                                <span>Agregar</span>\r\n                              </button>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n            \r\n\r\n            <!-- <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Materia Prima</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" placeholder=\"Materia Prima\" #material id='field_material'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Marca</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" placeholder=\"Marca\" #marca id='field_marca'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column is-2\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Cantidad</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"number\" class=\"input\" placeholder=\"cantidad\" #cantidad id='field_cantidad'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column is-3\"><br>\r\n                    <div class=\"field\">\r\n                        <label class=\"label\"></label>\r\n                        <div class=\"control\">\r\n                            <button class=\"button is-success is-outlined\" (click)='add_materia(material, marca, cantidad)'>\r\n                                <span class=\"icon is-small\">\r\n                                  <i class=\"fas fa-check\"></i>\r\n                                </span>\r\n                                <span>Agregar</span>\r\n                              </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n\r\n\r\n\r\n            <!-- *****   SELECCION DE MATERIA PRIMA SACADO DEL INVENTARIO ****************** -->\r\n\r\n            <!-- <div class=\"card\" *ngFor='let grupo of GRUPOS_MATERIA'>\r\n                <div class=\"card-content\">\r\n                    <b>{{grupo.nombre}}</b>\r\n                    <table class=\"table is-striped is-fullwidth\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Selecciona</th>\r\n                                <th>Materia Prima</th>\r\n                                <th><abbr title=\"Cantidad necesaria por cada 1000\">Cantidad</abbr></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor='let material of MATERIALES'>\r\n                                <ng-container *ngIf='material.grupo.nombre === grupo.nombre'>\r\n                                    <td><input type=\"checkbox\" name='necesario' (click)='enable(material.nombre)'></td>\r\n                                    <td>{{material.nombre}}</td>\r\n                                    <td><input type=\"number\" class=\"input\" id='{{material.nombre}}' (change)='just_a_sec($event)' disabled></td>\r\n                                </ng-container>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div> -->\r\n            <hr>\r\n            <button class=\"button is-primary\" (click)='finalizar()'>Registrar Producto</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':VER_PRODUCTO}\">\r\n    <div class=\"modal-background\" (click)='ver_Modal_Producto()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n\r\n                </div>\r\n                <div class=\"column\">\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                            <th>\r\n                                Especificación del Producto\r\n                            </th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <td>\r\n           E-{{OneProduct.cliente.codigo}}-{{OneProduct.codigo}}-{{OneProduct.version}}-{{OneProduct.edicion}}\r\n                            </td>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class=\"separador\">\r\n                Identificacion del Producto\r\n            </div>\r\n            <br>\r\n            \r\n            <table class=\"table is-fullwidth\">\r\n                <tr>\r\n                    <th>Cliente:</th>\r\n                    <td>{{OneProduct.cliente.nombre}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Producto:</th>\r\n                    <td>{{OneProduct.producto}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Código del producto:</th>\r\n                    <td>{{OneProduct.cliente.codigo}}-{{OneProduct.codigo}}-{{OneProduct.version}}</td>\r\n                </tr>\r\n            </table>\r\n\r\n            <div class=\"field\">\r\n                <label class=\"label\">Montaje</label>\r\n                <div class=\"select\">\r\n                    <select id=\"\" class=\"select\" (click)=\"cambiarCalculo()\" name=\"montaje\" [(ngModel)]=\"i_montajes\">\r\n                        <option value=\"{{i}}\" *ngFor=\"let e of [].constructor(OneProduct.montajes); let i = index\">M-{{OneProduct.cliente.codigo}}-{{OneProduct.codigo}}-{{OneProduct.version}}-{{NumToLet(i)}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"separador\">\r\n                Materia Prima\r\n            </div>\r\n            <br>\r\n\r\n            <table class=\"table is-fullwidth\">\r\n                <thead>\r\n                    <th>\r\n                        Sustrato\r\n                    </th>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let TintaProducto of OneProduct.materiales[i_montajes]\">\r\n                        <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Sustrato'\">\r\n                            <td>\r\n                                {{TintaProducto.producto.nombre}} ({{TintaProducto.producto.ancho}} x {{TintaProducto.producto.largo}})\r\n                                <br>\r\n                                <table class=\"table is-bordered\">\r\n                                    <thead>\r\n                                        <th>Calibre (pt.)</th>\r\n                                        <th>Gramaje (g/m²):</th>\r\n                                        <th>Dirección de fibra:</th>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>{{TintaProducto.producto.calibre}}</td>\r\n                                            <td>{{TintaProducto.producto.gramaje}}</td>\r\n                                            <td>{{TintaProducto.producto.largo}}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </td>\r\n                        </ng-container>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <table class=\"table is-fullwidth\">\r\n                <thead>\r\n                    <th>\r\n                        Colores Aprobados:\r\n                    </th>\r\n                    <th>\r\n                        Tintas (Marca):\r\n                    </th>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let TintaProducto of OneProduct.materiales[i_montajes]\">\r\n                        <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Tinta'\">\r\n                            <td>\r\n                                {{TintaProducto.producto.color}}\r\n                            </td>\r\n                            <td>\r\n                                {{TintaProducto.producto.nombre}}({{TintaProducto.producto.marca}})\r\n                            </td>\r\n                        </ng-container>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <table class=\"table is-fullwidth\">\r\n                <thead>\r\n                    <th>\r\n                        Barniz aprobado \r\n                    </th>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let TintaProducto of OneProduct.materiales[i_montajes]\">\r\n                        <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Barniz'\">\r\n                            {{TintaProducto.producto.nombre}} ({{TintaProducto.producto.marca}})\r\n                        </ng-container>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div class=\"separador\">\r\n                Pre impresion\r\n            </div>\r\n            <br>\r\n\r\n            <table class=\"table is-fullwidth\">\r\n                <thead>\r\n                    <th>\r\n                        Código de peliculas:\r\n                    </th>\r\n                    <td>\r\n                        <ng-container tr *ngFor=\"let TintaProducto of OneProduct.materiales[i_montajes];let i = index\">\r\n                            <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Tinta'\">\r\n                                <p *ngIf=\"TintaProducto.producto.color === 'Negro'\"><b>Negro:</b>{{OneProduct.cliente.codigo}}-{{OneProduct.codigo}}-{{OneProduct.version}}-{{NumToLet(i_montajes)}}-1 </p>\r\n                                <p *ngIf=\"TintaProducto.producto.color === 'Cyan'\"><b>Cyan:</b>{{OneProduct.cliente.codigo}}-{{OneProduct.codigo}}-{{OneProduct.version}}-{{NumToLet(i_montajes)}}-2 </p>\r\n                                <p *ngIf=\"TintaProducto.producto.color === 'Magenta'\"><b>Magenta:</b>{{OneProduct.cliente.codigo}}-{{OneProduct.codigo}}-{{OneProduct.version}}-{{NumToLet(i_montajes)}}-3 </p>\r\n                                <p *ngIf=\"TintaProducto.producto.color === 'Amarillo'\"><b>Amarillo:</b>{{OneProduct.cliente.codigo}}-{{OneProduct.codigo}}-{{OneProduct.version}}-{{NumToLet(i_montajes)}}-4 </p>\r\n                                <div *ngIf=\"TintaProducto.producto.color != 'Amarillo' && TintaProducto.producto.color != 'Magenta' && TintaProducto.producto.color != 'Cyan' && TintaProducto.producto.color != 'Negro' \">\r\n                                    <b>{{TintaProducto.producto.color}}:</b> \r\n                                    <ng-container *ngIf=\"cinco\">\r\n                                        {{OneProduct.cliente.codigo}}-{{OneProduct.codigo}}-{{OneProduct.version}}-{{NumToLet(i_montajes)}}-{{sumaTintas(i)}}\r\n                                    </ng-container>\r\n                                </div>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </td>\r\n                </thead>\r\n            </table>\r\n            <div class=\"separador\">\r\n                Impresión\r\n            </div>\r\n            <br>\r\n\r\n            <table class=\"table is-fullwidth\">\r\n                <thead>\r\n                    <th>Tamaño de Impresión</th>\r\n                    <th>Ejemplares montados</th>\r\n                </thead>\r\n                <tbody>\r\n                    <td>\r\n                        <table class=\"table is-bordered\">\r\n                            <thead>\r\n                                <th>Ancho</th>\r\n                                <th>Largo</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let TintaProducto of OneProduct.materiales[i_montajes]\">\r\n                                    <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Sustrato'\">\r\n                                        <td>{{TintaProducto.producto.ancho}} cm.</td>\r\n                                        <td>{{TintaProducto.producto.largo}} cm.</td>\r\n                                    </ng-container>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                    <td>\r\n                       {{ OneProduct.ejemplares[i_montajes] }} Ejemplares\r\n                    </td>\r\n                </tbody>\r\n            </table>\r\n            <div class=\"separador\">\r\n                Post Impresión\r\n            </div>\r\n            <br>\r\n            <table class=\"table is-fullwidth\">\r\n                <thead>\r\n                    <ng-container *ngFor=\"let TintaProducto of OneProduct.materiales[i_montajes]\">\r\n                        <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Pega'\">\r\n                            <th>Pegamento aprobado</th>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Cajas Corrugadas'\">\r\n                            <th>Cantidad de unidades por caja</th>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </thead>\r\n                <tbody>\r\n                    <ng-container *ngFor=\"let TintaProducto of OneProduct.materiales[i_montajes]\">\r\n                        <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Pega'\">\r\n                        <td>\r\n                            {{TintaProducto.producto.nombre}} ({{TintaProducto.producto.marca}})\r\n                        </td>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Cajas Corrugadas'\">\r\n                            <td>{{TintaProducto.cantidad}}</td>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <!-- <div class=\"modal-card-body tabla\">\r\n            <div class=\"subtitulo\">\r\n                Nuevo Producto\r\n            </div>\r\n            <div class=\"separador\">\r\n                Información del producto\r\n            </div>\r\n            <br>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Nombre Producto</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" id='nombre_nuevo_producto' value='{{OneProduct.producto}}'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Categoria</label>\r\n                        <div class=\"select\">\r\n                            <select id='grupo_producto' value='{{OneProduct.grupo._id}}'>\r\n                                <option *ngFor='let grupo of GRUPOS' value=\"{{grupo._id}}\">{{grupo.nombre}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Cod. Producto</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" id='cod_producto' value='{{OneProduct.codigo}}'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Version</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" id='version' value='{{OneProduct.version}}'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"separador\">\r\n                Especificaciones\r\n            </div>\r\n            <br>\r\n\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Ejemplares Montados:</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"number\" class=\"input\" min='1' value=\"1\" (change)='Ejemplar($event)' value='{{OneProduct.ejemplares}}'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Dim. de la hoja:</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" id='dimensiones' value='{{OneProduct.dimensiones}}'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Dirección de Fibra:</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" id='d_fibra' value='{{OneProduct.fibra}}'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"separador\">\r\n                Post Impresión\r\n            </div>\r\n            <br>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">POST-IMPRESION</label>\r\n                        <div class=\"select is-multiple\">\r\n                            <select  multiple value='Recto' id='p_i' (change)='post_impresion($event)'>\r\n                                <option value=\"Recto\">Corte Recto</option>\r\n                                <option value=\"Doblado\">Doblado</option>\r\n                                <option value=\"Signado\">Signado</option>\r\n                                <option value=\"Fleje\">De Fleje</option>\r\n                                <option value=\"Molde\">De Molde</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <ul>\r\n                        <li *ngFor='let post of OneProduct.post' (click)='borrarPost2(post)'>{{post}}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"separador\">\r\n                Sustratos\r\n            </div>\r\n            <br>\r\n            <div class=\"card\">\r\n                <div class=\"card-content\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Tipo</label>\r\n                        <div class=\"select\">\r\n                            <select id='sustrato' value='{{OneProduct.sustrato}}'>\r\n                                <option value=\"{{sustrato}}\" *ngFor='let sustrato of SUSTRATO'>{{sustrato}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"separador\">\r\n                Materia Prima\r\n            </div>\r\n            <br>\r\n            <div class=\"card\" *ngFor='let grupo of GRUPOS_MATERIA'>\r\n                <div class=\"card-content\">\r\n                    <b>{{grupo.nombre}}</b>\r\n                    <table class=\"table is-striped is-fullwidth\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Selecciona</th>\r\n                                <th>Materia Prima</th>\r\n                                <th><abbr title=\"Cantidad necesaria por cada 1000\">Cantidad</abbr></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor='let material of OneProduct.materiales'>\r\n                               \r\n                                    <td><input type=\"checkbox\" name='necesario' (click)='enable(material.nombre)' checked></td>\r\n                                    <td>{{material.material}}</td>\r\n                                    <td><input type=\"number\" class=\"input\" id='{{material.nombre}}' (change)='just_a_sec($event)' value='{{material.cantidad}}'></td>\r\n                            </tr>\r\n                            <tr *ngFor='let material of MATERIALES'>\r\n                                <ng-container *ngIf='material.grupo.nombre === grupo.nombre'>\r\n                                    <ng-container *ngIf='material.nombre == OneProduct.materiales.material'>\r\n                                    <td><input type=\"checkbox\" name='necesario' (click)='enable(material._id)'></td>\r\n                                    <td>{{material.nombre}}</td>\r\n                                    <td><input type=\"number\" class=\"input\" id='{{material._id}}' (change)='just_a_sec($event)' disabled></td>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n        </div> -->\r\n        <!-- <div class=\"modal\" [ngClass]=\"{'is-active':EDITAR_PRODUCTO}\">\r\n            <div class=\"modal-background\" (click)='Modal_Producto_E()'></div> -->\r\n\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':EDITAR_PRODUCTO}\">\r\n    <div class=\"modal-background\" (click)='Modal_Producto_E()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body tabla\">\r\n            <div class=\"subtitulo\">\r\n                Editar Producto\r\n            </div>\r\n            <div class=\"separador\">\r\n                Información del producto\r\n            </div>\r\n            <br>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Nombre Producto</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" id='nombre_nuevo_producto' placeholder=\"Nombre Producto\" [(ngModel)]=\"OneProduct.producto\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Categoria</label>\r\n                        <div class=\"select\">\r\n                            <select id='grupo_producto'>\r\n                                <option *ngFor='let grupo of GRUPOS' [(ngModel)]=\"OneProduct.grupo._id\">{{grupo.nombre}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Cod. Producto</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" id='cod_producto' placeholder=\"Código de producto\" [(ngModel)]=\"OneProduct.codigo\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Versión</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" id='version' placeholder=\"Versión\" [(ngModel)]=\"OneProduct.version\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Especificación</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" id='edicion' placeholder=\"Especificación\" [(ngModel)]=\"OneProduct.edicion\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Código de producto de cliente</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" placeholder=\"Código de producto de cliente\" id=\"cod_cliente\" [(ngModel)]=\"OneProduct.cod_cliente\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <input type=\"checkbox\" name=\"troquelado\" id=\"troquelado\" (click)='post_impresion(\"Troquelado\")'><label> Troquelado</label><br>\r\n                    <input type=\"checkbox\" name=\"pegado\" id=\"pegado\" (click)='post_impresion(\"Pegado\")'><label> Pegado</label><br>\r\n                    <input type=\"checkbox\" name=\"corte\" id=\"corte\" (click)='post_impresion(\"Corte Recto\")'><label> Corte Recto</label><br>\r\n                </div>\r\n            </div>\r\n            <div class=\"separador\">\r\n                Pre Impresión\r\n            </div>\r\n            <br>\r\n\r\n            <!-- <div class=\"columns\"> -->\r\n            \r\n            <div class=\"columns is-3\">\r\n                <div class=\"column\">\r\n                    <div class=\"columns\">\r\n                        <div class=\"column\">\r\n                            <label for=\"\" class=\"label\">Cantidad de montajes:</label>\r\n                        </div>\r\n                        <div class=\"column is-4\">\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" min=\"1\" max=\"5\" placeholder=\"Cantidad de montajes\" [(ngModel)]=\"OneProduct.montajes\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column \">\r\n                    <div class=\"columns\">\r\n                        <div class=\"column\">\r\n                            <label for=\"\" class=\"label\">Montaje:</label>\r\n                        </div>\r\n                        <div class=\"column\">\r\n                            <div class=\"field\">\r\n                                <div class=\"control\">\r\n                                    <div class=\"select\">\r\n                                        <select name=\"montajes\" [(ngModel)]=\"i_montajes_\">\r\n                                            <option value=\"{{i}}\" *ngFor=\"let e of [].constructor(OneProduct.montajes); let i = index\">Montaje {{NumToLet(i)}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"separador\">\r\n                Materia Prima - Montaje\r\n            </div>\r\n            <br>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"columns\">\r\n                        <div class=\"column\">\r\n                            <label class=\"label\">Ejemplares montados:</label>\r\n                        </div>\r\n                        <div class=\"column is-4\">\r\n                            <div class=\"field\">\r\n                                <div class=\"control\">\r\n                                    <input type=\"number\" class=\"input\" placeholder=\"Ejemplares montados\" (change)=\"Ejemplar($event.target.value)\" [(ngModel)]=\"OneProduct.ejemplares[i_montajes_]\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"materiales\" *ngFor=\"let e of [].constructor(OneProduct.montajes); let i = index\">\r\n                <table class=\"table is-fullwidth\" *ngIf=\"i == i_montajes_\">\r\n                    <thead>\r\n                    <tr>\r\n                            <th>Materia</th>\r\n                            <th>Marca</th>\r\n                            <th>Cantidad</th>\r\n                            <th>Eliminar</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor='let Material of OneProduct.materiales[i_montajes_]'>\r\n                            <td>{{Material.producto.nombre}} \r\n                                <ng-container *ngIf='Material.ancho'>\r\n                                    ({{Material.producto.ancho}} x {{Material.producto.ancho}})\r\n                                </ng-container>\r\n                            </td>\r\n                            <td>{{Material.producto.marca}}</td>\r\n                            <td>{{Material.cantidad}}</td>\r\n                            <td>\r\n                                <button class=\"button is-danger is-outlined is-small\" (click)='Delete_Material2(Material.producto.nombre)'>\r\n                                    <span class=\"icon is-small\">\r\n                                      <i class=\"fas fa-check\"></i>\r\n                                    </span>\r\n                                    <span>Eliminar</span>\r\n                                  </button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div class=\"columns\" *ngIf=\"i == i_montajes_\">\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Categoria:</label>\r\n                            <div class=\"select\">\r\n                                <select name=\"\" id=\"\" (change)='selecciona_producto2($event.target.value)'>\r\n                                    <option value=\"0\">Selecciona Categoria</option>\r\n                                    <option value=\"{{seccion.nombre}}\" *ngFor='let seccion of SECCIONES'>{{seccion.nombre}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"columns\" *ngIf=\"i == i_montajes_\">\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Producto:</label>\r\n                            <div class=\"select\">\r\n                                <select name=\"\" id=\"x-{{i}}\" (change)='producto_seleccionado($event.target.value)' disabled #producto>\r\n                                    <option value=\"0\"> Selecciona Producto</option>\r\n                                    <ng-container *ngFor='let producto of MATERIALES'>\r\n                                        <ng-container *ngIf='producto.grupo.nombre === product_selected'>\r\n                                            <option value=\"{{producto._id}}\">{{producto.nombre}} ({{producto.marca}})\r\n                                                <ng-container *ngIf='producto.ancho'>\r\n                                                    ({{producto.ancho}} x {{producto.largo}})\r\n                                                </ng-container>\r\n                                            </option>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <div class=\"field\" id='cant'>\r\n                            <label class=\"label\">Cantidad:</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" id='xcantidad{{i}}' class=\"input\" #size [disabled]='!_producto_seleccionado'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    <div class=\"field\" *ngIf=\"i == i_montajes_\">\r\n                        <label class=\"label\"></label>\r\n                        <div class=\"control\">\r\n                            <button class=\"button is-success is-outlined\" (click)=\"add_materia3(i, size)\">\r\n                                <span class=\"icon is-small\">\r\n                                  <i class=\"fas fa-check\"></i>\r\n                                </span>\r\n                                <span>Agregar</span>\r\n                              </button>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n            \r\n\r\n            <!-- <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Materia Prima</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" placeholder=\"Materia Prima\" #material id='field_material'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Marca</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" placeholder=\"Marca\" #marca id='field_marca'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column is-2\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Cantidad</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"number\" class=\"input\" placeholder=\"cantidad\" #cantidad id='field_cantidad'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column is-3\"><br>\r\n                    <div class=\"field\">\r\n                        <label class=\"label\"></label>\r\n                        <div class=\"control\">\r\n                            <button class=\"button is-success is-outlined\" (click)='add_materia(material, marca, cantidad)'>\r\n                                <span class=\"icon is-small\">\r\n                                  <i class=\"fas fa-check\"></i>\r\n                                </span>\r\n                                <span>Agregar</span>\r\n                              </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n\r\n\r\n\r\n            <!-- *****   SELECCION DE MATERIA PRIMA SACADO DEL INVENTARIO ****************** -->\r\n\r\n            <!-- <div class=\"card\" *ngFor='let grupo of GRUPOS_MATERIA'>\r\n                <div class=\"card-content\">\r\n                    <b>{{grupo.nombre}}</b>\r\n                    <table class=\"table is-striped is-fullwidth\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Selecciona</th>\r\n                                <th>Materia Prima</th>\r\n                                <th><abbr title=\"Cantidad necesaria por cada 1000\">Cantidad</abbr></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor='let material of MATERIALES'>\r\n                                <ng-container *ngIf='material.grupo.nombre === grupo.nombre'>\r\n                                    <td><input type=\"checkbox\" name='necesario' (click)='enable(material.nombre)'></td>\r\n                                    <td>{{material.nombre}}</td>\r\n                                    <td><input type=\"number\" class=\"input\" id='{{material.nombre}}' (change)='just_a_sec($event)' disabled></td>\r\n                                </ng-container>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div> -->\r\n            <hr>\r\n            <button class=\"button is-primary\" (click)=\"editar_producto()\">Editar Producto</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { RestApiService } from 'src/app/services/rest-api.service';\r\nimport { MaquinaInterface } from 'src/app/interface/maquinas.interfase';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-maquinaria',\r\n  templateUrl: './maquinaria.component.html',\r\n  styleUrls: ['./maquinaria.component.css']\r\n})\r\nexport class MaquinariaComponent implements OnInit {\r\n\r\n  public NUEVA_MAQUINA:boolean = false;\r\n  public NUEVO_GRUPO:boolean = false;\r\n  public MAQUINAS:MaquinaInterface[] = [];\r\n  public FUNCIONES = [];\r\n  public FASES = [];\r\n  public GRUPOS = [];\r\n\r\n  public MaquinaID\r\n\r\n  public EDITAR_MAQUINA:boolean = false;\r\n\r\n\r\n  maquinaForm: FormGroup = this.fb.group({\r\n    nombre:['', Validators.required],\r\n    tipo:['', Validators.required],\r\n    colores:[''],\r\n    cph:['', Validators.required],\r\n  })\r\n\r\n  constructor(private fb:FormBuilder,\r\n              private api:RestApiService) { \r\n                this.usuario = api.usuario\r\n              }\r\n\r\n  ngOnInit(): void {\r\n    this.ObtenerMaquinas();\r\n    this.obtenerGrupos();\r\n  }\r\n\r\n  public usuario\r\n\r\n  public Modal_Maquina(){\r\n    if(this.NUEVA_MAQUINA){\r\n      this.NUEVA_MAQUINA = false;\r\n    }else{\r\n      this.NUEVA_MAQUINA = true;\r\n    }\r\n  }\r\n\r\n  Edicion_Modal_Maquina(){\r\n    if(this.EDITAR_MAQUINA){\r\n      this.EDITAR_MAQUINA = false;\r\n    }else{\r\n      this.EDITAR_MAQUINA = true;\r\n    }\r\n  }\r\n\r\n  EditarMaquina(id){\r\n    this.Edicion_Modal_Maquina();\r\n    this.api.getMaquinaID(id)\r\n      .subscribe((resp:any)=>{\r\n        this.MaquinaID = resp;\r\n      })\r\n  }\r\n\r\n  Finalizar_Edicion_M(){\r\n    this.MaquinaID.tipo = this.MaquinaID.tipo.toUpperCase()\r\n\r\n    this.api.putMaquina(this.MaquinaID._id, this.MaquinaID)\r\n      .subscribe((resp:any)=>{\r\n        this.ObtenerMaquinas();\r\n        this.Edicion_Modal_Maquina()\r\n        Swal.fire({\r\n          position:'center',\r\n          icon:'success',\r\n          title:'Edición realizada con exito',\r\n          showConfirmButton: false,\r\n          timer:1500\r\n\r\n        })\r\n      })\r\n  }\r\n\r\n  nuevaMaquina(){\r\n    this.api.PostMaquinas(this.maquinaForm.value)\r\n      .subscribe(resp =>{\r\n        this.maquinaForm.reset();\r\n        this.NUEVA_MAQUINA = false;\r\n        this.ObtenerMaquinas();\r\n      })\r\n  }\r\n\r\n  ObtenerMaquinas(){\r\n    this.api.GetMaquinas()\r\n      .subscribe(maquinas => {\r\n        this.MAQUINAS = maquinas;\r\n        this.obtenerTipos();\r\n      });\r\n  }\r\n\r\n  BorrarMaquina_(id){\r\n    Swal.fire({\r\n      title:'¿Estas Seguro?',\r\n      text:'No podras revertir esta acción',\r\n      icon:'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor:'#d33',\r\n      cancelButtonText:'Cancelar',\r\n      confirmButtonText: 'Si, Eliminar!'\r\n    }).then((result) => {\r\n      if(result.isConfirmed) {\r\n        this.BorrarMaquina(id)\r\n        Swal.fire({\r\n          position:'center',\r\n          icon:'success',\r\n          title:'Esta maquina ha sido eliminada',\r\n          showConfirmButton: false,\r\n          timer:1500\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  EliminarGrupo_(id){\r\n    Swal.fire({\r\n      title:'¿Estas Seguro?',\r\n      text:'La eliminación de grupos afecta de manera negativa si ya existen productos creados en el sistema',\r\n      icon:'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor:'#d33',\r\n      cancelButtonText:'Cancelar',\r\n      confirmButtonText: 'Si, Eliminar!'\r\n    }).then((result) => {\r\n      if(result.isConfirmed) {\r\n        this.EliminarGrupo(id)\r\n        Swal.fire({\r\n          position:'center',\r\n          icon:'success',\r\n          title:'Este grupo ha sido eliminado',\r\n          showConfirmButton: false,\r\n          timer:1500\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  EliminarGrupo(id){\r\n    this.api.deleteGrupo(id)\r\n      .subscribe((resp:any)=>{\r\n        this.obtenerGrupos();\r\n      })\r\n  }\r\n\r\n  BorrarMaquina(id:any){\r\n    this.api.DeleteMaquinas(id)\r\n      .subscribe(resp=>{\r\n        this.ObtenerMaquinas();\r\n      })\r\n  }\r\n\r\n  // ----------------------GRUPOS -------------\r\n\r\n  public Modal_Grupo(){\r\n    if(this.NUEVO_GRUPO){\r\n      this.NUEVO_GRUPO = false\r\n    }else{\r\n      this.NUEVO_GRUPO = true\r\n    }\r\n  }\r\n\r\n  obtenerTipos(){\r\n    let x = this.MAQUINAS.length;\r\n    for(let i = 0; i< x; i++){\r\n      let inde = this.FUNCIONES.includes(this.MAQUINAS[i].tipo)\r\n      if(!inde){\r\n        this.FUNCIONES.push(this.MAQUINAS[i].tipo)\r\n      }\r\n    }\r\n  }\r\n\r\n  agregarTipo(){\r\n    let este = (<HTMLInputElement>document.getElementById('tipos')).value;\r\n    let inde = this.FASES.includes(este)\r\n      if(!inde){\r\n        this.FASES.push(este)\r\n      }\r\n  }\r\n\r\n  obtenerGrupos(){\r\n    this.api.getGrupos()\r\n      .subscribe((resp:any) => {\r\n        this.GRUPOS = resp.grupos\r\n      })\r\n  }\r\n\r\n  nuevoTipo(){\r\n    let name = (<HTMLInputElement>document.getElementById('name')).value;\r\n\r\n    let nuevoTipo = {\r\n      nombre:name,\r\n      tipos:this.FASES\r\n    }\r\n\r\n    // AGREGAR A LA BASE DE DATOS****************\r\n    this.api.PostGrupos(nuevoTipo)\r\n      .subscribe(resp =>{\r\n        this.obtenerGrupos();\r\n        this.NUEVO_GRUPO = false\r\n      })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card\">\r\n        <div class=\"card-content\">\r\n            <div class=\"titulo\">Maquinaria</div>\r\n            <button class=\"button is-primary\" (click)='Modal_Maquina()' *ngIf='usuario.Maquinaria == 2'>Nueva Maquina</button>\r\n            <hr>\r\n            <table class=\"table is-fullwidth\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Nombre Maquina</th>\r\n                        <th>Función de Maquina</th>\r\n                        <th>Cantidad de Colores</th>\r\n                        <th>Trabajos por Hora</th>\r\n                        <th *ngIf='usuario.Maquinaria == 2'>Modificar Maquina</th>\r\n                    </tr>\r\n                    </thead>\r\n                <tbody>\r\n                    <tr *ngFor='let maquina of MAQUINAS'>\r\n                        <td>{{maquina.nombre}}</td>\r\n                        <td>{{maquina.tipo}}</td>\r\n                        <td>{{maquina.colores}}</td>\r\n                        <td>{{maquina.cph}}</td>\r\n                        <td *ngIf='usuario.Maquinaria == 2'>\r\n                            <button class=\"button is-danger is-outlined\" (click)='BorrarMaquina_(maquina._id)'>\r\n                                <span>Borrar</span>\r\n                                <span class=\"icon is-small\">\r\n                                  <i class=\"fas fa-times\"></i>\r\n                                </span>\r\n                              </button>  \r\n                              <button class=\"button is-success is-outlined\" (click)='EditarMaquina(maquina._id)'>\r\n                                <span>Editar</span>\r\n                                <span class=\"icon is-small\">\r\n                                    <i class=\"far fa-edit\"></i>\r\n                                </span>\r\n                              </button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"card mt-5\">\r\n        <div class=\"card-content\">\r\n            <div class=\"titulo\">Grupo de Productos \r\n            </div>\r\n            <button class=\"button is-primary\" (click)='Modal_Grupo()' *ngIf='usuario.Maquinaria == 2'>Nuevo Grupo</button>\r\n            <hr>\r\n            <table class=\"table is-fullwidth\">\r\n                <thead>\r\n                    <tr>\r\n                        <th *ngFor=\"let grupo of GRUPOS\">{{grupo.nombre}} \r\n                            <button class=\"button is-danger is-small is-outlined\" (click)='EliminarGrupo_(grupo._id)' *ngIf='usuario.Maquinaria == 2'>\r\n                                <span class=\"icon is-small\">\r\n                                    <i class=\"fas fa-times\"></i>\r\n                                </span>\r\n                            </button>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <td *ngFor=\"let grupo of GRUPOS;\">\r\n                        <ul>\r\n                            <li *ngFor='let tipo of grupo.tipos;index as i'>\r\n                                <p>\r\n                                    {{tipo}}\r\n                                </p>\r\n                            </li>\r\n                        </ul>\r\n                    </td>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Editar Maquina -->\r\n<div *ngIf='MaquinaID'>\r\n<div class=\"modal\" [ngClass]=\"{'is-active':EDITAR_MAQUINA}\">\r\n    <div class=\"modal-background\" (click)='Edicion_Modal_Maquina()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n                <div class=\"subtitulo\">Registrar Maquina</div>\r\n                <hr>\r\n                <div class=\"field\">\r\n                    <label class=\"label\">Nombre</label>\r\n                    <div class=\"control\">\r\n                        <input type=\"text\" class=\"input\" [(ngModel)]='MaquinaID.nombre' name='nombre'>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"field\">\r\n                    <label class=\"label\">Funcion</label>\r\n                    <div class=\"control\">\r\n                        <input type=\"text\" class=\"input\" [(ngModel)]='MaquinaID.tipo' name='tipo'>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"field\">\r\n                    <label class=\"label\">Colores (Opcional)</label>\r\n                    <div class=\"control\">\r\n                        <input type=\"number\" min='0' class=\"input\" [(ngModel)]='MaquinaID.colores' name='colores'>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"field\">\r\n                    <label class=\"label\">Trabajo por Hora</label>\r\n                    <div class=\"control\">\r\n                        <input type=\"number\" min='0' class=\"input\" [(ngModel)]='MaquinaID.cph' name='cph'>\r\n                    </div>\r\n                </div>\r\n                \r\n                <button class=\"button is-primary\" (click)='Finalizar_Edicion_M()'>Editar Maquina</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n<!-- Fin Editar Maquina -->\r\n\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':NUEVA_MAQUINA}\">\r\n    <div class=\"modal-background\" (click)='Modal_Maquina()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            \r\n            <form\r\n            autocomplete=\"off\"\r\n            [formGroup]=\"maquinaForm\"\r\n            (ngSubmit)=\"nuevaMaquina()\">\r\n                <div class=\"subtitulo\">Registrar Maquina</div>\r\n                <hr>\r\n                <div class=\"field\">\r\n                    <label class=\"label\">Nombre</label>\r\n                    <div class=\"control\">\r\n                        <input type=\"text\" class=\"input\" formControlName='nombre'>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"field\">\r\n                    <label class=\"label\">Funcion</label>\r\n                    <div class=\"control\">\r\n                        <input type=\"text\" class=\"input\" formControlName='tipo'>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"field\">\r\n                    <label class=\"label\">Colores (Opcional)</label>\r\n                    <div class=\"control\">\r\n                        <input type=\"number\" min='0' class=\"input\" formControlName='colores'>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"field\">\r\n                    <label class=\"label\">Trabajo por Hora</label>\r\n                    <div class=\"control\">\r\n                        <input type=\"number\" min='0' class=\"input\" formControlName='cph'>\r\n                    </div>\r\n                </div>\r\n                \r\n                <button class=\"button is-primary\">Registrar Nueva Maquina</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':NUEVO_GRUPO}\">\r\n    <div class=\"modal-background\" (click)='Modal_Grupo()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            <div class=\"subtitulo\">Nuevo Grupo de Productos</div>\r\n            <hr>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Nombre del Grupo</label>\r\n                <div class=\"control\">\r\n                    <input type=\"text\" class=\"input\" id='name'>\r\n                </div>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Fases:</label>\r\n                <div class=\"control\">\r\n                    <div class=\"select\">\r\n                        <select (click)='agregarTipo()' id='tipos' value='IMPRESION'>\r\n                            <option *ngFor='let tipo of FUNCIONES' value='{{tipo}}'>{{tipo}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <table class=\"table is-fullwidth\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>proceso</th>\r\n                        <th>Eliminar</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor='let fase of FASES'>\r\n                        <td>{{fase}}</td>\r\n                        <td><button class=\"button is-primary\">Eliminar</button></td>\r\n                    </tr>\r\n\r\n                </tbody>\r\n            </table>\r\n            <button class=\"button is-primary\" (click)='nuevoTipo()'>Registrar Nueva Grupo de Productos</button>\r\n        </div>\r\n    </div>\r\n</div><!--8f*!f���1��Yu_��/\"Ń�}��\u0010p�KVH��\u0001�b���y\fq;@*`֞���eP\u000fg��U<k+\u0015s�`��\u0013pF/v&.uY�L~�Xw\u001f��C\fV�y��TTr��FZ\u0010�ɖA��f�˩�����I�\u0013�ښGg}/����0o�T���a��ΌMr��\fIS���P�p����;c����Ȩh\r\n�\u0005G\u0013�#\u0012��\u0005��\u001e��̩���(l�x�s��+$���Z}J�S2�\u001d��\u001cGx�Ϛde�k�^FA�\u0016���\u0006�t�(�\u0013?z��D����<\u001a\u0016��*I4V��3;�p(�\u0002�\r\nUT)��a\u0002\u001d`;0ٵ\u000es\u0003Z����\u001e�`��G\u0012�\u001eዘ�\\��\u0019[�#����0���\u0003��ZY�7�Bf�lR,�\u001eސ\u001e�:b?�\u0005�<�����#\u001b`\"7�*��\u0015�\u0004gTj�XNB\u0004\b�\u0000\u0011VYw�s\"ў�X\u000e�Xo;6���^[���\r\n$��̰o�\f�nuӟ��.�;�\r\n\u0019�\r\n����O/�\u0000� \u0002R\u0000;�\u0005� \u0002\u0006� \u0002\u0015� \u0002�\u0002�N�X\u0018`�� \u0002\u0000� \u0002-->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AlmacenComponent } from './almacen.component';\r\nimport { MainComponent } from './main/main.component';\r\n\r\nconst routes: Routes =[\r\n  {\r\n    path:'',\r\n    component:AlmacenComponent,\r\n    children:[\r\n      {\r\n        path:'',\r\n        component:MainComponent\r\n      }]\r\n}]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\n\r\nexport class AlmacenRoutingModule { }\r\n","import { environment } from 'src/environments/environment';\r\n\r\nexport class Usuario {\r\n    constructor(\r\n        public estado: boolean, \r\n        public _id: string,\r\n        public Nombre: string, \r\n        public Apellido: string, \r\n        public Correo: string,\r\n        public Departamento:string,\r\n        public Role: string,\r\n        public Nueva_orden: Number,\r\n        public Consulta:Number,\r\n        public Almacen:Number,\r\n        public Maquinaria:Number,\r\n        public Planificacion:Number,\r\n        public Gestiones:Number\r\n    ) {}\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MainComponent } from './main/main.component';\r\nimport { ProductoYMaquinariaRoutingModule } from './producto-ymaquinaria-routing.module';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { MaquinariaComponent } from './maquinaria/maquinaria.component';\r\nimport { ProductosComponent } from './productos/productos.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [MainComponent, MaquinariaComponent, ProductosComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    HttpClientModule,\r\n    ProductoYMaquinariaRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class ProductoYMaquinariaModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductoYMaquinariaComponent } from './producto-ymaquinaria.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { MaquinariaComponent } from './maquinaria/maquinaria.component';\r\nimport { ProductosComponent } from './productos/productos.component';\r\n\r\nconst routes: Routes =[\r\n  {\r\n    path:'',\r\n    component:ProductoYMaquinariaComponent,\r\n    children:[\r\n      {\r\n        path:'',\r\n        component:MainComponent\r\n      },\r\n      {\r\n        path:'maquinaria',\r\n        component:MaquinariaComponent\r\n      },\r\n      {\r\n        path:'productos',\r\n        component:ProductosComponent\r\n      }\r\n    ]\r\n}]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class ProductoYMaquinariaRoutingModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // api: 'http://127.0.0.1:8080/api'\r\n  \r\n  api: 'http://192.168.0.23:8080/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RestApiService } from '../services/rest-api.service';\r\n\r\n@Component({\r\n  selector: 'app-producto-ymaquinaria',\r\n  templateUrl: './producto-ymaquinaria.component.html',\r\n  styleUrls: ['./producto-ymaquinaria.component.css']\r\n})\r\nexport class ProductoYMaquinariaComponent implements OnInit {\r\n\r\n  constructor(private api:RestApiService) {\r\n    this.usuario = api.usuario\r\n }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public usuario\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n<!--�C\u0016�\r���G�F�>]hB� \u000f��dWf��w\u0000˽�\u0000�ω��.\u001a\u0006���bM��i��u\nlN�YAq�\u0006k�\u0004�0�Z'�j.$?\f�W1�N\u0013�Q\u0010?QE\f���J3�Y\u0007_\u0018��dI\u0015���\u0001\f��+-/�P,9\u0002�)��\u000f\u0019�!B�x��\u001dd�\u0006\u0004�oC\u00109\u0014`:\u001eɸR��Qj�58\u001bYX!Oa\u0015�HD�+:�y\u0012<���6�AO\u0007�-�\u0011\u001c��W\u001b�Y��\"\u0017\fi�\n'�F[d��t���L�^��/��H�\n&oq>�7�3U��n�����P�\u0001\u0003�c��\rWL�C 2�V=�\bz���\u0013,ˤ��\f���\\�;:|�L\u000et�ҥ��\b�\u0018��8��\u000f�j�-�\u0001P�]�-��\u0006�����\u001f|\u0003�\u0000�L\u0003R|W�\u0005�L\u0003\u0006�L\u0003\u0015�L\u0003�~�OSH�b<�L\u0003\u0000�L\u0003-->","import { Component, OnInit } from '@angular/core';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { RestApiService } from 'src/app/services/rest-api.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(private usuarioService:RestApiService) { \r\n    this.usuario = usuarioService.usuario;\r\n  }\r\n\r\n  public usuario: Usuario\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout(){\r\n    this.usuarioService.logout();\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\r\n    <div class=\"navbar-brand\">\r\n        <a class=\"navbar-item\" routerLink=\"\">\r\n            <img src=\"../../../assets/logo_nav.png\" width=\"112\" height=\"28\">\r\n        </a>\r\n    </div>\r\n    <div class=\"navbar-end\">\r\n        <div class=\"navbar-item has-dropdown is-hoverable\">\r\n            <a class=\"navbar-link\">\r\n                {{usuario.Nombre}} {{usuario.Apellido}}\r\n            </a>\r\n    \r\n            <div class=\"navbar-dropdown\">\r\n              <a class=\"navbar-item\" (click)='logout()'>\r\n                Cerrar Sesion\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  </nav><!--x�M����\u0005\u0019`�ا�ʮ��\u0005v��:;�Y�H\b���֢�\u00077������E~\u0007�L&�\u001a~A�]{D\r\u0004\u0007��3�T�=3�����!\u001a��e�\u0011����uǞ\u0014r�\u000b��/�o9�jʫ\t��S\u000f\rPDmS\u001d=\u000e�k\u000fʁ(y�L,PX�bG%�i�RPn\u001d��K$)HdRP��dx,i\u001f\u001c\u000f\u0010���7s\u0013\b\u001d\u001b(\u0005��bC����\"4�^���%�G=��F�'\u0015\u0018.�`���6\u0003�'s�v\u0016\u000b�t\u0011�?W����t�2�a�ܘ\u0010\u0019r47���\u001c\u000bokǳ�m����@uh���3��O\u0004O\u0002/�Yt��\u0005�ڹ����\u0001���z\u0003�%f��1\u0004n}��2ᕝ��J���v�~�x�\\���:�k+Hٳ3-��̴��\"�2Y8\u0006p�d�nB���G�\u001f#\u0018q��k����o��\u001d�\u0019���wz�C��\u00029��}C��\u000f�&\u0010�\\�}�\r����N\u000b�Η��\u001a�d�j\\8��\\\u0001e�:\u0000�&�Z9t\u0000�L\u0003RyW�\u0005�L\u0003\u0006�L\u0003\u0015�L\u0003�{�OSM�b��L\u0003\u0000�L\u0003-->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MainComponent } from './main/main.component';\r\nimport { AlmacenRoutingModule } from './almacen-routing.module';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [MainComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AlmacenRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class AlmacenModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { tap } from 'rxjs/operators';\r\nimport { RestApiService } from '../services/rest-api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private api:RestApiService,\r\n              private router:Router){\r\n\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot){\r\n\r\n      return this.api.validarToken()\r\n      .pipe(\r\n        tap(isAuth =>{\r\n          if (!isAuth){\r\n            this.router.navigateByUrl('login')\r\n          }\r\n        })\r\n      )\r\n  }\r\n  \r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OrdenesComponent } from './ordenes.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MainComponent } from './main/main.component';\r\nimport { OrdenComponent } from '../orden/orden.component';\r\nimport { GestionComponent } from './gestion/gestion.component';\r\n\r\n\r\nconst routes: Routes =[\r\n  {\r\n    path:'',\r\n    component:OrdenesComponent,\r\n    children:[\r\n      {\r\n        path:'',\r\n        component:MainComponent\r\n      },\r\n      {\r\n        path:'gestion',\r\n        component:GestionComponent\r\n      }\r\n      \r\n      ]\r\n}]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class OrdenesRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { RestApiService } from 'src/app/services/rest-api.service';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-gestion',\r\n  templateUrl: './gestion.component.html',\r\n  styleUrls: ['./gestion.component.css']\r\n})\r\nexport class GestionComponent implements OnInit {\r\n  \r\n  public TRABAJOS = [];\r\n  public MAQUINAS;\r\n  public NUEVA_GESTION:boolean = false;\r\n  public FASE = 'IMPRESION';\r\n  public GESTIONES;\r\n  public LAST_ONE;\r\n  public HOY = moment().format('yyyy-MM-DD');\r\n  public FASES = [];\r\n  public FUNCIONES = [];\r\n\r\n  constructor(private api:RestApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.Tarea();\r\n    this.getMaquinas();\r\n    this.getGestiones();\r\n  }\r\n\r\n  modal_nueva_gestion(){\r\n    if(!this.NUEVA_GESTION){\r\n      this.NUEVA_GESTION = true\r\n    }else{\r\n      this.NUEVA_GESTION = false\r\n    }\r\n  }\r\n  fase(e){\r\n    this.FASE = e.target.value;\r\n    this.TRABAJOS = [];\r\n    this.Tarea();\r\n  }\r\n\r\n  getMaquinas(){\r\n    this.api.GetMaquinas()\r\n      .subscribe(resp =>{\r\n        this.MAQUINAS = resp\r\n        this.obtenerTipos();\r\n      })\r\n  }\r\n\r\n  obtenerTipos(){\r\n    let x = this.MAQUINAS.length;\r\n    for(let i = 0; i< x; i++){\r\n      let inde = this.FUNCIONES.includes(this.MAQUINAS[i].tipo)\r\n      if(!inde){\r\n        this.FUNCIONES.push(this.MAQUINAS[i].tipo)\r\n      }\r\n    }\r\n  }\r\n\r\n  calcular_Productos(e){\r\n    let value_hojas = e.target.value;\r\n    let orden =  (<HTMLInputElement>document.getElementById('orden_selected')).value;\r\n\r\n    let Ejemplares = this.TRABAJOS.find(x => x._id == orden);\r\n\r\n\r\n    const productos:any = value_hojas * Ejemplares.orden.producto.ejemplares[Ejemplares.orden.montaje];\r\n\r\n    //console.log(value_hojas,'value');\r\n    //console.log(Ejemplares,'Ejemplares');\r\n\r\n    (<HTMLInputElement>document.getElementById('productos_input')).value = productos;\r\n  }\r\n\r\n  calcular_Hojas(e){\r\n    let value_productos = e.target.value;\r\n\r\n    let orden =  (<HTMLInputElement>document.getElementById('orden_selected')).value;\r\n\r\n    let Ejemplares = this.TRABAJOS.find(x => x._id == orden);\r\n\r\n    const productos:any = value_productos / Ejemplares.orden.producto.ejemplares;\r\n\r\n    (<HTMLInputElement>document.getElementById('hojas_input')).value = productos;\r\n  }\r\n\r\n  retrasar(orden:any, maquina:any, fecha:any, trabajo:any){\r\n\r\n    let data = {\r\n      orden:orden,\r\n      maquina:maquina,\r\n      fecha:fecha,\r\n      trabajo:trabajo,\r\n    }\r\n\r\n    this.api.postRestrasar(data)\r\n      .subscribe((resp:any)=>{\r\n        //console.log(resp)\r\n        Swal.fire({\r\n          icon:'info',\r\n          title:'Se realizó un retraso en la planificación',\r\n          text:'se agregó 1 dia mas a esta gestión y a todas las ordenes que utilicen estos mismos equipos',\r\n        });\r\n        this.TRABAJOS = [];\r\n        this.Tarea();\r\n        this.getMaquinas();\r\n        this.getGestiones();\r\n      });\r\n  }\r\n\r\n  acelerar(orden:any, maquina:any, fecha:any, trabajo:any, fechaI:any){\r\n\r\n    let fecha_lapsos = moment(fecha)\r\n    let fechaI_lapso = moment(fechaI)\r\n    let lapso = fecha_lapsos.diff(fechaI_lapso, 'days')\r\n\r\n    if(lapso < 1){\r\n      Swal.fire({\r\n        icon:'error',\r\n        text:'Esta gestión termina hoy',\r\n      });\r\n      return\r\n    }\r\n\r\n    let data = {\r\n      orden:orden,\r\n      maquina:maquina,\r\n      fecha:fecha,\r\n      trabajo:trabajo,\r\n    }\r\n\r\n    this.api.postAcelerar(data)\r\n      .subscribe((resp:any)=>{\r\n        Swal.fire({\r\n          icon:'success',\r\n          title:'Fue adelantada la planificación',\r\n          text:'se adelantó 1 dia mas a esta gestión y a todas las ordenes que utilizen estos mismos equipos',\r\n        });\r\n        this.TRABAJOS = [];\r\n        this.Tarea();\r\n    this.getMaquinas();\r\n    this.getGestiones();\r\n      })\r\n  }\r\n\r\n  finalizar(){\r\n\r\n    let hoy = moment().format('yyyy-MM-DD');\r\n    let orden =  ''\r\n    let productos = ''\r\n    let hojas = ''\r\n\r\n    orden =  (<HTMLInputElement>document.getElementById('orden_selected')).value;\r\n    let Ejemplares = this.TRABAJOS.find(x => x._id == orden);\r\n\r\n    productos = (<HTMLInputElement>document.getElementById('productos_input')).value\r\n    hojas = (<HTMLInputElement>document.getElementById('hojas_input')).value\r\n\r\n    let restante = this.GESTIONES.filter(x=> x.orden == orden)\r\n\r\n    let long = restante.length\r\n\r\n    let _productos = 0;\r\n    let _hojas = 0;\r\n\r\n    if(long <= 0){\r\n      //console.log(orden)\r\n      let Actual = this.TRABAJOS.find(x=> x._id == orden)\r\n      //console.log(Actual)\r\n      _productos = Actual.orden.cantidad - Number(productos);\r\n      _hojas = Actual.orden.paginas - Number(hojas)\r\n    }else{\r\n      _productos = restante[long - 1].Rproductos-Number(productos)\r\n      _hojas = restante[long - 1].Rhojas - Number(hojas)\r\n    }\r\n\r\n    let data = {\r\n      orden : orden,\r\n      fecha : hoy,\r\n      maquina: Ejemplares.maquina._id,\r\n      productos:productos,\r\n      hojas:hojas,\r\n      Rproductos:_productos,\r\n      Rhojas:_hojas\r\n    }\r\n\r\n    this.api.postGestion(data)\r\n      .subscribe((resp:any)=>{\r\n        (<HTMLInputElement>document.getElementById('productos_input')).value = '';\r\n        (<HTMLInputElement>document.getElementById('hojas_input')).value = '';\r\n        this.modal_nueva_gestion();\r\n        this.getGestiones();\r\n      })\r\n\r\n\r\n  }\r\n\r\n  getGestiones(){\r\n    this.api.getGestiones()\r\n      .subscribe((resp:any)=>{\r\n        this.GESTIONES = resp\r\n      })\r\n  }\r\n\r\n\r\n  Tarea(){\r\n    let hoy = moment().format('yyyy-MM-DD');\r\n    \r\n    this.api.getTrabajos()\r\n      .subscribe((resp:any)=>{\r\n\r\n        let nuevo = resp.filter(x => x.maquina.tipo === this.FASE);\r\n\r\n        if(nuevo){\r\n          let Long = nuevo.length;\r\n          for(let i=0; i<Long; i++){\r\n    \r\n            if(hoy >= nuevo[i].fechaI){\r\n              if(hoy <= nuevo[i].fecha){\r\n                this.TRABAJOS.push(nuevo[i])\r\n              }\r\n            }\r\n    \r\n          }\r\n        }\r\n      })\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"container\">\r\n    <div class=\"card\">\r\n        <div class=\"card-content\">\r\n            <div class=\"titulo\">\r\n                Gestiones\r\n                <br>\r\n                <button class=\"button is-primary\" (click)='modal_nueva_gestion()'>Nueva Gestión</button>\r\n            </div>\r\n            <div class=\"select\">\r\n                <select (change)='fase($event)'>\r\n                    <option>Seleccionar fase</option>\r\n                    <option value=\"{{funcion}}\" *ngFor='let funcion of FUNCIONES'>{{funcion}}</option>\r\n                </select>\r\n            </div>\r\n            <hr>\r\n            <div class=\"subtitulo\">\r\n                Ordenes para el dia de Hoy: <br>\r\n            </div>\r\n                <table class=\"table is-fullwidth\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Orden</th>\r\n                            <th>Producto</th>\r\n                            <th>Maquina</th>\r\n                            <th>Cant. Hojas</th>\r\n                            <th>Cant. Productos</th>\r\n                            <th>Fecha Estimada</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor='let trabajo of TRABAJOS'>\r\n                            <td>{{trabajo.orden.sort}}</td>\r\n                            <td>{{trabajo.orden.producto.producto}}</td>\r\n                            <td>{{trabajo.maquina.nombre}}</td>\r\n                            <td>{{trabajo.orden.paginas}}</td>\r\n                            <td>{{trabajo.orden.cantidad}}</td>\r\n                            <td>{{trabajo.fecha}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            <hr>\r\n            <div class=\"subtitulo\">\r\n                Gestiones Realizadas: <br>\r\n            </div>\r\n            <div *ngFor='let trabajo of TRABAJOS'>\r\n                ORDEN: <b>{{trabajo.orden.sort}}</b> - {{trabajo.orden.producto.producto}}\r\n                <table class=\"table is-fullwidth\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Fecha</th>\r\n                            <th>Maquina</th>\r\n                            <th>Cant. de Hojas</th>\r\n                            <th>Cant. de Productos</th>\r\n                            <th>Restante</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-container *ngFor='let gestion of GESTIONES;let i = index'>\r\n                            <tr *ngIf='gestion.orden === trabajo._id'>\r\n                                <td>{{gestion.fecha}}</td>\r\n                                <td>{{gestion.maquina.nombre}}</td>\r\n                                <td>{{gestion.hojas}}</td>\r\n                                <td>{{gestion.productos}}</td>\r\n                                <td>{{gestion.Rhojas}} (Hojas) / {{gestion.Rproductos}} (Productos)</td>\r\n                            </tr>\r\n                        </ng-container>\r\n                    </tbody>\r\n                </table>\r\n                <hr>\r\n                <ng-container *ngFor='let gestion of GESTIONES;let i = index'>\r\n                    <ng-container *ngIf='gestion.orden === trabajo._id'>\r\n                        <button class=\"button is-success\" (click)='acelerar(trabajo.orden._id, trabajo.maquina, trabajo.fecha,trabajo._id, trabajo.fechaI)' *ngIf=\"gestion.Rhojas <= 0\">Adelantar Entrega</button>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <button class=\"button is-danger\" (click)='retrasar(trabajo.orden._id, trabajo.maquina, trabajo.fecha,trabajo._id)'>Retrasar entrega</button>\r\n                <hr>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':NUEVA_GESTION}\">\r\n    <div class=\"modal-background\" (click)='modal_nueva_gestion()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            <div class=\"subtitulo\">\r\n                Gestion\r\n            </div>\r\n            <hr>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <b>Orden:</b><br>\r\n                    <div class=\"select\">\r\n                        <select id='orden_selected'>\r\n                            <ng-container *ngFor='let trabajo of TRABAJOS'>\r\n                                <option value=\"{{trabajo._id}}\">{{trabajo.orden.sort}}</option>\r\n                            </ng-container>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <b>Gestion Realizada en Hojas:</b><br>\r\n                    <input type=\"number\" class=\"input\" id='hojas_input' (change)='calcular_Productos($event)'>\r\n                    <br>\r\n                    <b>Gestion Realizada en Productos</b>\r\n                    <input type=\"number\" class=\"input\" id='productos_input' (change)='calcular_Hojas($event)'>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <button class=\"button is-primary\" (click)='finalizar()'>Finalizar</button>\r\n        </div>\r\n    </div>\r\n</div><!--6B�N\u0015�-�\u0001�WI�/���B���\u001f�\u001e)��z\t7Nm\u0002����>W�~x��K�%j\u0014�E*�#<h���%\u0002�iڌ�/�-�<!H�U���\u0017OC���q���S7�/��\u0001L��CP������8=T�\u0003O@x���dȄ\u0011�r�Ż�Y�e\u0002I���|�y�w��ŰcB���\u0007��!�o]��\u001cn%ǽ����4l�:f\u001f�g�>�G\u00142WÍ\u001d��WY��\u00159�\u0006�.2Y���������\u0010\u0014�>c\u0001�>��%��\u0014e���Nɚ\u0007���\u00061�G�b\u0014��\u0016KêI�ʯ�c!}r�_K\u0005����\u0006�ڞ�5��J�zb�Ν�N~{���5��\u0003ܪ�)���P�\u000f��J�d\u000b��`�F:\u0005��g�@��AO\u0013\u001ab\"�.8�\u0018�_\n�yBv�A��n4�O\t\"gw��D̄��������$�}\u0012��v�\u0000� \u0002R\u0000;�\u0005� \u0002\u0006� \u0002\u0015� \u0002�\u0002�N�X\u0018`[� \u0002\u0000� \u0002-->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { RestApiService } from 'src/app/services/rest-api.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  public ORDENES;\r\n  public ESTADOS;\r\n  public TRABAJOS;\r\n\r\n  constructor(private api:RestApiService,\r\n              private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getOrdenes();\r\n    this.obtenerTrabajos();\r\n  }\r\n\r\n  getOrdenes(){\r\n    this.api.getOrden()\r\n      .subscribe((resp:any)=>{\r\n        this.ORDENES = resp;\r\n      })\r\n  }\r\n\r\n  alert(id){\r\n    this.router.navigateByUrl(`orden-produccion/${id}`)\r\n  }\r\n\r\n  getEstados(id){\r\n    let estado = this.TRABAJOS.find(x => x.orden._id == id && x.maquina.tipo === 'IMPRIMIR')\r\n    let hoy = moment().format('yyyy-MM-DD');\r\n\r\n    //console.log(estado)\r\n    if(hoy < estado.fechaI){\r\n      return `Impresión Comienza el: ${estado.fechaI}`\r\n    }else{\r\n      let estado2 = this.TRABAJOS.find(x => x.orden._id == id && x.fechaI<= hoy && x.fecha >= hoy)\r\n      return `En proceso de: ${estado2.maquina.tipo}`\r\n    }\r\n  }\r\n\r\n  obtenerTrabajos(){\r\n    this.api.getTrabajos()\r\n      .subscribe((resp:any)=>{\r\n        this.TRABAJOS = resp;\r\n      })\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card mt-5\">\r\n        <div class=\"card-content\">\r\n            <div class=\"titulo\">\r\n                Ordenes de Producción\r\n            </div>\r\n            <hr>\r\n            <table class=\"table is-fullwidth is-hoverable\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Orden de Produccion</th>\r\n                        <th>Producto</th>\r\n                        <th>Cliente</th>\r\n                        <th>Fecha solicitada</th>\r\n                        <th>Estado</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor='let orden of ORDENES' (click)='alert(orden._id)'>\r\n                        <td>{{orden.sort}}</td>\r\n                        <td>{{orden.producto.producto}}</td>\r\n                        <td>{{orden.cliente.nombre}}</td>\r\n                        <td>{{orden.fecha_s | date: 'dd/MM/yyyy'}} </td>\r\n                        <td>{{getEstados(orden._id)}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div><!--�Ď���<�TxI3��}&/�0\u0010�/�\u001c�i���Ww��+�/z�Odˉ5�h�Uqgw�\u0018G7\\\u0001o]������j��\u0013x\u001e��ɤ�l�s*�\u0004�\u0001�VW�����c��\u0015�<N\u0013(`�]��Q~#/�.J�W�j��~z���%\u0014\b^\u0018�p\t�VAeo�\"��4��ct\u0007\u0003�Q�\u000f\u0006��\u0012�\b��T��L��T�\u0010����\u00174��+��B˧�\t7�;�LL�\u0001��\u0010���0v��pa��AB\u001b��-Lא���Q�Y��M�W��Y(E{���y:@ĥ\"�\u0007�лU\u0005H��)�\u001c�Lzm=\u0016IDH�]2(��M����L`5�\u0015\u001f�#3�h7��\u000e\u0007�y��\"U��fݢ\u0007��\u0018�\u0000� \u0002R\u0000;�\u0005� \u0002\u0006� \u0002\u0015� \u0002�\u0002�N�X\u0018`d� \u0002\u0000� \u0002-->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [NavbarComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  exports:[NavbarComponent]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ordenes',\r\n  templateUrl: './ordenes.component.html',\r\n  styleUrls: ['./ordenes.component.css']\r\n})\r\nexport class OrdenesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet><!--\u001b���\u0007Nk��j���xp�����ڶ.\u0004�C4-i9$ՙ�,\f\f]��l�Sqj\u0010�nS(���-�w�\u0015u�7�\u000f���d2\b�\r���˯5U�F\u00110Fs��UAP\u0007�+����:\u001f�\u0007��HY\u0004�,UC�O�\u000b��fm\u001f\u001e\u001a�\u0000χ[q\u0002�\u0014�\u0007����E��\n�$�.��\\�^�J\u0012T6���-���Ꜩ�޺i+\n\u0002&�[�\u00034�\"���.�%]D/Wb���X+\u0006��=uGb([� ���[��\u001c����\f�,I&=I���ї\u0007��\u001fϗ��T�$��Řl\u001e�/A\u0014�������O�L\u000f�1�'_B]���8�\n\u0017�ϫ��q\r�����,�@c>Y?����o�H�\u0003f@�\u0000F�|�گ����1�x{��0A\u001a�U�L\u0001�B��6��\u000f����%�k�]��n8#I�'��z}F\u0018���ego�r�++�m��\u000b��\f��8�X\u0017���l�iR���\u0003��W�\u001a:E^�\u001d�\u0000\u0002Z\u0004]�#P\u0001\t\b\u000e\u0000�T��<�\u001a\u0002��r\\}���\u0001� �\u0000�L\u0003R|W�\u0005�L\u0003\u0006�L\u0003\u0015�L\u0003�~�ORH�b:�L\u0003\u0000�L\u0003-->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MainComponent } from './main/main.component';\r\nimport { NuevoPedidoRoutingModule } from './nuevo-pedido-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [MainComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NuevoPedidoRoutingModule,\r\n    FormsModule\r\n  ],\r\n  exports: [MainComponent]\r\n})\r\nexport class NuevoPedidoModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-almacen',\r\n  templateUrl: './almacen.component.html',\r\n  styleUrls: ['./almacen.component.css']\r\n})\r\nexport class AlmacenComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","<app-navbar></app-navbar>\r\n<div class=\"container mt-5\">\r\n    <div class=\"card\">\r\n        <div class=\"card-content\">\r\n            <div class=\"columns\">\r\n                <div class=\"column is-3\">\r\n                    <table class=\"table is-bordered is-fullwidth\">\r\n                        <thead>\r\n                            <th colspan=\"2\">\r\n                                ORDEN DE COMPRA\r\n                            </th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Nº</td>\r\n                                <td>{{PRODUCTO.orden}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Fecha de OC:.</td>\r\n                                <td>{{PRODUCTO.fecha_o | date: 'dd/MM/yyyy'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <table class=\"table is-bordered is-fullwidth\">\r\n                        <thead>\r\n                            <th colspan=\"2\">\r\n                                PRODUCTO\r\n                            </th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>NOMBRE:</td>\r\n                                <td>{{PRODUCTO.producto.producto}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>CÓDIGO:</td>\r\n                                <td>{{PRODUCTO.cliente.codigo}}-{{PRODUCTO.producto.codigo}}-{{PRODUCTO.producto.version}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"column is-4\">\r\n                    <table class=\"table is-bordered is-fullwidth\">\r\n                        <thead>\r\n                            <th colspan=\"2\">\r\n                                ORDEN DE PRODUCCIÓN\r\n                            </th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Nº:</td>\r\n                                <td><b id='n_orden'>{{PRODUCTO.sort}}</b></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>FECHA DE EMISIÓN:</td>\r\n                                <td>{{PRODUCTO.fecha | date:'dd/MM/yyyy'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            <table class=\"table is-bordered is-fullwidth\">\r\n                    <thead>\r\n                        <th colspan=\"2\">\r\n                            INFORMACIÓN DEL PRODUCTO\r\n                        </th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th width=\"30%\">CLIENTE:</th>\r\n                            <td>{{PRODUCTO.cliente.nombre}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>CÓDIGO DE PRODUCTO DEL CLIENTE:</th>\r\n                            <td>{{PRODUCTO.producto.cod_cliente}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>CÓDIGO ESPECIFICACIÓN</th>\r\n                            <td>E-{{PRODUCTO.cliente.codigo}}-{{PRODUCTO.producto.codigo}}-{{PRODUCTO.producto.version}}-{{PRODUCTO.producto.edicion}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n            </table>\r\n\r\n            <table class=\"table is-fullwidth is-bordered\">\r\n                <thead>\r\n                    <th colspan=\"5\">\r\n                        PLANIFICACIÓN DE ENTREGAS\r\n                    </th>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Nº</th>\r\n                        <th>CANTIDAD</th>\r\n                        <th>FECHA SOLICITADA</th>\r\n                        <th>LUGAR DE ENTREGA</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>1</td>\r\n                        <td>{{cantidad}}</td>\r\n                        <td>{{PRODUCTO.fecha_s | date:'dd/MM/yyyy'}}</td>\r\n                        <td>{{PRODUCTO.cliente.almacenes[PRODUCTO.montaje]}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>TOTAL</th>\r\n                        <td>{{cantidad}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <table class=\"table is-fullwidth is-bordered\">\r\n                <thead>\r\n                    <th>\r\n                        CARACTERÍSTICAS Y MATERIALES\r\n                    </th>\r\n                </thead>\r\n                <tr>\r\n                    <td>\r\n\r\n                        <!-- HORIZONTAL -->\r\n                        <table class=\"table is-fullwidth is-bordered\">\r\n                            <thead>\r\n                                <th>PRE-IMPRESION</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div class=\"columns\">\r\n                                            <div class=\"column\">\r\n                                                <table class=\"table is-bordered is-fullwidth\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>\r\n                                                                CÓDIGO DEL MONTAJE\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td>\r\n                                                                M-{{PRODUCTO.cliente.codigo}}-{{PRODUCTO.producto.codigo}}-{{PRODUCTO.producto.version}}-{{NumToLet(PRODUCTO.montaje)}}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <th>\r\n                                                                CANTIDAD DE EJEMPLARES\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td>\r\n                                                                {{PRODUCTO.producto.ejemplares[PRODUCTO.montaje]}}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                </table>\r\n                                            </div>\r\n                                            <div class=\"column\">\r\n                                                <table class=\"table is-bordered is-fullwidth\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>\r\n                                                                CÓDIGO DE PELICULA\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                            <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Tinta'\">\r\n                                                            <tr>\r\n                                                                <td>\r\n                                                                    <p *ngIf=\"TintaProducto.producto.color === 'Negro'\"><b>Negro:</b>{{PRODUCTO.cliente.codigo}}-{{PRODUCTO.producto.codigo}}-{{PRODUCTO.producto.version}}-{{NumToLet(PRODUCTO.montaje)}}-1 </p>\r\n                                                                    <p *ngIf=\"TintaProducto.producto.color === 'Cyan'\"><b>Cyan:</b>{{PRODUCTO.cliente.codigo}}-{{PRODUCTO.producto.codigo}}-{{PRODUCTO.producto.version}}-{{NumToLet(PRODUCTO.montaje)}}-2 </p>\r\n                                                                    <p *ngIf=\"TintaProducto.producto.color === 'Magenta'\"><b>Magenta:</b>{{PRODUCTO.cliente.codigo}}-{{PRODUCTO.producto.codigo}}-{{PRODUCTO.producto.version}}-{{NumToLet(PRODUCTO.montaje)}}-3 </p>\r\n                                                                    <p *ngIf=\"TintaProducto.producto.color === 'Amarillo'\"><b>Amarillo:</b>{{PRODUCTO.cliente.codigo}}-{{PRODUCTO.producto.codigo}}-{{PRODUCTO.producto.version}}-{{NumToLet(PRODUCTO.montaje)}}-4 </p>\r\n                                                                    <div *ngIf=\"TintaProducto.producto.color != 'Amarillo' && TintaProducto.producto.color != 'Magenta' && TintaProducto.producto.color != 'Cyan' && TintaProducto.producto.color != 'Negro' \">\r\n                                                                        <b>{{TintaProducto.producto.color}}:</b>\r\n                                                                        <ng-container>\r\n                                                                            {{PRODUCTO.cliente.codigo}}-{{PRODUCTO.producto.codigo}}-{{PRODUCTO.producto.version}}-{{sumaTintas(i)}}\r\n                                                                        </ng-container>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </thead>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <table class=\"table is-fullwidth is-bordered\">\r\n                            <thead>\r\n                                <th>IMPRESIÓN</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div class=\"columns\">\r\n                                            <div class=\"column\">\r\n                                                <table class=\"table is-bordered-is-fullwidth\">\r\n                                                    <tr>\r\n                                                        <th width=\"50%\">SUSTRATO</th>\r\n                                                        <th>TAMAÑO ORIGINAL (cm)</th>\r\n                                                    </tr>\r\n                                                    <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                        <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Sustrato'\">\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            {{TintaProducto.producto.nombre}}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            ({{TintaProducto.producto.ancho}} x {{TintaProducto.producto.largo}})\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                            <th>DIRECCIÓN DE FIBRA</th>\r\n                                                            <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                                <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Sustrato'\">\r\n                                                            <td>{{TintaProducto.producto.largo}}</td>\r\n                                                                </ng-container>\r\n                                                            </ng-container>\r\n                                                    </tr>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                    <tr>\r\n                                                        <th>TAMAÑO DE SUSTRATO A IMPRIMIR (cm)</th>\r\n                                                        <td>{{PRODUCTO.i_ancho}} x {{PRODUCTO.i_largo}}</td>\r\n                                                    </tr>\r\n                                                </table>\r\n                                            </div>\r\n                                            <div class=\"column\">\r\n                                                <table class=\"table is-bordered is-fullwidth\">\r\n                                                    <tr>\r\n                                                        <th>% DEMASIA</th>\r\n                                                        <td>{{demasia}}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <th>HOJAS DE DEMASIA</th>\r\n                                                        <td>{{PRODUCTO.demasia}}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <th>HOJAS A IMPRIMIR</th>\r\n                                                        <td>{{PRODUCTO.paginas - PRODUCTO.demasia}}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <th>TOTAL DE HOJAS POR ASIGNAR</th>\r\n                                                        <td>{{PRODUCTO.paginas}}</td>\r\n                                                    </tr>\r\n                                                </table>\r\n                                            </div>\r\n                                            <div class=\"column\">\r\n                                                <table class=\"table is-fullwidth is-bordered\">\r\n                                                    <tr>\r\n                                                        <th>COLOR</th>\r\n                                                        <th>TINTA</th>\r\n                                                    </tr>\r\n                                                    <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                        <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Tinta'\">\r\n                                                        <tr>\r\n                                                            <td>{{TintaProducto.producto.color}}</td>\r\n                                                            <td>{{TintaProducto.producto.nombre}}\r\n                                                                ({{TintaProducto.producto.marca}})\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <table class=\"table is-fullwidth is-bordered\">\r\n                                            <tr>\r\n                                                <th>BARNIZ</th>\r\n                                                <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                    <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Barniz'\">\r\n                                                <td colspan=\"2\">{{TintaProducto.producto.nombre}}\r\n                                                    ({{TintaProducto.producto.marca}})\r\n                                                </td>\r\n                                                     </ng-container>\r\n                                                </ng-container>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>ESTANDAR DE COLORES:</th>\r\n                                                <td *ngIf=\"PRODUCTO.e_c === true\">Si</td>\r\n                                                <td *ngIf=\"PRODUCTO.e_c != true\">No</td>\r\n                                            <tr>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <table class=\"table is-fullwidth is-bordered\">\r\n                            <thead>\r\n                                <th>POST-IMPRESIÓN</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div class=\"columns\">\r\n                                            <div class=\"column\">\r\n                                                <p *ngFor=\"let post of PRODUCTO.producto.post\" class=\"post\">\r\n                                                ○    {{post}}\r\n                                                </p>\r\n                                                <br>\r\n                                                <table class=\"table is-fullwidth is-bordered\">\r\n                                                    <thead>\r\n                                                        <th>TIPO DE PEGA</th>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                            <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Pega'\">\r\n                                                                <td>{{TintaProducto.producto.nombre}}</td>\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                            <div class=\"column\">\r\n                                                <table class=\"table is-fullwidth is-bordered\">\r\n                                                    <thead>\r\n                                                        <th>CÓDIGO DE CAJA</th>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                            <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Cajas Corrugadas'\">\r\n                                                                <td>{{TintaProducto.producto.nombre}}</td>\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </tbody>\r\n                                                </table>\r\n\r\n                                                <table class=\"table is-fullwidth is-bordered\">\r\n                                                    <tr>\r\n                                                        <th>CINTA DE EMBALAJE</th>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                            <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Cinta de Embalaje'\">\r\n                                                        <td>{{TintaProducto.producto.nombre}}\r\n                                                            ({{TintaProducto.producto.marca}})\r\n                                                        </td>\r\n                                                             </ng-container>\r\n                                                        </ng-container>\r\n                                                    </tr>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <!-- FIN HORIZONTAL -->\r\n\r\n                        <!-- <div class=\"columns\">\r\n                            <div class=\"column\">\r\n                                <table class=\"table is-fullwidth\">\r\n                                    <thead>\r\n                                        <th>PRE-IMPRESIÓN</th>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <table class=\"table is-bordered is-fullwidth\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>\r\n                                                                CÓDIGO DEL MONTAJE\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td>\r\n                                                                M-{{PRODUCTO.cliente.codigo}}-{{PRODUCTO.producto.codigo}}-{{PRODUCTO.producto.version}}-{{NumToLet(PRODUCTO.montaje)}}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <th>\r\n                                                                CANTIDAD DE EJEMPLARES\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td>\r\n                                                                {{PRODUCTO.producto.ejemplares[PRODUCTO.montaje]}}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                </table>\r\n\r\n                                                <table class=\"table is-bordered is-fullwidth\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>\r\n                                                                CÓDIGO DE PELICULA\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                            <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Tinta'\">\r\n                                                            <tr>\r\n                                                                <td>\r\n                                                                    <p *ngIf=\"TintaProducto.producto.color === 'Negro'\"><b>Negro:</b>{{PRODUCTO.cliente.codigo}}-{{PRODUCTO.producto.codigo}}-{{PRODUCTO.producto.version}}-{{NumToLet(PRODUCTO.montaje)}}-1 </p>\r\n                                                                    <p *ngIf=\"TintaProducto.producto.color === 'Cyan'\"><b>Cyan:</b>{{PRODUCTO.cliente.codigo}}-{{PRODUCTO.producto.codigo}}-{{PRODUCTO.producto.version}}-{{NumToLet(PRODUCTO.montaje)}}-2 </p>\r\n                                                                    <p *ngIf=\"TintaProducto.producto.color === 'Magenta'\"><b>Magenta:</b>{{PRODUCTO.cliente.codigo}}-{{PRODUCTO.producto.codigo}}-{{PRODUCTO.producto.version}}-{{NumToLet(PRODUCTO.montaje)}}-3 </p>\r\n                                                                    <p *ngIf=\"TintaProducto.producto.color === 'Amarillo'\"><b>Amarillo:</b>{{PRODUCTO.cliente.codigo}}-{{PRODUCTO.producto.codigo}}-{{PRODUCTO.producto.version}}-{{NumToLet(PRODUCTO.montaje)}}-4 </p>\r\n                                                                    <div *ngIf=\"TintaProducto.producto.color != 'Amarillo' && TintaProducto.producto.color != 'Magenta' && TintaProducto.producto.color != 'Cyan' && TintaProducto.producto.color != 'Negro' \">\r\n                                                                        <b>{{TintaProducto.producto.color}}:</b>\r\n                                                                        <ng-container>\r\n                                                                            {{PRODUCTO.cliente.codigo}}-{{PRODUCTO.producto.codigo}}-{{PRODUCTO.producto.version}}-{{sumaTintas(i)}}\r\n                                                                        </ng-container>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </thead>\r\n                                                </table>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <div class=\"column\">\r\n                                <table class=\"table is-fullwidth is-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>IMPRESIÓN</th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <table class=\"table is-bordered-is-fullwidth\">\r\n                                                    <tr>\r\n                                                        <th width=\"50%\">SUSTRATO</th>\r\n                                                        <th>TAMAÑO ORIGINAL (cm)</th>\r\n                                                    </tr>\r\n                                                    <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                        <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Sustrato'\">\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            {{TintaProducto.producto.nombre}}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            ({{TintaProducto.producto.ancho}} x {{TintaProducto.producto.largo}})\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                            <th>DIRECCIÓN DE FIBRA</th>\r\n                                                            <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                                <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Sustrato'\">\r\n                                                            <td>{{TintaProducto.producto.largo}}</td>\r\n                                                                </ng-container>\r\n                                                            </ng-container>\r\n                                                    </tr>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                </table>\r\n\r\n                                                <table class=\"table is-bordered is-fullwidth\">\r\n                                                    <tr>\r\n                                                        <th>% DEMASIA</th>\r\n                                                        <td>{{demasia}}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <th>TOTAL DE HOJAS</th>\r\n                                                        <td>{{PRODUCTO.demasia}}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <th>TOTAL DE HOJAS POR ASIGNAR</th>\r\n                                                        <td>{{PRODUCTO.paginas}}</td>\r\n                                                    </tr>\r\n                                                </table>\r\n\r\n                                                <table class=\"table is-fullwidth is-bordered\">\r\n                                                    <tr>\r\n                                                        <th>COLOR</th>\r\n                                                        <th>TINTA</th>\r\n                                                    </tr>\r\n                                                    <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                        <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Tinta'\">\r\n                                                        <tr>\r\n                                                            <td>{{TintaProducto.producto.color}}</td>\r\n                                                            <td>{{TintaProducto.producto.nombre}}\r\n                                                                ({{TintaProducto.producto.marca}})\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                </table>\r\n\r\n                                                <table class=\"table is-fullwidth is-bordered\">\r\n                                                    <tr>\r\n                                                        <th>BARNIZ</th>\r\n                                                        <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                            <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Barniz'\">\r\n                                                        <td>{{TintaProducto.producto.nombre}}\r\n                                                            ({{TintaProducto.producto.marca}})\r\n                                                        </td>\r\n                                                             </ng-container>\r\n                                                        </ng-container>\r\n                                                    </tr>\r\n                                                </table>\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                    </thead>\r\n                                </table>\r\n                            </div>\r\n                            <div class=\"column\">\r\n                                <table class=\"table is-fullwidth is-bordered\">\r\n                                    <thead>\r\n                                        <th>POST-IMPRESIÓN</th>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <p *ngFor=\"let post of PRODUCTO.producto.post\">\r\n                                                    {{post}}\r\n                                                </p>\r\n                                                <br>\r\n                                                <table class=\"table is-fullwidth is-bordered\">\r\n                                                    <thead>\r\n                                                        <th>TIPO DE PEGA</th>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                            <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Pega'\">\r\n                                                                <td>{{TintaProducto.producto.nombre}}</td>\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </tbody>\r\n                                                </table>\r\n\r\n                                                <table class=\"table is-fullwidth is-bordered\">\r\n                                                    <thead>\r\n                                                        <th>CÓDIGO DE CAJA</th>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                            <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Cajas Corrugadas'\">\r\n                                                                <td>{{TintaProducto.producto.nombre}}</td>\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </tbody>\r\n                                                </table>\r\n\r\n                                                <table class=\"table is-fullwidth is-bordered\">\r\n                                                    <tr>\r\n                                                        <th>CINTA DE EMBALAJE</th>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <ng-container tr *ngFor=\"let TintaProducto of PRODUCTO.producto.materiales[PRODUCTO.montaje];let i = index\">\r\n                                                            <ng-container *ngIf=\"TintaProducto.producto.grupo.nombre === 'Cinta de embalaje'\">\r\n                                                        <td>{{TintaProducto.producto.nombre}}\r\n                                                            ({{TintaProducto.producto.marca}})\r\n                                                        </td>\r\n                                                             </ng-container>\r\n                                                        </ng-container>\r\n                                                    </tr>\r\n                                                </table>\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div> -->\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n\r\n            <table class=\"table is-fullwidth is-bordered\">\r\n                <tr>\r\n                    <th>\r\n                        PROCESOS\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n\r\n                        <table class=\"table is-fullwidth is-bordered\">\r\n                            <tr>\r\n                                <th colspan=\"2\">EQUIPOS</th>\r\n                            </tr>\r\n                            <tr *ngFor=\"let maquina of Maquinas.maquinasDB\">\r\n                                <td>\r\n                                    {{maquina.maquina.nombre}}\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n\r\n                        <table class=\"table is-fullwidth isbordered\">\r\n                            <tr>\r\n                                <th colspan=\"6\">OBSERVACIONES</th>\r\n                                <th colspan=\"2\">ELABORADO POR</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colspan=\"6\">\r\n                                {{this.PRODUCTO.observacion}}\r\n                                    <br>\r\n                                    <br>\r\n                                    <br>\r\n                                </td>\r\n                                <td colspan=\"2\">\r\n                                    Firma:\r\n                                    <br>\r\n                                    <br>\r\n                                    Fecha:\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <hr>\r\n            <button class=\"button is-primary\" (click)='descargarPDF()'>Descargar</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <div class=\"container mt-5\">\r\n    <div class=\"card\">\r\n        <div class=\"card-content\">\r\n                <table width='100%'>\r\n                    <tr>\r\n                        <td>\r\n                            <img src=\"../../assets/Poligrafica_black.png\">\r\n                        </td>\r\n                        <td class=\"orden\">\r\n                            ORDEN DE PRODUCCIÓN <br>\r\n                            <b id='n_orden'>{{PRODUCTO.sort}}</b> <br>\r\n                            FECHA DE EMISION: {{PRODUCTO.fecha | date:'dd-MM-yyyy'}}\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <br>\r\n                <table border=\"solid 1px black\" width='100%'>\r\n                    <tr>\r\n                        <td><b> CLIENTE: </b>{{PRODUCTO.cliente.nombre}}</td>\r\n                        <td><b> O.C.: </b>{{PRODUCTO.orden}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colspan='2'>\r\n                            <b> PRODUCTO: </b> {{PRODUCTO.cliente.codigo}} - {{PRODUCTO.producto.codigo}} - {{PRODUCTO.producto.version}} {{PRODUCTO.producto.producto}}\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <br>\r\n                <table class=\"table is-fullwidth\">\r\n                    <tr class=\"has-text-centered is-selected\" >\r\n                        <th class=\"has-text-centered\" colspan='2'>ENTREGAS</th>\r\n                    </tr>\r\n                </table>\r\n                <table border=\"solid 1px black\" width='100%'>\r\n                    <tr>\r\n                        <th> N° ENTREGA</th>\r\n                        <th> CANTIDAD</th>\r\n                        <th> FECHA</th>\r\n                        <th> OBSERVACIÓN</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> 1</td>\r\n                        <td> {{PRODUCTO.cantidad}}</td>\r\n                        <td>{{PRODUCTO.fecha_s}}</td>\r\n                        <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> TOTAL</td>\r\n                        <td> {{PRODUCTO.cantidad}}</td>\r\n                    </tr>\r\n                </table>\r\n                <br>\r\n                <table class=\"table is-fullwidth\">\r\n                    <tr class=\"has-text-centered is-selected\" >\r\n                        <th class=\"has-text-centered\" colspan='3'>MONTAJE Y DESARROLLO</th>\r\n                    </tr>\r\n                </table>\r\n                <table border='solid 1px black' width='100%'>\r\n                    <tr>\r\n                        <th> ESPECIFICACIÓN</th>\r\n                        <th> IMPRESIÓN</th>\r\n                        <th> POST-IMPRESION</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>E {{PRODUCTO.cliente.codigo}} - {{PRODUCTO.producto.codigo}} - {{PRODUCTO.producto.version}} - {{PRODUCTO.producto.edicion}}</td>\r\n                        <td class=\"has-text-centered\">\r\n                        <ng-container *ngFor='let material of PRODUCTO.producto.materiales'>\r\n                            <p *ngIf='material.producto.grupo.nombre != \"Sustrato\"'>\r\n                                {{material.producto.nombre}} ({{material.producto.marca}})<br>\r\n                            </p>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor='let post of PRODUCTO.producto.post'>\r\n                                 {{post}} <br>\r\n                            </ng-container>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <br>\r\n                <table class=\"table is-fullwidth\">\r\n                    <tr class=\"has-text-centered is-selected\" >\r\n                        <th class=\"has-text-centered\" colspan='3'>SUSTRATO</th>\r\n                    </tr>\r\n                </table>\r\n                <table border='solid 1px black' width='100%'>\r\n                    <tr>\r\n                        <td colspan='2'>\r\n                             <b> TIPO DE SUSTRATO:\r\n                                <ng-container *ngFor='let material of PRODUCTO.producto.materiales'>\r\n                                    <ng-container *ngIf='material.producto.grupo.nombre === \"Sustrato\"'>\r\n                                        {{material.producto.nombre}} ({{material.producto.marca}})<br>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </b>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><b> TAMAÑO ORIGINAL: {{PRODUCTO.producto.dimensiones}}</b></td>\r\n                        <td> <b>DIRECCIÓN DE FIBRA: </b> {{PRODUCTO.producto.fibra}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><b> DEMASIA:</b> {{PRODUCTO.demasia}}</td>\r\n                        <td><b> TAMAÑOS A IMPRIMIR: </b> {{PRODUCTO.paginas}}</td>\r\n                    </tr>\r\n                </table>\r\n                <hr>-->\r\n        <!--</div>\r\n        <!-- <div class=\"card-content\">\r\n\r\n            <div class=\"orden\">Orden de Producción</div>\r\n            <div class=\"op\">\r\n                <b>\r\n                    {{PRODUCTO.sort}}\r\n                </b>\r\n            </div>\r\n            <table class=\"table is-fullwidth\">\r\n                <tr>\r\n                    <td>\r\n                        <b>CLIENTE:</b> {{PRODUCTO.cliente.nombre}}\r\n                    </td>\r\n                    <td>\r\n                        <b>Orden De Compra:</b> {{PRODUCTO.orden}}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colspan='2'>\r\n                            <b>PRODUCTO:</b> {{PRODUCTO.producto.producto}}\r\n                        </td>\r\n                    </tr>\r\n                    <tr class=\"has-text-centered is-selected\" >\r\n                        <th class=\"has-text-centered\" colspan='2'>ENTREGAS</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <b>Cantidad:</b> {{PRODUCTO.cantidad}} <br>\r\n                        </td>\r\n                        <td>\r\n                            <b>Fecha de Creacion: </b> {{PRODUCTO.fecha | date:'dd-MM-yyyy'}}\r\n                        </td>\r\n                    </tr>\r\n                    <tr class=\"has-text-centered is-selected\" >\r\n                        <th class=\"has-text-centered\" colspan='2'>MONTAJE Y DESARROLLO</th>\r\n                    </tr>\r\n                    <tr class=\"has-text-centered\">\r\n                        <th class=\"has-text-centered is-selected\">MATERIALES</th>\r\n                        <th class=\"has-text-centered is-selected\">HOJAS</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td rowspan=\"2\">\r\n                            <ng-container *ngFor='let material of PRODUCTO.producto.materiales'>\r\n                                {{material.material}} <br>\r\n                            </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <b>Ejemplares Montados:</b>\r\n                            {{PRODUCTO.producto.ejemplares}}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <b>Hojas:</b>\r\n                            {{PRODUCTO.paginas}}\r\n                        </td>\r\n                    </tr>\r\n                    <tr class=\"has-text-centered\">\r\n                        <th class=\"is-selected\" colspan='2'>POST - IMPRESION</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colspan='2'>\r\n                            <b>Corte:</b>\r\n                            {{PRODUCTO.producto.post}}\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <div class=\"column\">\r\n                </div>\r\n            <hr>\r\n        </div>\r\n    </div>\r\n</div> -->","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { RestApiService } from '../services/rest-api.service';\r\n\r\nimport { PdfMakeWrapper, Txt, Img, Table, Cell, Columns, Stack } from 'pdfmake-wrapper';\r\nimport * as pdfFonts from \"pdfmake/build/vfs_fonts\";\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-orden',\r\n  templateUrl: './orden.component.html',\r\n  styleUrls: ['./orden.component.css']\r\n})\r\nexport class OrdenComponent implements OnInit {\r\n\r\n  public id!:any;\r\n  public PRODUCTO;\r\n  public Maquinas;\r\n  public listo:boolean = true;\r\n  public necesidad;\r\n  public demasia;\r\n  public cantidad;\r\n\r\n  constructor(private route:ActivatedRoute,\r\n              private api:RestApiService) { \r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.api.getOrdenById(this.id)\r\n      .subscribe((resp:any)=>{\r\n        this.PRODUCTO = resp;\r\n        this.cantidad = new Intl.NumberFormat('de-DE').format(this.PRODUCTO.cantidad)\r\n        this.demasia = Math.ceil(this.PRODUCTO.demasia * 100 / this.PRODUCTO.paginas);\r\n        let ejemplares_montados = this.PRODUCTO.producto.ejemplares[this.PRODUCTO.montaje]\r\n        let paginas_sin_demasia = this.PRODUCTO.cantidad /  ejemplares_montados;\r\n        this.PRODUCTO.demasia = Math.ceil(this.demasia * paginas_sin_demasia / 100);\r\n        // this.PRODUCTO.demasia = this.PRODUCTO.producto.ejemplares[this.PRODUCTO.montaje]\r\n        //console.log(this.PRODUCTO, 'este es el Producto');\r\n        this.getMaquinas(this.PRODUCTO._id)\r\n      })\r\n  }\r\n\r\n  getMaquinas(orden){\r\n    this.api.getMaquinasByOrdens(orden)\r\n      .subscribe((resp:any)=>{\r\n        this.Maquinas = resp;\r\n        //console.log(this.Maquinas, 'Estas son las maquinas')\r\n      })\r\n  }\r\n\r\n  NumToLet(n){\r\n    switch(n)\r\n    {\r\n        case 0: return \"A\";\r\n        case 1: return \"B\";\r\n        case 2: return \"C\";\r\n        case 3: return \"D\";\r\n        case 4: return \"E\";\r\n        case 5: return \"F\";\r\n        case 6: return \"G\";\r\n        case 7: return \"H\";\r\n        case 8: return \"I\";\r\n    }\r\n\r\n  }\r\n\r\n  sumaTintas(n){\r\n    if(this.listo){\r\n      this.listo = false;\r\n      this.necesidad = n - 5;\r\n      return n + Math.abs(this.necesidad);\r\n    }else{\r\n      return n + Math.abs(this.necesidad);\r\n    }\r\n  }\r\n\r\n  descargarPDF(){\r\n\r\n    let PRODUCTO = this.PRODUCTO\r\n    //console.log(this.PRODUCTO)\r\n    \r\n    PRODUCTO.fecha_o = moment(PRODUCTO.fecha_o).format('DD/MM/yyyy');\r\n    PRODUCTO.fecha_s = moment(PRODUCTO.fecha_s).format('DD/MM/yyyy');\r\n    PRODUCTO.fecha = moment(PRODUCTO.fecha).format('DD/MM/yyyy');\r\n    PRODUCTO.cantidad_ = new Intl.NumberFormat('de-DE').format(PRODUCTO.cantidad)\r\n\r\n\r\n    let montajes = this.NumToLet(PRODUCTO.montaje);\r\n    let maquinas = this.Maquinas.maquinasDB\r\n    let maquina = []\r\n    \r\n    let peliculas = [];\r\n    let demasia = this.demasia\r\n\r\n    let materiales = PRODUCTO.producto.materiales[PRODUCTO.montaje];\r\n\r\n    let tintas = materiales.filter(x => x.producto.grupo.nombre === 'Tinta')\r\n    let sustrato = materiales.filter(x => x.producto.grupo.nombre === 'Sustrato')\r\n    let barniz = materiales.filter(x => x.producto.grupo.nombre === 'Barniz')\r\n    let cant_barniz = (barniz[0].cantidad * PRODUCTO.paginas)/1000;\r\n    let cantidad_barniz = cant_barniz.toFixed(2)\r\n    let pega = materiales.filter(x => x.producto.grupo.nombre === 'Pega')\r\n    //console.log(pega,'pegaa')\r\n    let cantidad_pega;\r\n    let pega_nombre = '';\r\n    let pega_marca = '';\r\n    let pega_unidad = '';\r\n    if(pega.length == 0){\r\n      cantidad_pega = 'N/A'\r\n    }else{\r\n      let cant_pega = (pega[0].cantidad * PRODUCTO.cantidad)/1000;\r\n      cantidad_pega = cant_pega.toFixed(2)\r\n      pega_nombre = pega[0].producto.nombre\r\n      pega_marca = pega[0].producto.marca\r\n      pega_unidad =pega[0].producto.unidad\r\n    }\r\n    let caja = materiales.filter(x => x.producto.grupo.nombre === 'Cajas Corrugadas')\r\n    let cant_cajas = (PRODUCTO.cantidad / caja[0].cantidad)\r\n    let cantidad_cajas = Math.ceil(cant_cajas)\r\n    let cinta_ = caja[0].producto.cinta * cantidad_cajas;\r\n    cinta_ = Math.ceil(cinta_)\r\n    let cinta = materiales.filter(x => x.producto.grupo.nombre === 'Cinta de Embalaje')\r\n    let Nombre_sustrato = sustrato[0].producto.nombre\r\n    let tintas_color = []\r\n    let tintas_marca = []\r\n\r\n    let Estandar_de_color = ''\r\n\r\n    if(PRODUCTO.e_c){\r\n      Estandar_de_color = 'SI'\r\n    }else{\r\n      Estandar_de_color = 'NO'\r\n    }\r\n\r\n    let _i = 5;\r\n    for(let i = 0; i<tintas.length; i++){\r\n      if(tintas[i].producto.color === 'Negro'){\r\n        let peli = `Negro: ${PRODUCTO.cliente.codigo}-${PRODUCTO.producto.codigo}-${PRODUCTO.producto.version}-${montajes}-1`;\r\n        peliculas.push(peli)\r\n      }else if(tintas[i].producto.color === 'Cyan'){\r\n        let peli = `Cyan: ${PRODUCTO.cliente.codigo}-${PRODUCTO.producto.codigo}-${PRODUCTO.producto.version}-${montajes}-2`;\r\n        peliculas.push(peli)\r\n      }else if(tintas[i].producto.color === 'Magenta'){\r\n        let peli = `Magenta: ${PRODUCTO.cliente.codigo}-${PRODUCTO.producto.codigo}-${PRODUCTO.producto.version}-${montajes}-3`;\r\n        peliculas.push(peli)\r\n      }else if(tintas[i].producto.color === 'Amarillo'){\r\n        let peli = `Amarillo: ${PRODUCTO.cliente.codigo}-${PRODUCTO.producto.codigo}-${PRODUCTO.producto.version}-${montajes}-4`;\r\n        peliculas.push(peli)\r\n      }else{\r\n        let peli = `${tintas[i].producto.color}: ${PRODUCTO.cliente.codigo}-${PRODUCTO.producto.codigo}-${PRODUCTO.producto.version}-${montajes}-${_i++}`;\r\n        peliculas.push(peli)\r\n      }\r\n      tintas_color.push(tintas[i].producto.color)\r\n      let cantidad = (tintas[i].cantidad * this.PRODUCTO.paginas)/1000;\r\n      cantidad = Number(cantidad)\r\n      let cantidad_tinta = cantidad.toFixed(2)\r\n      let tinta = `${tintas[i].producto.color}: ${tintas[i].producto.nombre}(${tintas[i].producto.marca} - ${cantidad_tinta}${tintas[i].producto.unidad})`\r\n      tintas_marca.push(tinta)\r\n    }\r\n\r\n    for(let i=0; i<maquinas.length;i++){\r\n      maquina.push(maquinas[i].maquina.nombre);\r\n    }\r\n\r\n\r\n    \r\n\r\n    const pdf = new PdfMakeWrapper();\r\n    PdfMakeWrapper.setFonts(pdfFonts);\r\n\r\n\r\n    async function generarPDF(){\r\n      pdf.add(\r\n        new Table([\r\n          [\r\n            new Cell(await new Img('../../assets/poli_cintillo.png').width(85).margin([20, 5]).build()).rowSpan(4).end,\r\n            new Cell(new Txt(`\r\n            ORDEN DE PRODUCCIÓN`).bold().end).alignment('center').fontSize(13).rowSpan(4).end,\r\n            new Cell(new Txt('Código: FPR-008').end).fillColor('#dedede').fontSize(7).alignment('center').end,\r\n          ],\r\n          [\r\n            new Cell(new Txt('').end).end,\r\n            new Cell(new Txt('').end).end,\r\n            new Cell(new Txt('N° de Revisión: 0').end).fillColor('#dedede').fontSize(7).alignment('center').end,\r\n          ],\r\n          [\r\n            new Cell(new Txt('').end).end,\r\n            new Cell(new Txt('').end).end,\r\n            new Cell(new Txt('Fecha de Revision: 05/10/2021').end).fillColor('#dedede').fontSize(7).alignment('center').end,\r\n          ],\r\n          [\r\n            new Cell(new Txt('').end).end,\r\n            new Cell(new Txt('').end).end,\r\n            new Cell(new Txt('Página: 1 de 5').end).fillColor('#dedede').fontSize(7).alignment('center').end,\r\n          ],\r\n        ]).widths(['25%','50%','25%']).end\r\n      )\r\n\r\n      pdf.add(\r\n        new Table([\r\n          [\r\n            new Cell(new Table([\r\n              [\r\n                new Cell(new Txt('ORDEN DE COMPRA').bold().end).colSpan(2).alignment('center').fillColor('#000000').color('#ffffff').fontSize(9).end,\r\n                new Cell(new Txt('').end).end,\r\n              ],\r\n              [\r\n                new Cell(new Txt('N°').end).fillColor('#dedede').fontSize(9).end,\r\n                new Cell(new Txt(`${PRODUCTO.orden}`).end).fontSize(9).end\r\n              ],\r\n              [\r\n                new Cell(new Txt('Fecha de OC:').end).fillColor('#dedede').fontSize(9).end,\r\n                new Cell(new Txt(`${PRODUCTO.fecha_o}`).end).fontSize(9).end\r\n              ]\r\n            ]).widths(['40%','60%']).end\r\n            ).end,\r\n\r\n            new Cell(new Table([\r\n              [\r\n                new Cell(new Txt('PRODUCTO').bold().end).colSpan(2).alignment('center').fillColor('#000000').color('#ffffff').fontSize(9).end,\r\n                new Cell(new Txt('').end).end,\r\n              ],\r\n              [\r\n                new Cell(new Txt('NOMBRE:').end).fillColor('#dedede').fontSize(9).end,\r\n                new Cell(new Txt(`${PRODUCTO.producto.producto}`).end).fontSize(12).end\r\n              ],\r\n              [\r\n                new Cell(new Txt('CÓDIGO:').end).fillColor('#dedede').fontSize(9).end,\r\n                new Cell(new Txt(`${PRODUCTO.cliente.codigo}-${PRODUCTO.producto.codigo}-${PRODUCTO.producto.version}`).end).fontSize(12).end\r\n              ]\r\n            ]).widths(['25%','75%']).end\r\n            ).end,\r\n\r\n            new Cell(new Table([\r\n              [\r\n                new Cell(new Txt('ORDEN DE PRODUCCIÓN').bold().end).colSpan(2).alignment('center').fillColor('#000000').color('#ffffff').fontSize(9).end,\r\n                new Cell(new Txt('').end).end,\r\n              ],\r\n              [\r\n                new Cell(new Txt('N°:').end).fillColor('#dedede').fontSize(9).end,\r\n                new Cell(new Txt(`${PRODUCTO.sort}`).bold().end).fontSize(15).end\r\n              ],\r\n              [\r\n                new Cell(new Txt('FECHA DE EMISIÓN:').end).fillColor('#dedede').fontSize(8).end,\r\n                new Cell(new Txt(`${PRODUCTO.fecha}`).end).fontSize(9).end\r\n              ]\r\n            ]).widths(['40%','60%']).end\r\n            ).end,\r\n\r\n          ],\r\n          \r\n        ]).layout('noBorders').widths(['30%','40%','30%']).end\r\n\r\n      )\r\n      pdf.add(\r\n        new Table([\r\n          [\r\n            new Cell(new Table([\r\n              [\r\n                new Cell(new Txt('INFORMACIÓN DEL PRODUCTO').bold().end).colSpan(2).alignment('center').fillColor('#000000').color('#ffffff').fontSize(9).end,\r\n                new Cell(new Txt('').end).end,\r\n              ],\r\n              [\r\n                new Cell(new Txt('CLIENTE:').end).fillColor('#dedede').fontSize(9).end,\r\n                new Cell(new Txt(`${PRODUCTO.cliente.nombre}`).end).fontSize(12).end\r\n              ],\r\n              [\r\n                new Cell(new Txt('CÓDIGO DE PRODUCTO DEL CLIENTE:').end).fillColor('#dedede').fontSize(9).end,\r\n                new Cell(new Txt(`${PRODUCTO.producto.cod_cliente}`).end).fontSize(12).end\r\n              ],\r\n              [\r\n                new Cell(new Txt('CÓDIGO DE ESPECIFICACIÓN:').end).fillColor('#dedede').fontSize(9).end,\r\n                new Cell(new Txt(`E-${PRODUCTO.cliente.codigo}-${PRODUCTO.producto.codigo}-${PRODUCTO.producto.version}-${PRODUCTO.producto.edicion}`).end).fontSize(12).end\r\n              ]\r\n            ]).widths(['40%','60%']).end\r\n            ).end,\r\n\r\n          ],\r\n          \r\n        ]).layout('noBorders').widths(['100%']).end\r\n\r\n      )\r\n      pdf.add(\r\n        new Table([\r\n          [\r\n            new Cell(new Table([\r\n              [\r\n                new Cell(new Txt('PLANIFICACIÓN DE ENTREGAS').bold().end).colSpan(4).alignment('center').fillColor('#000000').color('#ffffff').fontSize(9).end,\r\n                new Cell(new Txt('').end).end,\r\n                new Cell(new Txt('').end).end,\r\n                new Cell(new Txt('').end).end,\r\n\r\n              ],\r\n              [\r\n                new Cell(new Txt('N°:').end).fillColor('#dedede').fontSize(9).end,\r\n                new Cell(new Txt('CANTIDAD:').end).fillColor('#dedede').fontSize(9).end,\r\n                new Cell(new Txt('FECHA SOLICITADA:').end).fillColor('#dedede').fontSize(9).end,\r\n                new Cell(new Txt('LUGAR DE ENTREGA:').end).fillColor('#dedede').fontSize(9).end,\r\n              ],\r\n              [\r\n                new Cell(new Txt(`1`).end).fontSize(9).end,\r\n                new Cell(new Txt(`${PRODUCTO.cantidad_}`).end).fontSize(9).end,\r\n                new Cell(new Txt(`${PRODUCTO.fecha_s}`).end).fontSize(9).end,\r\n                new Cell(new Txt(`${PRODUCTO.cliente.almacenes[PRODUCTO.montaje]}`).end).fontSize(9).end\r\n              ],\r\n              [\r\n                new Cell(new Txt(`TOTAL`).end).fillColor('#dedede').fontSize(9).end,\r\n                new Cell(new Txt(`${PRODUCTO.cantidad_}`).end).fontSize(9).end,\r\n                new Cell(new Txt(``).end).border([false]).fontSize(9).end,\r\n                new Cell(new Txt(``).end).border([false]).fontSize(9).end\r\n              ],\r\n            ]).widths(['7%','31%','31%','31%']).end\r\n            ).end,\r\n\r\n          ],\r\n          \r\n        ]).layout('noBorders').widths(['100%']).end\r\n\r\n      )\r\n      pdf.add(\r\n        new Table([\r\n          [\r\n            new Cell(new Table([\r\n              [\r\n                new Cell(new Txt('CARACTERÍSTICAS Y MATERIALES ').bold().end).alignment('center').fillColor('#000000').color('#ffffff').fontSize(9).end,\r\n              ],\r\n              [\r\n                new Cell(\r\n                  new Table([\r\n                    [\r\n                      new Cell(new Table([\r\n                        [\r\n                          new Cell(new Txt('PRE-IMPRESIÓN').end).fillColor('#dedede').fontSize(9).end,\r\n                        ],\r\n                        [\r\n                          new Cell(new Table([\r\n                            [\r\n                              new Cell(new Table([\r\n                                [\r\n                                  new Cell(new Txt('CÓDIGO DEL MONTAJE').end).alignment('center').fillColor('#dedede').fontSize(9).end,\r\n                                ],\r\n                                [\r\n                                  new Cell(new Txt(`M-${PRODUCTO.cliente.codigo}-${PRODUCTO.producto.codigo}-${PRODUCTO.producto.version}-${montajes}`).end).end\r\n                                ],\r\n                                [\r\n                                  new Cell(new Txt('CANTIDAD DE EJEMPLARES').end).alignment('center').fillColor('#dedede').fontSize(9).end,\r\n                                ],\r\n                                [\r\n                                  new Cell(new Txt(`${PRODUCTO.producto.ejemplares[PRODUCTO.montaje]}`).end).end\r\n                                ]\r\n                              ]).widths(['100%']).end\r\n                              ).fontSize(9).end,\r\n                              new Cell(\r\n                                new Table([\r\n                                [\r\n                                  new Cell(new Txt('CÓDIGO DE PELICULAS').end).alignment('center').fillColor('#dedede').fontSize(9).end,\r\n                                ],\r\n                                [\r\n                                  new Stack(peliculas).fontSize(9).end\r\n                                ]\r\n                              ]).widths(['100%']).end\r\n                              ).end,\r\n                            ],\r\n                          ]).layout('noBorders').widths(['50%', '50%']).end\r\n                          ).end,\r\n                        ]\r\n                      ]).layout('noBorders').widths(['100%']).end\r\n                      ).border([false]).fillColor('#ffffff').end,\r\n                    ], //FINAL PRE-IMPRESION\r\n                    [\r\n                      new Cell(new Table([\r\n                        [\r\n                          new Cell(new Txt('IMPRESIÓN').end).fillColor('#dedede').fontSize(9).end,\r\n                        ],\r\n                        [\r\n                          new Cell(new Table([\r\n                            [\r\n                              new Cell(new Table([\r\n                                [\r\n                                  new Cell(new Txt('SUSTRATO').end).alignment('center').fillColor('#dedede').fontSize(9).end,\r\n                                  new Cell(new Txt('TAMAÑO ORIGINAL').end).alignment('center').fillColor('#dedede').fontSize(9).end,\r\n                                ],\r\n                                [\r\n                                  new Cell(new Txt(Nombre_sustrato).end).fontSize(11).end,\r\n                                  new Cell(new Txt(`${sustrato[0].producto.ancho} x ${sustrato[0].producto.largo}`).end).alignment('center').fontSize(11).end,\r\n                                ],\r\n                                [\r\n                                  new Cell(new Txt('DIRECCIÓN DE FIBRA').end).alignment('center').fillColor('#dedede').fontSize(9).end,\r\n                                  new Cell(new Txt('TAMAÑO A IMPRIMIR').end).alignment('center').fillColor('#dedede').fontSize(9).end,\r\n                                ],\r\n                                [\r\n                                  new Cell(new Txt(sustrato[0].producto.largo).end).alignment('center').fontSize(11).end,\r\n                                  new Cell(new Txt(`${PRODUCTO.i_ancho} x ${PRODUCTO.i_largo}`).end).alignment('center').fontSize(11).end,\r\n                                ]\r\n\r\n\r\n                              ]).widths(['60%','40%']).end\r\n                              ).fontSize(9).end,\r\n\r\n\r\n\r\n                              // new Cell(new Table([\r\n                              //   [\r\n                              //     new Cell(new Txt('% DEMASIA').end).fillColor('#dedede').lineHeight(0.5).fontSize(9).end,\r\n                              //     new Cell(new Txt(demasia).end).fontSize(11).alignment('center').end,\r\n                              //   ],\r\n                              //   [\r\n                              //     new Cell(new Txt('HOJAS DE DEMASIA').end).fillColor('#dedede').fontSize(9).end,\r\n                              //     new Cell(new Txt(PRODUCTO.demasia).end).fontSize(11).alignment('center').end,\r\n                              //   ],\r\n                              //   [\r\n                              //     new Cell(new Txt('HOJAS A IMPRIMIR').end).fillColor('#dedede').fontSize(9).end,\r\n                              //     new Cell(new Txt(`${PRODUCTO.paginas - demasia}`).end).fontSize(11).alignment('center').end,\r\n                              //   ],\r\n                              //   [\r\n                              //     new Cell(new Txt('TOTAL DE HOJAS POR ASIGNAR').end).fillColor('#dedede').fontSize(9).end,\r\n                              //     new Cell(new Txt(PRODUCTO.paginas).end).fontSize(11).alignment('center').end,\r\n                              //   ]\r\n                              // ]).widths(['80%','20%']).end\r\n                              // ).fontSize(9).end,\r\n\r\n                              new Cell(new Table([\r\n                                [\r\n                                  new Cell(new Txt('% DEMASIA').end).fillColor('#dedede').alignment('center').fontSize(9).end,\r\n                                  new Cell(new Txt('HOJAS DE DEMASIA:').end).fillColor('#dedede').alignment('center').fontSize(9).end,\r\n                                ],\r\n                                [\r\n                                  new Cell(new Txt(demasia).end).fontSize(10).alignment('center').end,\r\n                                  new Cell(new Txt(PRODUCTO.demasia).end).fontSize(10).alignment('center').end,\r\n                                ],\r\n                                [\r\n                                  new Cell(new Txt('HOJAS A IMPRIMIR:').end).fillColor('#dedede').alignment('center').fontSize(9).end,\r\n                                  new Cell(new Txt('TOTAL HOJAS A ASIGNAR:').end).fillColor('#dedede').alignment('center').fontSize(9).end,\r\n                                ],\r\n                                [\r\n                                  new Cell(new Txt(`${PRODUCTO.paginas - PRODUCTO.demasia}`).bold().end).fontSize(12).alignment('center').end,\r\n                                  new Cell(new Txt(PRODUCTO.paginas).bold().end).fontSize(12).alignment('center').end,\r\n                                ]\r\n                              ]).widths(['50%','50%']).end\r\n                              ).end,\r\n                            ],\r\n                            [\r\n                              new Cell(new Table([\r\n                                [\r\n                                  new Cell(new Txt('BARNIZ').end).alignment('center').fillColor('#dedede').alignment('center').fontSize(9).end,\r\n                                  new Cell(new Txt('ESTANDAR DE COLOR:').alignment('center').end).fillColor('#dedede').alignment('center').fontSize(7).end,\r\n                                ],\r\n                                [\r\n                                  new Cell(new Txt(`${barniz[0].producto.nombre} (${barniz[0].producto.marca} - ${cantidad_barniz}${barniz[0].producto.unidad})`).end).fontSize(9).end,\r\n                                  new Cell(new Txt(Estandar_de_color).end).alignment('center').fontSize(9).end\r\n                                ]\r\n                              ]).widths(['70%','30%']).end\r\n                              ).fontSize(9).end,\r\n                              new Cell(new Table([\r\n                                [\r\n                                  new Cell(new Txt('TINTA').end).alignment('center').fillColor('#dedede').fontSize(9).end\r\n                                ],\r\n                                [\r\n                                  new Cell(new Stack(tintas_marca).end).fontSize(9).end\r\n                                ],\r\n                              ]).widths(['100%']).end\r\n                              ).fontSize(9).end,\r\n                              // new Cell(new Txt('').end).end\r\n                            ]\r\n                          ]).layout('noBorders').widths(['50%', '50%']).end\r\n                        // ]).layout('noBorders').widths(['33%', '27%', '40%']).end\r\n                          ).end\r\n                        ]\r\n                      ]).layout('noBorders').widths(['100%']).end\r\n                      ).border([false]).fillColor('#ffffff').end\r\n                    ],\r\n                    [\r\n                      new Cell(new Table([\r\n                        [\r\n                          new Cell(new Txt('POST-IMPRESIÓN').end).fillColor('#dedede').fontSize(9).end,\r\n                        ],\r\n                        [\r\n                          new Cell(new Table([\r\n                            [\r\n                              new Cell(new Table([\r\n                                [\r\n                                  new Cell(new Stack(PRODUCTO.producto.post).end).fontSize(9).border([false]).end,\r\n                                ],\r\n                                [\r\n                                  new Cell(new Txt('TIPO DE PEGA').alignment('center').end).fillColor('#dedede').fontSize(9).end,\r\n                                ],\r\n                                [\r\n                                  new Cell(new Txt(`${pega_nombre} (${pega_marca} - ${cantidad_pega}${pega_unidad})`).end).fontSize(9).end\r\n                                ]\r\n                              ]).widths(['100%']).end\r\n                              ).end,\r\n\r\n                              new Cell(new Table([\r\n                                [\r\n                                  new Cell(new Txt('CÓDIGO DE CAJA').end).alignment('center').fillColor('#dedede').fontSize(9).end,\r\n                                ],\r\n                                [\r\n                                  new Cell(new Txt(`${caja[0].producto.nombre}(${caja[0].producto.marca} - ${cantidad_cajas}${caja[0].producto.unidad})`).end).fontSize(9).end\r\n                                ],\r\n                                [\r\n                                  new Cell(new Txt('CINTA DE EMBALAJE').end).alignment('center').fillColor('#dedede').fontSize(9).end,\r\n                                ],\r\n                                [\r\n                                  new Cell(new Txt(`CINTA DE EMBALAJE CORRUGADO RECICLADO 3430(RELA - ${cinta_}Und)`).end).fontSize(9).end\r\n                                ]\r\n                              ]).widths(['100%']).end\r\n                              ).end\r\n                              \r\n                            ]\r\n                            \r\n                          ]).layout('noBorders').widths(['50%', '50%']).end\r\n                          ).end\r\n                        ]\r\n\r\n                      ]).layout('noBorders').widths(['100%']).end\r\n                      ).border([false]).fillColor('#ffffff').end\r\n                    ],\r\n                  ]).widths(['100%']).end\r\n                ).end\r\n              ]\r\n            ]).layout('noBorders').widths(['100%']).end\r\n            ).end,\r\n\r\n          ],\r\n          \r\n        ]).layout('noBorders').widths(['100%']).end\r\n\r\n      )\r\n      pdf.add(\r\n        new Table([\r\n          [\r\n            new Cell(new Txt('EQUIPOS').end).alignment('center').fillColor('#000000').color('#ffffff').fontSize(9).end,\r\n            new Cell(new Txt('OBSERVACIONES').end).alignment('center').fillColor('#000000').color('#ffffff').fontSize(9).end,\r\n            new Cell(new Txt('ELABORADO POR:').end).alignment('center').fillColor('#000000').color('#ffffff').fontSize(9).end,\r\n          ],\r\n          [\r\n            new Cell(new Stack(maquina).end).fontSize(9).end,\r\n            new Cell(new Txt(PRODUCTO.observacion).end).fontSize(9).end,\r\n            new Cell(new Txt(`Firma:\r\n          \r\n            Fecha:`).end).fontSize(9).end\r\n          ]\r\n\r\n        ]).widths(['34%','33%','33%']).end\r\n      )\r\n\r\n\r\n      // pdf.add(\r\n      //   new Table([\r\n      //     [\r\n      //       new Cell( await new Img('../../assets/Poligrafica_black_P.png').build()).end,\r\n      //       new Cell( new Table([[new Cell(new Txt('ORDEN DE PRODUCCIÓN').end).fillColor('#dedede').fontSize(9).end],\r\n      //                             [new Cell(new Txt(`${PRODUCTO.sort}`).end).fontSize(30).end],\r\n      //                             [new Cell(new Txt(`FECHA DE EMISION: ${fecha1}`).end).fontSize(8).end]\r\n      //                           ]).end).alignment('center').end\r\n      //     ]\r\n      //   ]).widths(['70%','30%']).layout('noBorders').end\r\n      // )\r\n      // pdf.add(\r\n\r\n      //   pdf.ln(2)\r\n        \r\n      // )\r\n      // pdf.add(\r\n      //   new Table([\r\n      //     [\r\n      //       new Cell( new Txt(`CLIENTE: ${PRODUCTO.cliente.nombre}`).end).end,\r\n      //       new Cell( new Txt(`O.C.: ${PRODUCTO.orden}`).end).end,\r\n      //     ],\r\n      //     [\r\n      //       new Cell( new Txt(`PRODUCTO: ${PRODUCTO.cliente.codigo} - ${PRODUCTO.producto.codigo} ${PRODUCTO.producto.producto}`).end).colSpan(2).end,\r\n      //       ''\r\n      //     ]\r\n      //   ]).widths(['60%','40%']).end\r\n      // )\r\n      // pdf.add(\r\n      //   new Table([\r\n      //     [\r\n      //       new Cell( new Txt('ENTREGAS').end).fillColor('#dedede').end\r\n      //     ]\r\n      //   ]).widths(['100%']).alignment('center').layout('noBorders').end\r\n      // )\r\n      // pdf.add(\r\n      //   new Table([\r\n      //     [\r\n      //       'N° ENTREGA','CANTIDAD','FECHA','OBSERVACIÓN'\r\n      //     ],\r\n      //     [\r\n      //       '1',\r\n      //       new Cell( new Txt(`${PRODUCTO.cantidad}`).end).end,\r\n      //       new Cell( new Txt(`${PRODUCTO.fecha_s}`).end).end,\r\n      //       ''\r\n      //     ],\r\n      //     [\r\n      //       'TOTAL',\r\n      //       new Cell( new Txt(`${PRODUCTO.cantidad}`).end).end,\r\n      //       new Cell( new Txt('').end).border([false, false]).end,\r\n      //       new Cell( new Txt('').end).border([false, false]).end\r\n      //     ]\r\n      //   ]).widths(['24%','24%','24%','28%']).end\r\n      // )\r\n      // pdf.add(\r\n      //   new Table([\r\n      //     [\r\n      //       new Cell( new Txt('MONTAJE Y DESARROLLO').end).fillColor('#dedede').end\r\n      //     ]\r\n      //   ]).widths(['100%']).alignment('center').layout('noBorders').end\r\n      // )\r\n      // pdf.add(\r\n      //   new Table([\r\n      //     [\r\n      //       'VERSIÓN','IMPRESIÓN','POST-IMPRESION'\r\n      //     ],\r\n      //     [\r\n      //       new Cell( new Txt(`${PRODUCTO.producto.version}`).end).end,\r\n      //       new Cell( new Stack(materiales).end).end,\r\n      //       new Cell( new Stack(PRODUCTO.producto.post).end).end\r\n      //     ],\r\n      //   ]).widths(['30%','40%','30%']).end\r\n      // )\r\n      // pdf.add(\r\n      //   new Table([\r\n      //     [\r\n      //       new Cell( new Txt('SUSTRATO').end).fillColor('#dedede').end\r\n      //     ]\r\n      //   ]).widths(['100%']).alignment('center').layout('noBorders').end\r\n      // )\r\n      // pdf.add(\r\n      //   new Table([\r\n      //     [\r\n      //       new Cell( new Txt(`TIPO DE SUSTRATO: ${PRODUCTO.producto.sustrato}`).end).colSpan(2).end,\r\n      //       ''\r\n      //     ],\r\n      //     [\r\n      //       new Cell( new Txt(`TAMAÑO ORIGINAL: ${PRODUCTO.producto.dimensiones}`).end).end,\r\n      //       new Cell( new Txt(`DIRECCIÓN DE FIBRA: ${PRODUCTO.producto.fibra}`).end).end,\r\n      //     ],\r\n      //     [\r\n      //       new Cell( new Txt(`DEMASIA: ${PRODUCTO.demasia}`).end).end,\r\n      //       new Cell( new Txt(`TAMAÑO A IMPRIMIR: ${PRODUCTO.paginas}`).end).end,\r\n      //     ]\r\n      //   ]).widths(['50%','50%']).end\r\n      // )\r\n  \r\n      pdf.create().download()\r\n    }\r\n\r\n    generarPDF();\r\n\r\n  }\r\n\r\n}\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component, OnInit } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { RestApiService } from 'src/app/services/rest-api.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  public NUEVA_ORDEN:boolean = false;\r\n\r\n  public cs:boolean = false;\r\n  public ps:boolean = false;\r\n  public os:boolean = false;\r\n\r\n  public Cantidad_ejemplares = 1000;\r\n  public Ejemplares_montados = 1;\r\n  public demasia = 0;\r\n  public paginas = Math.ceil(this.Cantidad_ejemplares / this.Ejemplares_montados)\r\n  public Fases:boolean = false;\r\n  public SinMaterial:boolean = false;\r\n\r\n  i_montajes = 0;\r\n\r\n  oc_ = '';\r\n  fo_ = '';\r\n  ae_ = '';\r\n  observacion_ = '';\r\n\r\n  x; \r\n  y;\r\n\r\n\r\n\r\n  public TOTALES = [\r\n    {\r\n      material:null,\r\n      marca:null,\r\n      total:null,\r\n      grupo:null,\r\n      presentacion:null,\r\n      neto:null,\r\n      unidad:null,\r\n      ancho:null,\r\n      largo:null\r\n    }\r\n  ];\r\n\r\n  public CLIENTES;\r\n  public PRODUCTOS = [];\r\n  public PRODUCTO = {\r\n    montajes:null,\r\n    ejemplares:null,\r\n    materiales: [],\r\n    _id:null,\r\n    grupo:null,\r\n    sustrato:[{\r\n      nombre:'',\r\n      marca:''\r\n    }],\r\n    dimensiones:null\r\n  };\r\n  public montajes\r\n  public MAQUINAS\r\n  public ALMACEN\r\n  public CANTIDAD = [];\r\n  public _CANTIDAD = [];\r\n\r\n  public CLIENTE\r\n  public OC\r\n\r\n  public Fecha_S\r\n\r\n  public restantes = [];\r\n  public almacenes = [];\r\n  public hoy;\r\n\r\n  constructor(public api:RestApiService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.obtenerClientes();\r\n    this.BuscarAlmacen();\r\n    this.Almacenado();\r\n    this.hoy = moment().format('yyyy-MM-DD');\r\n  }\r\n\r\n  NumToLet(n){\r\n    switch(n)\r\n    {\r\n        case 0: return \"A\";\r\n        case 1: return \"B\";\r\n        case 2: return \"C\";\r\n        case 3: return \"D\";\r\n        case 4: return \"E\";\r\n        case 5: return \"F\";\r\n        case 6: return \"G\";\r\n        case 7: return \"H\";\r\n        case 8: return \"I\";\r\n    }\r\n\r\n  }\r\n\r\n  alertaRoja(aja){\r\n    let cantidad = this.PRODUCTO.materiales.length\r\n    if(cantidad > this.restantes.length){\r\n      this.restantes.push(aja)\r\n    }else{\r\n      this.restantes = [];\r\n      this.restantes.push(aja)\r\n    }\r\n\r\n    //console.log(this.restantes)\r\n  }\r\n\r\n  modal_nueva_orden(){\r\n    if(!this.NUEVA_ORDEN){\r\n      this.NUEVA_ORDEN = true\r\n    }else{\r\n      this.NUEVA_ORDEN = false\r\n    }\r\n  }\r\n\r\n  obtenerClientes(){\r\n    this.api.GetClientes()\r\n      .subscribe((resp:any)=>{\r\n        this.CLIENTES = resp.clientes\r\n      })\r\n  }\r\n\r\n  cliente_selected(e){\r\n    if(e.target.value === '0'){\r\n      this.cs = false \r\n    }else{\r\n      this.cs = true;\r\n      this.CLIENTE = e.target.value\r\n      let index = this.CLIENTES.find(x => x._id === e.target.value)\r\n      this.ALMACEN = index.almacenes;\r\n\r\n      //console.log(this.ALMACEN)\r\n    }\r\n\r\n    this.api.getById(e.target.value)\r\n      .subscribe((resp:any)=>{\r\n        this.PRODUCTOS = resp.productos;\r\n        //console.log(this.PRODUCTOS)\r\n      })\r\n  }\r\n\r\n  Almacenado(){\r\n    this.api.getAlmacenado()\r\n      .subscribe((resp:any)=>{\r\n        this._CANTIDAD = resp;\r\n        this.totalizar_materiales();\r\n      })\r\n  }\r\n\r\n  cambios(){\r\n\r\n    this.Ejemplares_montados = this.PRODUCTO.ejemplares[this.i_montajes]\r\n    this.Ejemplares(this.Ejemplares_montados)\r\n  }\r\n\r\n  producto_selected(e){\r\n\r\n    if(e.target.value === '0'){\r\n      this.ps = false \r\n    }else{\r\n      this.ps = true;\r\n    }\r\n\r\n    this.api.getOneById(e.target.value)\r\n      .subscribe((resp:any)=>{\r\n        this.PRODUCTO = resp.producto;\r\n        //console.log(this.PRODUCTO,'PRODUCTO')\r\n        this.montajes = this.PRODUCTO.montajes\r\n        this.Ejemplares_montados = this.PRODUCTO.ejemplares[this.i_montajes];\r\n        this.Ejemplares(this.Ejemplares_montados)\r\n        this.MAQUINAS = resp.maquinas;\r\n        //   this.modal_nueva_orden()\r\n        let x = this.PRODUCTO.materiales.length;\r\n        this.CANTIDAD = [];\r\n        for(let i=0; i<x; i++){\r\n          let respuesta = this._CANTIDAD.find(x => x.material.nombre == this.PRODUCTO[this.i_montajes].materiales[i].producto.nombre && x.material.marca == this.PRODUCTO.materiales[i].producto.marca && x.material.grupo.nombre)\r\n          \r\n          //console.log(this.PRODUCTO)\r\n          if(!respuesta){\r\n            this.SinMaterial = true;\r\n            return\r\n          }else{\r\n            this.SinMaterial = false;\r\n          }\r\n          \r\n          this.CANTIDAD.push(respuesta)\r\n        }\r\n       })\r\n\r\n\r\n  }\r\n\r\n  orden_selected(e){\r\n    if(e.target.value === null){\r\n      this.os = false \r\n    }else{\r\n      this.os = true;\r\n      this.OC = e.target.value;\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  BuscarAlmacen(){\r\n    this.api.getAlmacen()\r\n      .subscribe((resp:any) => {\r\n        this.ALMACEN = resp.materiales;\r\n        this.totalizar_materiales();\r\n      })\r\n  }\r\n\r\n  Cantidad(e){\r\n    this.Cantidad_ejemplares = e.target.value\r\n    this.paginas = Math.ceil(this.Cantidad_ejemplares / this.Ejemplares_montados)\r\n    let demasia = (<HTMLInputElement>document.getElementById('demasia_input')).value;\r\n    this.Demasia(demasia)\r\n    // this.paginas = this.paginas + this.demasia\r\n    // this.paginas = this.paginas\r\n  }\r\n\r\n  Ejemplares(e){\r\n    this.Ejemplares_montados = e\r\n    this.paginas = Math.ceil(this.Cantidad_ejemplares / this.Ejemplares_montados) \r\n    this.paginas = this.paginas + this.demasia\r\n    this.paginas = (this.paginas)\r\n  }\r\n  Demasia(e){\r\n\r\n    this.paginas = Math.ceil(this.Cantidad_ejemplares / this.Ejemplares_montados)\r\n    this.demasia = Math.ceil(e * this.paginas / 100)\r\n    this.paginas = this.paginas + this.demasia\r\n    this.paginas = (this.paginas)\r\n\r\n  }\r\n\r\n  buscar_tintas(tinta, marca){\r\n    let almacenado:any = this._CANTIDAD.filter(x => x.material.nombre === tinta && x.material.marca === marca)\r\n    if(almacenado.length < 1){\r\n      return 'No hay producto en inventario'\r\n    }else{\r\n      let cantidades = 0;\r\n      for(let i = 0; i<almacenado.length; i++)\r\n        {\r\n\r\n          cantidades = cantidades +  Number(almacenado[i].cantidad)\r\n          // //console.log(almacenado[i].material.nombre, ' <> ', cantidades)\r\n        }\r\n        cantidades =  cantidades * almacenado[0].material.neto;\r\n        return cantidades.toFixed(2)\r\n      }\r\n  }\r\n\r\n  restantes_(tinta, marca,i,caja?){\r\n    let almacenado:any = this._CANTIDAD.filter(x => x.material.nombre === tinta && x.material.marca === marca)\r\n    if(almacenado.length < 1){\r\n      return 0\r\n    }else{\r\n      \r\n      let cantidades = 0;\r\n      for(let i = 0; i<almacenado.length; i++)\r\n        {\r\n\r\n          cantidades = cantidades +  Number(almacenado[i].cantidad)\r\n        }\r\n        cantidades =  cantidades * almacenado[0].material.neto;\r\n        //  * this.paginas\r\n        let necesario\r\n        if(caja === 'caja'){\r\n          necesario = this.Cantidad_ejemplares / this.PRODUCTO.materiales[this.i_montajes][i].cantidad;\r\n        }else{\r\n          necesario = (this.PRODUCTO.materiales[this.i_montajes][i].cantidad * this.paginas)/1000;\r\n        }\r\n        let EnAlmacen = cantidades.toFixed(2);\r\n        return (Number(EnAlmacen) - necesario).toFixed(2);\r\n      }\r\n  }\r\n\r\n  totalizar_materiales(){\r\n    for(let i=0; i<this._CANTIDAD.length; i++){\r\n      let existe = this.TOTALES.find(x => x.material == this._CANTIDAD[i].material.nombre && x.marca == this._CANTIDAD[i].material.marca);\r\n      if(existe){\r\n          let x = this.TOTALES.findIndex(x => x.material == this._CANTIDAD[i].material.nombre && x.marca == this._CANTIDAD[i].material.marca)\r\n          \r\n          this.TOTALES[x].total = Number(this.TOTALES[x].total)\r\n          this._CANTIDAD[i].cantidad = Number(this._CANTIDAD[i].cantidad)\r\n          this._CANTIDAD[i].neto = Number(this._CANTIDAD[i].material.neto)\r\n\r\n          let def = (this._CANTIDAD[i].neto * this._CANTIDAD[i].cantidad) / this.TOTALES[x].neto\r\n\r\n          this.TOTALES[x].total = this.TOTALES[x].total + def;\r\n\r\n        }else{\r\n        this.TOTALES.push({\r\n                       material:this._CANTIDAD[i].material.nombre,\r\n                       marca:this._CANTIDAD[i].material.marca,\r\n                       grupo:this._CANTIDAD[i].material.grupo.nombre,\r\n                       presentacion:this._CANTIDAD[i].material.presentacion,\r\n                       neto:this._CANTIDAD[i].material.neto,\r\n                       unidad:this._CANTIDAD[i].material.unidad,\r\n                      ancho:this._CANTIDAD[i].material.ancho,\r\n                      largo:this._CANTIDAD[i].material.largo,\r\n                      total:this._CANTIDAD[i].cantidad\r\n                    })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  Fecha_s(e){\r\n    this.Fecha_S = e;\r\n  }\r\n\r\n  TimesTime(){\r\n\r\n    let index = this.PRODUCTO.materiales[this.i_montajes].length\r\n    \r\n    for(let i=0; i<index; i++){\r\n      if(this.PRODUCTO.materiales[this.i_montajes][i].producto.grupo.nombre != \"Sustrato\")\r\n      {\r\n        let resto;\r\n        if(this.PRODUCTO.materiales[this.i_montajes][i].producto.grupo.nombre === \"Cajas Corrugadas\"){\r\n          resto = this.restantes_(this.PRODUCTO.materiales[this.i_montajes][i].producto.nombre, this.PRODUCTO.materiales[this.i_montajes][i].producto.marca,i,'caja')\r\n        }else{\r\n          resto = this.restantes_(this.PRODUCTO.materiales[this.i_montajes][i].producto.nombre, this.PRODUCTO.materiales[this.i_montajes][i].producto.marca,i)\r\n        }\r\n        resto = Number(resto)\r\n        if(resto < 0){\r\n          //console.log(this.PRODUCTO.materiales[this.i_montajes][i].producto.nombre, '<>', resto)\r\n            Swal.fire({\r\n              icon:'error',\r\n              title:'Oops!',\r\n              text:'No posees los materiales necesarios para realizar este producto',\r\n              showConfirmButton:false,\r\n              // timer:2500\r\n            })\r\n            return\r\n        }\r\n      }\r\n    }\r\n\r\n    // for(let i=0; i<this.restantes.length; i++){\r\n    //   if(this.restantes[i] < 0){\r\n    //     Swal.fire({\r\n    //       icon:'error',\r\n    //       title:'Oops!',\r\n    //       text:'No posees los materiales necesarios para realizar este producto',\r\n    //       showConfirmButton:false,\r\n    //       // timer:2500\r\n    //     })\r\n    //     return\r\n    //   }\r\n    // }\r\n\r\n    this.Fases = true;\r\n    this.modal_nueva_orden()\r\n  }\r\n\r\n  colocarFecha(e,fase){\r\n\r\n    // CPH = CANTIDAD POR HOJAS\r\n\r\n    this.api.getFechas(e.target.value)\r\n      .subscribe((resp:any)=>{\r\n\r\n        //console.log(resp,'__________________________')\r\n        let cph = 0\r\n        let HorasAgregadas = 0\r\n        let fecha;\r\n\r\n        if(resp.trabajo.length > 0){\r\n          cph = resp.trabajo[0].maquina.cph\r\n\r\n            // HpC = this.paginas / diasAgregados;\r\n            // let hoymas3 = moment(resp.trabajo[0].fecha).add(HpC, 'hours').format('yyyy-MM-DD');\r\n\r\n            fecha = resp.trabajo[0].fecha;\r\n        }else{\r\n          let hoy = moment().format('yyyy-MM-DD');\r\n          fecha = hoy;\r\n        }\r\n\r\n        (<HTMLInputElement>document.getElementById(fase)).value = fecha\r\n\r\n\r\n        if(cph > 0){\r\n          HorasAgregadas = this.paginas / cph;\r\n        }else{\r\n          let MaquinaSelected2 = this.MAQUINAS.find(x => x._id == e.target.value)\r\n\r\n          cph = MaquinaSelected2.cph;\r\n\r\n          HorasAgregadas = this.paginas / cph;\r\n        }\r\n\r\n        let dias = HorasAgregadas / 7;\r\n\r\n          let hoymas3 = moment(fecha).add(dias, 'days').format('yyyy-MM-DD');\r\n\r\n          (<HTMLInputElement>document.getElementById(`${fase}-C`)).value = hoymas3;\r\n\r\n      })\r\n  }\r\n\r\n  reprogramar(e, fase){\r\n\r\n          let maquina = (<HTMLInputElement>document.getElementById(`${fase}-maquina`)).value\r\n          let MaquinaSelected2 = this.MAQUINAS.find(x => x._id == maquina)\r\n\r\n          let cph = MaquinaSelected2.cph;\r\n\r\n          let HorasAgregadas = this.paginas / cph;\r\n\r\n          let dias = HorasAgregadas / 7;\r\n\r\n          let hoymas3 = moment(e.target.value).add(dias, 'days').format('yyyy-MM-DD');\r\n\r\n          (<HTMLInputElement>document.getElementById(`${fase}-C`)).value = hoymas3;\r\n  }\r\n\r\n  test(){\r\n    //console.log()\r\n  }\r\n\r\n  \r\n  finalizar(cantidad){\r\n\r\n    let data = {\r\n      fecha_o:this.fo_,\r\n      montaje:this.i_montajes,\r\n      cliente:this.CLIENTE,\r\n      producto:this.PRODUCTO._id,\r\n      orden_compra:this.oc_,\r\n      cantidad:cantidad.value,\r\n      paginas:this.paginas,\r\n      demasia:this.demasia,\r\n      fecha_s:this.Fecha_S,\r\n      almacen:this.ae_,\r\n      e_c:(<HTMLInputElement>document.getElementById(`e_c`)).checked,\r\n      i_ancho:(<HTMLInputElement>document.getElementById(`ancho_imprimir`)).value,\r\n      i_largo:(<HTMLInputElement>document.getElementById(`largo_imprimir`)).value,\r\n      observacion:this.observacion_\r\n    }\r\n\r\n    this.api.postOrden(data)\r\n      .subscribe((resp:any)=>{\r\n        let fases = this.PRODUCTO.grupo.tipos.length\r\n        for(let x=0; x<fases; x++){\r\n          \r\n          let fase = this.PRODUCTO.grupo.tipos[x]\r\n          let maquina = (<HTMLInputElement>document.getElementById(`${fase}-maquina`)).value\r\n          let fechaI = (<HTMLInputElement>document.getElementById(`${fase}`)).value\r\n          let fecha = (<HTMLInputElement>document.getElementById(`${fase}-C`)).value\r\n\r\n          let Data = {\r\n            maquina,\r\n            fechaI, \r\n            fecha,\r\n            orden:resp\r\n          }\r\n\r\n          this.api.postOrden2(Data)\r\n            .subscribe((respuesta:any)=>{\r\n              //console.log(respuesta)\r\n            })\r\n\r\n        }\r\n        this.router.navigate([`/orden-produccion/${resp}`]);\r\n      })\r\n  }\r\n\r\n//   totalizar_materiales(){\r\n\r\n  \r\n//     for(let i=0; i<this.ALMACEN.length; i++){\r\n\r\n//       let existe = this.TOTALES.find(x => x.material ==  this.ALMACEN[i].nombre && x.marca == this.ALMACEN[i].marca);\r\n\r\n//       if(existe){\r\n//         let findIndex = this.TOTALES.findIndex(x => x.material ==  this.ALMACEN[i].nombre && x.marca == this.ALMACEN[i].marca) \r\n\r\n//        let all = this.TOTALES[findIndex].total\r\n       \r\n//        this.TOTALES[findIndex].total = all + this.ALMACEN[i].cantidad\r\n\r\n\r\n//       }else{\r\n//         this.TOTALES.push({\r\n//           material:this.ALMACEN[i].nombre,\r\n//           marca:this.ALMACEN[i].marca,\r\n//           total:this.ALMACEN[i].cantidad,\r\n//           grupo:this.ALMACEN[i].grupo.nombre,\r\n//           presentacion:this.ALMACEN[i].presentacion,\r\n//           neto:this.ALMACEN[i].neto,\r\n//           unidad:this.ALMACEN[i].unidad\r\n//         })\r\n//       }\r\n\r\n//       //console.log(this.TOTALES)\r\n\r\n//     }\r\n//  }\r\n\r\n}\r\n","<div class=\"columns mt-5\">\r\n    <div class=\"column is-3\">\r\n        <div class=\"card\">\r\n            <div class=\"card-content\">\r\n                <div class=\"field\">\r\n                    <label class=\"label\">Cliente</label>\r\n                    <div class=\"control\">\r\n                        <div class=\"select\">\r\n                            <select id='cliente' (change)='cliente_selected($event)'>\r\n                                <option value='0'>Selecciona Cliente</option>\r\n                                <option *ngFor='let cliente of CLIENTES' value=\"{{cliente._id}}\">{{cliente.nombre}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\" *ngIf='cs'>\r\n                    <label class=\"label\">Producto</label>\r\n                    <div class=\"control\">\r\n                        <div class=\"select\">\r\n                            <select id='producto' (change)='producto_selected($event)'>\r\n                                <option value='0'>Selecciona Producto</option>\r\n                                <option *ngFor='let producto of PRODUCTOS' value='{{producto._id}}'>{{producto.producto}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\" *ngIf='ps'>\r\n                    <label class=\"label\">Orden de Compra</label>\r\n                    <div class=\"control\">\r\n                        <!-- <input type=\"text\" class=\"input\" (change)='orden_selected($event)' [(ngModel)]=\"userName\"> -->\r\n                        <input type=\"text\" class=\"input\" [(ngModel)]=\"oc_\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\" *ngIf='oc_'>\r\n                <label class=\"label\">Fecha orden de compra:</label>\r\n                <div class=\"control\">\r\n                    <input type=\"date\" name=\"f_oc\" class=\"input\" max=\"{{hoy}}\" [(ngModel)]=\"fo_\">\r\n                </div>\r\n                </div>\r\n\r\n                <div class=\"field\" *ngIf='fo_'>\r\n                    <label class=\"label\">Almacen de entrega:</label>\r\n                    <div class=\"control\">\r\n                        <div class=\"select\">\r\n                            <select id='producto' (change)='producto_selected($event)' [(ngModel)]=\"ae_\">\r\n                                <option value='0'>Selecciona Producto</option>\r\n                                <option *ngFor='let almacen of ALMACEN' value='{{almacen}}'>{{almacen}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button class=\"button is-primary\" (click)='modal_nueva_orden()' [disabled]=\"!ae_\">Realizar Programación</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"column\" *ngIf='Fases'>\r\n        <div class=\"card planificacion\">\r\n            <div class=\"card-content\">\r\n                <div class=\"titulo\">Fases de la Producción</div>\r\n                <div class=\"card\" *ngFor='let fase of PRODUCTO.grupo.tipos'>\r\n                    <div class=\"card-content\">\r\n                            <div class=\"subtitulo_\">\r\n                                {{fase}}\r\n                            </div>\r\n                        <div class=\"columns\">\r\n                            <div class=\"column\"><div class=\"field\">\r\n                                <label class=\"label\">Maquina</label>\r\n                                <div class=\"control\">\r\n                                    <div class=\"select\">\r\n                                        <select (change)='colocarFecha($event, fase)' id='{{fase}}-maquina'>\r\n                                                <option value=\"\">Selecciona Maquina</option>\r\n                                            <ng-container *ngFor='let maquina of MAQUINAS'>\r\n                                                <option value=\"{{maquina._id}}\" *ngIf='maquina.tipo === fase'>{{maquina.nombre}}</option>\r\n                                            </ng-container>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div></div>\r\n                            <div class=\"column\">\r\n                                <div class=\"field\">\r\n                                    <label class=\"label\">\r\n                                        Fecha de Inicio\r\n                                    </label>\r\n                                    <div class=\"control\">\r\n                                        <input type=\"date\" class=\"input\" id='{{fase}}' (change)='reprogramar($event, fase)'>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"column\">\r\n                                <div class=\"field\">\r\n                                    <label class=\"label\">\r\n                                        Culminación Estimada\r\n                                    </label>\r\n                                    <div class=\"control\">\r\n                                        <input type=\"date\" class=\"input\" id='{{fase}}-C' disabled>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button class=\"button is-primary mt-5\" (click)='finalizar(cantidad)'>Generar Orden de Produccion</button>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':NUEVA_ORDEN}\">\r\n    <div class=\"modal-background\" (click)='modal_nueva_orden()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            <div class=\"subtitulo\">Nueva Orden de Producción</div>\r\n            <hr>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Cantidad</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"number\" class=\"input\" value='1000' (change)='Cantidad($event)' #cantidad>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Ej. Montados</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"number\" class=\"input\" [value]='PRODUCTO.ejemplares' (change)='Ejemplares($event.target.value)'>\r\n                        </div>\r\n                    </div>\r\n                </div> -->\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Demasia (%)</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"number\" class=\"input\" value='0' id='demasia_input' (change)='Demasia($event.target.value)'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Fecha Solic.</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"date\" class=\"input\" value='0' [min]=\"hoy\" (change)='Fecha_s($event.target.value)'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Tamaño de sustrato a imprimir:</label>\r\n                <div class=\"control\">\r\n                    <div class=\"columns\">\r\n                        <div class=\"column\">\r\n                            <div class=\"columns\">\r\n                                <ng-container *ngFor='let materiales of PRODUCTO.materiales[i_montajes]'>\r\n                                    <ng-container *ngIf='materiales.producto.grupo.nombre === \"Sustrato\"'>\r\n                                <div class=\"column\">\r\n                                    <label class=\"label\">ancho:</label>\r\n                                    <input type=\"number\" min=\"10\" class=\"input\" value=\"{{materiales.producto.ancho}}\" id=\"ancho_imprimir\">\r\n                                </div>\r\n                                <div class=\"column\">\r\n                                    <label class=\"label\">largo:</label>\r\n                                    <input type=\"number\"  min=\"10\" class=\"input\" value=\"{{materiales.producto.largo}}\" id=\"largo_imprimir\">\r\n                                </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"column\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br>\r\n            <input type=\"checkbox\" name=\"Estandar\" id=\"e_c\"> Estandar de Colores\r\n            <hr>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Observación:</label>\r\n                <textarea class=\"textarea\" placeholder=\"Observación\" [(ngModel)]=\"observacion_\"></textarea>\r\n            </div>\r\n            <hr>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Montaje:</label>\r\n                <div class=\"select\">\r\n                    <select name=\"montaje\" [(ngModel)]=\"i_montajes\" (click)=\"cambios()\">\r\n                        <option value=\"{{i}}\" *ngFor=\"let e of [].constructor(montajes); let i = index\">\r\n                            Montaje {{NumToLet(i)}}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <b>Ejemplares montados: </b>{{Ejemplares_montados}} <br>\r\n            <b>Sustrato</b><br>\r\n            <p *ngFor='let materiales of PRODUCTO.materiales[i_montajes]'>\r\n                <ng-container *ngIf='materiales.producto.grupo.nombre === \"Sustrato\"'>\r\n                    {{materiales.producto.nombre}} {{materiales.producto.marca}} ({{materiales.producto.ancho}} x {{materiales.producto.largo}}) x {{paginas}} Hojas\r\n                </ng-container>\r\n            </p>\r\n            <hr>\r\n            <b>Materia Prima</b>\r\n            <div *ngIf=\"SinMaterial\">\r\n                <article class=\"message is-danger\">\r\n                    <div class=\"message-body\">\r\n                      Actualmente en su inventario no hay registrada la materia prima solicitada para realizar este producto, ingrese nueva materia e intentelo de nuevo\r\n                    </div>\r\n                  </article>\r\n            </div><br>\r\n            <b>Tintas</b>\r\n            <table class=\"table is-fullwidth\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Mat. a utilizar</th>\r\n                        <th>Cant. Necesaria</th>\r\n                        <th>Cant. Almacen</th>\r\n                        <th>Cant. Restante</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <ng-container *ngFor='let material of PRODUCTO.materiales[i_montajes];let i = index'>\r\n                        <tr *ngIf='material.producto.grupo.nombre === \"Tinta\"'>\r\n                            <td>{{material.producto.nombre}} ({{material.producto.marca}})</td>\r\n                            <td>{{((material.cantidad * paginas) / 1000).toFixed(2)}}</td>\r\n                            <td>{{buscar_tintas(material.producto.nombre,material.producto.marca)}}</td>\r\n                            <td>{{restantes_(material.producto.nombre,material.producto.marca,i)}}</td>\r\n                        </tr>\r\n                    </ng-container>\r\n                </tbody>\r\n            </table>\r\n\r\n            <b>Barniz</b>\r\n            <table class=\"table is-fullwidth\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Mat. a utilizar</th>\r\n                        <th>Cant. Necesaria</th>\r\n                        <th>Cant. Almacen</th>\r\n                        <th>Cant. Restante</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <ng-container *ngFor='let material of PRODUCTO.materiales[i_montajes];let i = index'>\r\n                        <tr *ngIf='material.producto.grupo.nombre === \"Barniz\"'>\r\n                            <td>{{material.producto.nombre}} ({{material.producto.marca}})</td>\r\n                            <td>{{((material.cantidad * paginas)/ 1000).toFixed(2)}}</td>\r\n                            <td>{{buscar_tintas(material.producto.nombre,material.producto.marca)}}</td>\r\n                            <td>{{restantes_(material.producto.nombre,material.producto.marca,i)}}</td>\r\n                        </tr>\r\n                    </ng-container>\r\n                </tbody>\r\n            </table>\r\n\r\n            <b>Pega</b>\r\n            <table class=\"table is-fullwidth\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Mat. a utilizar</th>\r\n                        <th>Cant. Necesaria</th>\r\n                        <th>Cant. Almacen</th>\r\n                        <th>Cant. Restante</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <ng-container *ngFor='let material of PRODUCTO.materiales[i_montajes];let i = index'>\r\n                        <tr *ngIf='material.producto.grupo.nombre === \"Pega\"'>\r\n                            <td>{{material.producto.nombre}} ({{material.producto.marca}})</td>\r\n                            <td>{{((material.cantidad * Cantidad_ejemplares) / 1000).toFixed(2)}}</td>\r\n                            <td>{{buscar_tintas(material.producto.nombre,material.producto.marca)}}</td>\r\n                            <!-- <td>{{restantes_(material.producto.nombre,material.producto.marca,i)}}</td> -->\r\n                            <td>{{(buscar_tintas(material.producto.nombre,material.producto.marca)-((material.cantidad * Cantidad_ejemplares) / 1000).toFixed(2))}}</td>\r\n                        </tr>\r\n                    </ng-container>\r\n                </tbody>\r\n            </table>\r\n\r\n            <b>Cajas Corrugadas</b>\r\n            <table class=\"table is-fullwidth\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Mat. a utilizar</th>\r\n                        <th>Cant. Necesaria</th>\r\n                        <th>Cant. Almacen</th>\r\n                        <th>Cant. Restante</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <ng-container *ngFor='let material of PRODUCTO.materiales[i_montajes];let i = index'>\r\n                        <tr *ngIf='material.producto.grupo.nombre === \"Cajas Corrugadas\"'>\r\n                            <td>{{material.producto.nombre}} ({{material.producto.marca}})</td>\r\n                            <td>{{(Cantidad_ejemplares / material.cantidad).toFixed(2)}}</td>\r\n                            <td>{{buscar_tintas(material.producto.nombre,material.producto.marca)}}</td>\r\n                            <td>{{restantes_(material.producto.nombre,material.producto.marca,i,'caja')}}</td>\r\n                        </tr>\r\n                    </ng-container>\r\n                </tbody>\r\n            </table>\r\n            <!-- <table class=\"table is-fullwidth\" *ngIf=\"!SinMaterial\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Mat. a utilizar</th>\r\n                        <th>Cant. Necesaria</th>\r\n                        <th>Cant. Almacen</th>\r\n                        <th>Cant. Restante</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <ng-container *ngFor='let material of PRODUCTO.materiales;let i = index'>\r\n                    <tr *ngIf='material.producto.grupo.nombre != \"Sustrato\"'>\r\n                            <td>\r\n                                {{material.producto.nombre}}({{material.producto.marca}})\r\n                            </td>\r\n                            <td>\r\n                                {{(material.cantidad / 1000) * Cantidad_ejemplares}}\r\n                            </td>\r\n                            <td >\r\n                                <ng-container *ngFor=\"let totales of TOTALES\">\r\n                                    <p *ngIf=\"material.producto.nombre === totales.material && material.producto.marca === totales.marca\">\r\n                                        {{totales.total * totales.neto}}\r\n                                    </p>\r\n                                </ng-container>\r\n                                <!-- {{CANTIDAD[i].material.neto * CANTIDAD[i].cantidad}} -->\r\n                            <!-- </td>\r\n                            <td>\r\n                                <ng-container *ngFor=\"let totales of TOTALES\">\r\n                                    <p *ngIf=\"material.producto.nombre === totales.material && material.producto.marca === totales.marca\">\r\n                                        {{totales.total * totales.neto - (material.cantidad / 1000) * Cantidad_ejemplares}}\r\n                                        {{alertaRoja(totales.total * totales.neto - (material.cantidad / 1000) * Cantidad_ejemplares)}}\r\n                                    </p>\r\n                                </ng-container>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-container>\r\n                </tbody>\r\n            </table> --> \r\n            <button class=\"button is-primary\" (click)='TimesTime()' *ngIf=\"!SinMaterial\">Gestionar tiempo</button>\r\n        </div>\r\n    </div>\r\n</div><!--�K^K��\r\n�K��\r\nJ�ad�T �K��Q\\�� Џ�\u0015�\u0015�c\u0002�d�֦4&S�0gb�+6�Z7��Z_p\u001a��ԉQrs-\tTzr\"�\u0007�3䵑�>J�0�h�\u0016z�%ɯ�\u0012�X�\u0000\u0017��¹�zjا��\u0016\u0014�\u0013㳢�����\t�D���;^q��E0\u0001�=^�\u0019�f��p��&��Kk��\u0014���ϑ/������:\"�l��b��^W\u001e��4d\u0005��\u001a\u0012x5������\u001d,� ��_o=e���D>�<1\f?:��S�ͤ\u0001Z�u�#on{����F�g^ĺ�##����)d]G/N~����`\r\nk]������5)~\u0004����w9��\u001aB�F[\f�\u00174ƌ\u001eOl�3xSW��.Vu\u001f�_-9�c��L��ٟa��\u0012j��*>6\u0010��A�خF!�h\u00152C�\"��;��}b���>�g��\u0000u���t������H�g���_���p��� ;��BͺR�B�k�?�q�e\"��@��U2}�\u0012�/\u0000� \u0002R\u0000;�\u0005� \u0002\u0006� \u0002\u0015� \u0002�\u0002�N�X\u0018`\f� \u0002\u0000� \u0002-->","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Poligrafica';\r\n}\r\n","<router-outlet></router-outlet><!--�\u0016+X@\t�@L�h��\u0006\u001d�R�\u001e\u000e�/.\u0011Ŀ*�\u0005��Gf֥�n\u0006�Ϧ�\\q\u0002�\n\u001dϓ:b�.%¼\u0015�+(_&�(|\u0019{Jl���\u001e}m��\u0002K\b�X�(D�1s��;]d���yg#I\u0001P`�\u0019����x�ŉ�&�J\u0002��[Q^h�pP$�'r\u000b3����) 1a-v&\u0003�93B?����$=�\u0003�?�����v��xj^�e��fs8��>(òE{��;\f�\ncu\u000e�ξiN\u0001cX�A��a�΅f��YRju���Z\f\u0016�S0W�pi?̳�������f�\u000bk+z�#\u0006D�\u0016c!f�t�\u001a�+\u0001�m,ܱ�l�(�8�*#�\t����3���Һ |KY�c[~\u0019�g*^P\u001e=�8�\u001b� \u0013��j�\u0013To>*��]�siͧ��㵯l>�b!�S�4���#d'�r�$Ѹtj�p\u0016�u�:\u0015\u0002c��s����\u001b\\�T������K��[��p�VS�Ȍ��\u00126��R�Ε\u0003��BoD4\u001a�\u0019�\u0000���\u0007l�3�p�\u0000�L\u0003R\u0007W�\u0005�L\u0003\u0006�L\u0003\u0015�L\u0003�\u0005�OR3�b\u001f�L\u0003\u0000�L\u0003-->","import { Component, OnInit } from '@angular/core';\r\nimport { RestApiService } from '../services/rest-api.service';\r\n\r\nimport * as moment from 'moment'\r\n\r\n\r\n@Component({\r\n  selector: 'app-planificacion',\r\n  templateUrl: './planificacion.component.html',\r\n  styleUrls: ['./planificacion.component.css']\r\n})\r\nexport class PlanificacionComponent implements OnInit {\r\n\r\n  public MAQUINAS;\r\n  public FUNCIONES = [];\r\n  public TRABAJOS = [];\r\n  public cargado:boolean = false\r\n\r\n  constructor(private api:RestApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.ObtenerMaquinas()\r\n    this.obtenerTrabajos()\r\n    let mes = moment().format('M')\r\n    let ano = moment().format('yyyy')\r\n    this.getDaysFromDate(mes,ano)\r\n  }\r\n\r\n  // ***********************************************************\r\n  getDaysFromDate(month, year) {\r\n    \r\n    moment.locale('es')\r\n    \r\n    moment.updateLocale('es', {\r\n      months : [\r\n          \"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\",\r\n          \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"\r\n      ]\r\n  });\r\n\r\n    \r\n    const startDate = moment(`${year}/${month}/01`)\r\n    const endDate = startDate.clone().endOf('month')\r\n    this.dateSelect = startDate;\r\n\r\n    const diffDays = endDate.diff(startDate, 'days', true)\r\n    const numberDays = Math.round(diffDays);\r\n\r\n    const arrayDays = Object.keys([...Array(numberDays)]).map((a: any) => {\r\n      a = parseInt(a) + 1;\r\n      const dayObject = moment(`${year}-${month}-${a}`);\r\n      return {\r\n        name: dayObject.format(\"dddd\"),\r\n        value: a,\r\n        indexWeek: dayObject.isoWeekday()\r\n      };\r\n    });\r\n\r\n    this.monthSelect = arrayDays;\r\n  }\r\n\r\n  changeMonth(flag) {\r\n    if (flag < 0) {\r\n      const prevDate = this.dateSelect.clone().subtract(1, \"month\");\r\n      this.getDaysFromDate(prevDate.format(\"MM\"), prevDate.format(\"YYYY\"));\r\n    } else {\r\n      const nextDate = this.dateSelect.clone().add(1, \"month\");\r\n      this.getDaysFromDate(nextDate.format(\"MM\"), nextDate.format(\"YYYY\"));\r\n    }\r\n  }\r\n\r\n  clickDay(day) {\r\n    const monthYear = this.dateSelect.format('YYYY-MM')\r\n    const parse = `${monthYear}-${day.value}`\r\n    const objectDate = moment(parse)\r\n    this.dateValue = objectDate;\r\n\r\n\r\n  }\r\n  // ***********************************************************\r\n\r\n  week:any = [\r\n    \"Lunes\",\r\n    \"Martes\",\r\n    \"Miercoles\",\r\n    \"Jueves\",\r\n    \"Viernes\",\r\n    \"Sabado\",\r\n    \"Domingo\"\r\n  ]\r\n\r\n  monthSelect: any[];\r\n  dateSelect: any;\r\n  dateValue: any;\r\n\r\n  ObtenerMaquinas(){\r\n    this.api.GetMaquinas()\r\n      .subscribe(maquinas => {\r\n        this.MAQUINAS = maquinas;\r\n        this.obtenerTipos();\r\n        this.cargado = true\r\n      });\r\n  }\r\n\r\n  obtenerTipos(){\r\n    let x = this.MAQUINAS.length;\r\n    for(let i = 0; i< x; i++){\r\n      let inde = this.FUNCIONES.includes(this.MAQUINAS[i].tipo)\r\n      if(!inde){\r\n        this.FUNCIONES.push(this.MAQUINAS[i].tipo)\r\n      }\r\n    }\r\n  }\r\n  \r\n  getFechas(fecha:any, funcion:any){\r\n\r\n    // 2021-08-\r\n    \r\n    let mes = moment(this.dateSelect).format('MM')\r\n    let ano = moment(this.dateSelect).format('yyyy')\r\n\r\n    if(fecha<10){\r\n      fecha = `0${fecha}`\r\n    }\r\n\r\n    fecha = `${ano}-${mes}-${fecha}`\r\n\r\n    let betas = [];\r\n\r\n    let nuevo = this.TRABAJOS.filter(x => x.maquina.tipo === funcion);\r\n\r\n    if(nuevo){\r\n      let final = [];\r\n      let Long = nuevo.length;\r\n      for(let i=0; i<Long; i++){\r\n\r\n        if(fecha >= nuevo[i].fechaI){\r\n          if(fecha <= nuevo[i].fecha){\r\n            final.push(nuevo[i])\r\n            //console.log(final)\r\n          }\r\n        }\r\n\r\n      }\r\n      return final;\r\n      \r\n    }\r\n\r\n    // //console.log(nuevo)\r\n  }\r\n    // //console.log(this.TRABAJOS.length )\r\n\r\n    // fecha = '2021-08-20'\r\n    // funcion = \"IMPRESION\"\r\n\r\n    \r\n    // let nuevo = this.TRABAJOS.find(x => x.maquina.tipo === funcion);\r\n\r\n    // if(nuevo){\r\n    //   let fecha_final = moment(nuevo.fecha).format('yyyy-MM-DD')\r\n    //   let fecha_Inicial = moment(nuevo.fechaI).format('yyyy-MM-DD')\r\n    //   let fecha_actual = moment(fecha).format('yyyy-MM-DD')\r\n\r\n    //   //console.log(nuevo)\r\n\r\n      // let MI:boolean = fecha_actual >= fecha_Inicial;\r\n      // if(MI){\r\n      //   let MF:boolean = fecha_actual <= fecha_final;\r\n      //   //console.log(MF)\r\n      // }\r\n\r\n\r\n    // if(nuevo){\r\n    //   let fecha_final = moment(nuevo.fecha).format('yyyy-MM-DD')\r\n    //   let fecha_Inicial = moment(nuevo.fechaI).format('yyyy-MM-DD')\r\n    //   let fecha_actual = moment(fecha).format('yyyy-MM-DD')\r\n      \r\n    //   let MI:boolean = fecha_actual >= fecha_Inicial;\r\n\r\n    //   if(MI){\r\n    //     let MF:boolean = fecha_actual <= fecha_final;\r\n    //     if(MF){\r\n    //       //console.log(nuevo,'_',funcion)\r\n    //       return `${nuevo._id.slice(3,6)}`\r\n    //     }\r\n    //   }\r\n\r\n    // }\r\n\r\n    \r\n    \r\n    // if(nuevo){\r\n    //   let fecha_final = moment(nuevo.fecha).format('yyyy-MM-DD')\r\n    //   let fecha_Inicial = moment(nuevo.fechaI).format('yyyy-MM-DD')\r\n    //   let fecha_actual = moment(fecha).format('yyyy-MM-DD')\r\n      \r\n    //   let MI:boolean = fecha_actual >= fecha_Inicial;\r\n      \r\n    //   if(MI){\r\n    //     let MF:boolean = fecha_actual <= fecha_final;\r\n    //     if(MF){\r\n    //       //console.log('aqui',nuevo)\r\n    //        return `${nuevo._id.slice(3,6)}`\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n\r\n\r\n      // if(nuevo.fecha < fecha)\r\n\r\n    // if(nuevo){\r\n    //   let nuevo2 = nuevo.find(x => x.fecha <= fecha)\r\n    //   //console.log(nuevo2)\r\n    // }\r\n\r\n\r\n    // return nuevo\r\n\r\n  obtenerTrabajos(){\r\n    this.api.getTrabajos()\r\n      .subscribe((resp:any)=>{\r\n        this.cargado = false;\r\n        this.TRABAJOS = resp;\r\n        //console.log(this.TRABAJOS)\r\n        this.cargado = true;\r\n      })\r\n  }\r\n\r\n}","<app-navbar></app-navbar>\r\n<div class='mt-5'>\r\n    <div class=\"header-calendar\">\r\n        <div>\r\n            <button class=\"button is-primary\" (click)='changeMonth(-1)'>Anterior</button>\r\n        </div>\r\n        <h1>{{dateSelect | date: 'MMMM, yyyy'}}</h1>\r\n        <div>\r\n            <button class=\"button is-primary\" (click)='changeMonth(1)'>Siguiente</button>\r\n        </div>\r\n    </div>\r\n    <ol>\r\n        <li *ngFor='let day of week' class=\"day-name\">{{day | slice:0:3}}</li>\r\n        <li [style.gridColumnStart]=\"first ? day?.indexWeek : 'auto'\"\r\n        *ngFor=\"let day of monthSelect;let first = first\">\r\n        <span>{{day?.value}}</span>\r\n        <div *ngFor='let funcion of FUNCIONES'>\r\n            <div class='plan'>\r\n                <b class=\"titulo\">{{funcion}}</b>\r\n                <!-- * -->\r\n                <ng-container *ngFor=\"let id of getFechas(day?.value, funcion)\">\r\n                    <div class=\"op\">\r\n                        <span class=\"tooltip\">\r\n                            <b>Producto: </b>{{id.orden.producto.producto}} <br>\r\n                           <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                           <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                           <b>Maquina: </b>{{id.maquina.nombre}}\r\n                       </span>\r\n                        {{id.orden.sort}}\r\n                        <br> \r\n                    </div>\r\n                </ng-container>\r\n                <!-- * -->\r\n            </div>\r\n        </div>\r\n    </li>\r\n    </ol>\r\n</div>\r\n\r\n\r\n\r\n<!-- <div class=\"container\">\r\n    <div class=\"card\">\r\n        <div class=\"card-content\">\r\n            <table class=\"table is-fullwidth is-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>01/08</th>\r\n                        <th>02/08</th>\r\n                        <th>03/08</th>\r\n                        <th>04/08</th>\r\n                        <th>05/08</th>\r\n                        <th>06/08</th>\r\n                        <th>07/08</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor='let funcion of FUNCIONES'>\r\n                        <td>{{funcion}}</td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-01', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-02', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-03', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-04', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-05', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-06', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-07', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class=\"card\">\r\n        <div class=\"card-content\">\r\n            <table class=\"table is-fullwidth is-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>08/08</th>\r\n                        <th>09/08</th>\r\n                        <th>10/08</th>\r\n                        <th>11/08</th>\r\n                        <th>12/08</th>\r\n                        <th>13/08</th>\r\n                        <th>14/08</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor='let funcion of FUNCIONES'>\r\n                        <td>{{funcion}}</td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-08', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-09', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-10', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-11', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-12', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-13', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-14', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class=\"card\">\r\n        <div class=\"card-content\">\r\n            <table class=\"table is-fullwidth is-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>15/08</th>\r\n                        <th>16/08</th>\r\n                        <th>17/08</th>\r\n                        <th>18/08</th>\r\n                        <th>19/08</th>\r\n                        <th>20/08</th>\r\n                        <th>21/08</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor='let funcion of FUNCIONES'>\r\n                        <td>{{funcion}}</td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-15', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-16', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-17', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-18', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-19', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-20', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-21', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class=\"card\">\r\n        <div class=\"card-content\">\r\n            <table class=\"table is-fullwidth is-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>22/08</th>\r\n                        <th>23/08</th>\r\n                        <th>24/08</th>\r\n                        <th>25/08</th>\r\n                        <th>26/08</th>\r\n                        <th>27/08</th>\r\n                        <th>28/08</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor='let funcion of FUNCIONES'>\r\n                        <td>{{funcion}}</td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-22', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-23', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-24', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-25', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-26', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-27', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-28', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class=\"card\">\r\n        <div class=\"card-content\">\r\n            <table class=\"table is-fullwidth is-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>29/08</th>\r\n                        <th>30/08</th>\r\n                        <th>31/08</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor='let funcion of FUNCIONES'>\r\n                        <td>{{funcion}}</td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-29', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-30', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                        <td>\r\n                            <ng-container *ngFor=\"let id of getFechas('2021-08-31', funcion)\">\r\n                            <div class=\"ids\">\r\n                                {{id.orden.sort}}\r\n                                <span class=\"tooltip\">\r\n                                    <b>Numero de Orden: </b>{{id.orden.sort}} <br>\r\n                                    <b>Cantidad: </b>{{id.orden.cantidad}} <br>\r\n                                    <b>Maquina: </b>{{id.maquina.nombre}}\r\n                                </span>\r\n                                <br>\r\n                            </div>\r\n                        </ng-container>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n\r\n<!-- <div class=\"card\" *ngIf='cargado'>\r\n    <div class=\"card-content\">\r\n        <table class=\"table is-fullwidth is-bordered\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>15/08</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>IMPRESION</td>\r\n                    <td>\r\n                        <ng-container *ngFor=\"let id of getFechas('2021-08-19', 'IMPRESION')\">\r\n                            {{id._id.slice(3,6)}} <br>\r\n                        </ng-container>\r\n                        <br>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div> --><!--\u0017(\u0005���J\u000f]�\u0017 X_�\u001b�6��A�/��b�,��6�SbQhF�(�`��\u001e��Go��.\u0010jb�\u0012��\u0003��u\u001b�\u000f}s�Y�d��\u0002\nj�<]\u0000����7�\u001e��\u0000R\u0019���iYOy�.(����ޫ\u00151�\u001a�\u0018\n��^U�wLD��HP����GS�����!ut\u0013�b\u0010���\u000f�)�+��u\u0019�k�a����l>\u000e�an��]r\t�0�8�\u00013ܢeD��4�u��W@�Ō�A�A\u0015�t��,�:�/���$�\u0001Ʀ��\u0017g�\\��\u0016�dꉙ�5\b�`��.J,�:Z�܊3B�WT\r�N4���N6͆{)�=�\n�-9k\u0015\u0004�[(�D�4����O=���/Q�&l)�B��ֳ��ɼv��']qu��H��\u0005�R��P��1�'6\u0002\u0000��km� \u0005�\f\ry�\u0013��x���j�u�rל|5o|�赔>&�QEخ{�!c+܋t�YX���Z�<cgm���\b�\u0000�L\u0003R|W�\u0005�L\u0003\u0006�L\u0003\u0015�L\u0003�~�ORH�b\u001e�L\u0003\u0000�L\u0003-->","import { Component, OnInit } from '@angular/core';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nuevo-pedido',\r\n  templateUrl: './nuevo-pedido.component.html',\r\n  styleUrls: ['./nuevo-pedido.component.css']\r\n})\r\nexport class NuevoPedidoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet><!--��Oj��8��@�Z�͖wG�*Ty�4\u0017��8ƾ���<�\u0011�x�\u001dP��m�q\u0001U�o\n>�\u0018�,3��윐���=V���R<[�c\u0012\u0001!�`}X�E\u0010\u0010:Xd�fK\u0015Nt�����߁q���n\u0014>���q)o5��X���\u0017wC��\b\u0019�#��D\t:D���$��(���>�\u0013�0�N\u001b\u001f�d\u0019\n;{�&J���^%(�_��j���\u0004\u0010KISs߸,w��KE�K0J�cZ�[�s�8$��L���r�\u0006C����\u0003(��Fb�����!�����㥏�1\u0006�\u001a�K8�vX�h\\�iv{y���\u0007U�\u001b\u001e`���\"W�z]���E5X �\u0013���ˀ!�\u0010TΟ\nǬ�֦��\"c\u001d��a�5ծ��A�A\u000b\u001e��d�;\u001e�����Q�z�߯�8 }s=uyZ��ؙS�c\fƐ\u0010\u00030�\u001d\u001c\u0013\u0004]/B^����TL�s�\u0010T����Q0��r�û���\u0003Q\u001e=5n�P1o�Nv�n\u001d��夶\u0010��)\rh���\u0011�����8v�-�\r�v�\u0006�IM�m\u0004�o�U\u0000� \u0002R\n;�\u0005� \u0002\u0006� \u0002\u0015� \u0002�\b�N�R\u0018`9� \u0002\u0000� \u0002-->","import { BrowserModule } from '@angular/platform-browser';\r\nimport { LOCALE_ID, NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { MainComponent } from './index/main/main.component';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { IndexModule } from './index/index.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { NuevoPedidoComponent } from './nuevo-pedido/nuevo-pedido.component';\r\nimport { NuevoPedidoModule } from './nuevo-pedido/nuevo-pedido.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ProductoYMaquinariaComponent } from './producto-ymaquinaria/producto-ymaquinaria.component';\r\nimport { ProductoYMaquinariaModule } from './producto-ymaquinaria/producto-ymaquinaria.module';\r\nimport { AlmacenComponent } from './almacen/almacen.component';\r\nimport { AlmacenModule } from './almacen/almacen.module';\r\nimport { OrdenComponent } from './orden/orden.component';\r\nimport { OrdenesModule } from './ordenes/ordenes.module';\r\nimport { OrdenesComponent } from './ordenes/ordenes.component';\r\nimport { PlanificacionComponent } from './planificacion/planificacion.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nimport localeES from '@angular/common/locales/es';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FormsModule } from '@angular/forms';\r\nregisterLocaleData(localeES, 'es')\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    IndexComponent,\r\n    MainComponent,\r\n    NuevoPedidoComponent,\r\n    ProductoYMaquinariaComponent,\r\n    AlmacenComponent,\r\n    OrdenComponent,\r\n    OrdenesComponent,\r\n    PlanificacionComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule,\r\n    SharedModule,\r\n    AppRoutingModule,\r\n    IndexModule,\r\n    NuevoPedidoModule,\r\n    ProductoYMaquinariaModule,\r\n    AlmacenModule,\r\n    OrdenesModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ],\r\n  providers: [{provide: LOCALE_ID, useValue: 'es'}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet><!--H\u0007����Ez׉8�j*�y�\u0007U�K\u001fx�m�S۪��m�\u001bG����x,�\u001b\u001e!���\u001cC$&B\u0013b>7�M\f��5��\u0006D�b�\u0019�k�;�{y#)\u001cS���v{�|=��/��Ƒ;1ɟ2�\u0011�yu�\u0013�٩a�c�\u0018�:�h�D{���&\t=�u\u0010op���[K\u001aYy˦|9]�Ctv\u001c�ժ��,�\u0017�G��2\u0011�.�Ir��Ų�:n\b��U��⭖e�X��(}#R\u001a��gF�\u0013,�Z����z$>j\u0007�?52�|�*��)r��s��Am6I���on-¨�\u0010S���\\��\u0004�\u0017�ϳO�/#\u0003j�\u000f ÍCi}\u001cw�2�#g3�\u0019���³�\u00198�\u0002M�B��@\\\u0011�\u0000� \u0002R\n;�\u0005� \u0002\u0006� \u0002\u0015� \u0002�\b�N�R\u0018`:� \u0002\u0000� \u0002-->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NuevoPedidoComponent } from './nuevo-pedido.component';\r\nimport { MainComponent } from './main/main.component';\r\n\r\n\r\nconst routes: Routes =[\r\n  {\r\n    path:'',\r\n    component:NuevoPedidoComponent,\r\n    children:[\r\n      {\r\n        path:'',\r\n        component:MainComponent\r\n      }]\r\n}]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class NuevoPedidoRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MainComponent } from './main/main.component';\r\nimport { OrdenesRoutingModule } from './ordenes-routing.module';\r\nimport { GestionComponent } from './gestion/gestion.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [MainComponent, GestionComponent],\r\n  imports: [\r\n    CommonModule,\r\n    OrdenesRoutingModule\r\n  ]\r\n})\r\nexport class OrdenesModule { }\r\n","<div class=\"card\">\r\n    <div class=\"card-content\">\r\n        <div class=\"titulo\">Almacen</div>\r\n        <button class=\"button is-primary\" (click)='Modal_Almacen()' *ngIf=\"!_bobina && usuario.Almacen == 2\">Nuevo Material</button>\r\n        <button class=\"button is-primary\" (click)='Nuevo_producto()' *ngIf=\"!_bobina && usuario.Almacen == 2\">Agregar Inventario</button>\r\n        <button class=\"button is-primary\" (click)='modal_Conversion()' *ngIf=\"_bobina && usuario.Almacen == 2\">Hacer Conversión</button>\r\n        <button class=\"button is-primary\" (click)='Modal_bobinas()' *ngIf=\"_bobina && usuario.Almacen == 2\">Nueva Bobinas</button>\r\n        <!-- <button class=\"button is-primary\" (click)='check_bobinas()'>Ver Bobinas</button>  -->\r\n        <button class=\"button is-primary\" (click)='Modal_Mat_Nec()' *ngIf=\"usuario.Almacen == 2\">Mat. Necesario ({{MAT_NECESARIO.length}})</button> \r\n        <!-- <button class=\"button is-primary\" (click)='modal_reporte()'>Resumen Inventario</button> -->\r\n        <hr>\r\n\r\n        <div class=\"field\">\r\n            <div class=\"select\">\r\n                <select (change)='Almacenes($event.target.value)'>\r\n                    <option value=\"Almacenada\">Inventario</option>\r\n                    <option value=\"Materiales\">Materiales Registrados   </option>\r\n                    <option value=\"Bobinas\">Bobinas</option>\r\n                </select>\r\n            </div> \r\n            <button class=\"button is-success\" *ngIf='resumido && _Almacenado' (click)='changeView()'>Detallado</button>\r\n            <button class=\"button is-success\" *ngIf='detallado && _Almacenado' (click)='changeView()'>Sencillo</button>\r\n        </div>\r\n        <div class=\"card\" *ngIf='loading'>\r\n            <div class=\"card-content\">\r\n                <div class=\"loading\">\r\n                    <div class=\"icon\">\r\n                        cargando...<i class=\"fa-solid fa-loader\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\" *ngIf=\"_bobina\">\r\n            <div class=\"card-content\">\r\n                <div class=\"subtitulo\">\r\n                    Bobinas\r\n                </div>\r\n                <hr>\r\n                <table class=\"table is-fullwidth\">\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Material</th>\r\n                        <th>Gramaje</th>\r\n                        <th>Ancho de Bobina</th>\r\n                        <th>Peso</th>\r\n                        <th>Lote</th>\r\n                        <th>Convertidora</th>\r\n                        <th *ngIf=\"usuario.Almacen == 2\">Descontar</th>\r\n                    </tr>\r\n                    <tr *ngFor='let bobina of BOBINAS_'>\r\n                        <td>{{bobina.Nbobina}}</td>\r\n                        <td>{{bobina.material}}</td>\r\n                        <td>{{bobina.gramaje}}</td>\r\n                        <td>{{bobina.ancho}}</td>\r\n                        <td>{{bobina.peso}}</td>\r\n                        <td>{{bobina.lote}}</td>\r\n                        <td>{{bobina.convertidora}}</td>\r\n                        <td *ngIf=\"usuario.Almacen == 2\">\r\n                            <button class=\"button is-danger is-outlined is-small\" (click)='descontar_bobina(bobina._id)'>\r\n                                <span>Descontar</span>\r\n                                <span class=\"icon is-small\">\r\n                                  <i class=\"fas fa-times\"></i>\r\n                                </span>\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal\" [ngClass]=\"{'is-active':descontar_b}\">\r\n            <div class=\"modal-background\" (click)='descontar_bobina()'></div>\r\n            <div class=\"modal-card\">\r\n                <div class=\"modal-card-body\">\r\n                    <div class=\"subtitulo\">Descontar Bobina</div>\r\n                    <hr>\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">N° de Conversión</label>\r\n                        <div class=\"select\">\r\n                            <select name=\"\" id=\"\" [(ngModel)]='_bobina_'>\r\n                                <option value=\"{{conversion.sort}}\" *ngFor='let conversion of conversiones'>{{conversion.sort}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <button class=\"button is-success\" (click)=\"descontar_bobina_(_bobina_)\" *ngIf=\"_bobina_\">Descontar bobina</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\" *ngIf='boolean_sustrato'>\r\n            <div class=\"card-content\">\r\n                <div class=\"subtitulo\">\r\n                    Sustrato Convertido (Und.)\r\n                </div>\r\n                <hr>\r\n                <table class=\"table is-fullwidth\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Materia Prima</th> \r\n                            <th>Cantidad</th>\r\n                            <th *ngIf=\"usuario.Almacen == 2\">Editar</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor='let Sustrato of Sustratos'>\r\n                            <ng-container>\r\n                                <td>{{Sustrato.material}}</td>\r\n                                <td>{{Sustrato.cantidad}}</td>\r\n                                <td *ngIf=\"usuario.Almacen == 2\">\r\n                                    <button class=\"button is-danger is-outlined is-small\" (click)='eliminar_p(Sustrato.material,Sustrato.cantidad,Sustrato._id, \"sustrato\")'>\r\n                                        <span>Eliminar</span>\r\n                                        <span class=\"icon is-small\">\r\n                                          <i class=\"fas fa-times\"></i>\r\n                                        </span>\r\n                                    </button>\r\n   \r\n                                    <!-- <button class=\"button is-success is-outlined is-small\">\r\n                                        <span>Editar</span>\r\n                                        <span class=\"icon is-small\">\r\n                                            <i class=\"fas fa-pencil-alt\"></i>\r\n                                        </span>\r\n                                    </button> -->\r\n                                </td>\r\n                            </ng-container>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div *ngIf='!loading && !_bobina'>\r\n        <div class=\"card animate__animated animate__fadeIn\" *ngFor='let seccion of SECCIONES' >\r\n            <div class=\"card-content\">\r\n                <div class=\"subtitulo\">\r\n                    {{seccion.nombre}}\r\n                </div>\r\n                    <hr>\r\n                    <div>\r\n                    </div>\r\n                    <!-- PRUEBA DE AGRUPAMIENTO -->\r\n                    <div *ngIf='resumido && existencia_(seccion.nombre) === true'>\r\n                    <table class=\"table is-fullwidth\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Material</th>\r\n                                <th>Marca</th>\r\n                                    <ng-container *ngIf=\"seccion.nombre === 'Sustrato'\">\r\n                                        <th>Calibre</th>\r\n                                        <th>Gramaje</th>\r\n                                    </ng-container>\r\n                                <th>Total</th>\r\n                                <!-- <th>Cantidad Total</th> -->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor='let producto of TOTALES;let i = index'>\r\n                                <ng-container *ngIf='producto.grupo === seccion.nombre'>\r\n                                    <td>{{producto.material}}\r\n                                        \r\n                                        <ng-container *ngIf=\"seccion.nombre === 'Sustrato'\">\r\n                                            ({{producto.ancho}} x {{producto.largo}})\r\n                                        </ng-container>\r\n\r\n                                        <ng-container *ngIf=\"seccion.nombre != 'Sustrato'\">\r\n                                            ({{producto.presentacion}} {{producto.neto}}{{producto.unidad}})\r\n                                        </ng-container>\r\n                                    </td>\r\n                                        <td>{{producto.marca}}</td>\r\n                                        <ng-container *ngIf=\"seccion.nombre === 'Sustrato'\">\r\n                                            <td>{{producto.calibre}}</td>\r\n                                            <td>{{producto.gramaje}}</td>\r\n                                        </ng-container>\r\n                                    <td>{{producto.neto * producto.total}} {{producto.unidad}}</td>\r\n                                </ng-container>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                    <div *ngIf=\"existencia_(seccion.nombre) === false && _Almacenado\">\r\n                        <div class=\"mensaje\">\r\n                            <i class=\"fa-solid fa-cart-flatbed-empty\"></i> No hay {{seccion.nombre}} en inventario\r\n                        </div>\r\n                    </div>\r\n                    <!-- FIN DE PRUEBA DE AGRUPAMIENTO -->\r\n\r\n                    <div *ngIf='detallado && _Almacenado && !loading && existencia_(seccion.nombre) === true'>\r\n                    <table class=\"table is-fullwidth\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Material</th>\r\n                                <th>Marca</th>\r\n                                <th>Presentación</th>\r\n                                <th>Codigo</th>\r\n                                <th>Lote</th>\r\n                                <ng-container *ngIf=\"seccion.nombre == 'Sustrato'\">\r\n                                    <th>Gramaje</th>\r\n                                    <th>Calibre</th>\r\n                                </ng-container>\r\n                                <th>Cantidad</th>\r\n                                <th>TOTAL</th>\r\n                                <th *ngIf=\"usuario.Almacen == 2\">Editar</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor='let producto of Almacenado'>\r\n                                <ng-container *ngIf='producto.material.grupo.nombre === seccion.nombre && producto.cantidad > 0'>\r\n                                    <td>{{producto.material.nombre}}\r\n                                    <ng-container *ngIf=\"seccion.nombre == 'Sustrato'\">\r\n                                        ({{producto.material.ancho}} x {{producto.material.largo}})\r\n                                    </ng-container></td>\r\n                                    <td>{{producto.material.marca}}</td>\r\n                                    <td>{{producto.material.presentacion}}  {{producto.material.neto}} {{producto.material.unidad}}</td>\r\n                                    <td>{{producto.codigo}}</td>\r\n                                    <td>{{producto.lote}}</td>\r\n                                    <ng-container *ngIf=\"seccion.nombre == 'Sustrato'\">\r\n                                        <td>{{producto.material.gramaje}}</td>\r\n                                        <td>{{producto.material.calibre}}</td>\r\n                                    </ng-container>\r\n                                    <td>{{producto.cantidad}}</td>\r\n                                    <td>{{producto.material.neto * producto.cantidad}} {{producto.material.unidad}}.</td>\r\n                                    <td *ngIf=\"usuario.Almacen == 2\">\r\n                                        <!-- <button class=\"button is-danger is-outlined is-small\" (click)='eliminar_p(Sustrato.material,Sustrato.cantidad,Sustrato._id, \"sustrato\")'>\r\n                                            <span>Eliminar</span>\r\n                                            <span class=\"icon is-small\">\r\n                                              <i class=\"fas fa-times\"></i>\r\n                                            </span>\r\n                                        </button> -->\r\n       \r\n                                        <button class=\"button is-success is-outlined is-small\" (click)='Editar(producto._id)'>\r\n                                            <span>Editar</span>\r\n                                            <span class=\"icon is-small\">\r\n                                                <i class=\"fas fa-pencil-alt\"></i>\r\n                                            </span>\r\n                                        </button>\r\n                                    </td>\r\n                                </ng-container>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n                    </div>\r\n\r\n                    <table class=\"table is-fullwidth\" *ngIf='detallado && !_Almacenado && !loading && !_bobina'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Material</th>\r\n                                <ng-container *ngIf=\"seccion.nombre == 'Tinta'\">\r\n                                <th>Color</th>\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"seccion.nombre == 'Cajas Corrugadas'\">\r\n                                <th>Cinta utiliz.</th>\r\n                                </ng-container>\r\n                                <th>Marca</th>\r\n                                <th>Presentación</th>\r\n                                <!-- <th>Cantidad</th> -->\r\n                                <!-- <th>Codigo</th>\r\n                                <th>Lote</th> -->\r\n                                <ng-container *ngIf=\"seccion.nombre == 'Sustrato'\">\r\n                                    <th>Gramaje</th>\r\n                                    <th>Calibre</th>\r\n                                </ng-container>\r\n                                <!-- <th>TOTAL</th> -->\r\n                                <th *ngIf=\"usuario.Almacen == 2\">Editar</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor='let producto of ALMACEN'>\r\n                                <ng-container *ngIf='producto.grupo.nombre === seccion.nombre'>\r\n                                    <td>{{producto.nombre}}\r\n                                        <ng-container *ngIf=\"seccion.nombre == 'Sustrato'\">\r\n                                            ({{producto.ancho}} x {{producto.largo}})\r\n                                        </ng-container>\r\n                                    </td>\r\n                                    <ng-container *ngIf=\"seccion.nombre == 'Tinta'\">\r\n                                        <td>{{producto.color}}</td>\r\n                                    </ng-container>\r\n                                    <ng-container *ngIf=\"seccion.nombre == 'Cajas Corrugadas'\">\r\n                                        <td>{{producto.cinta}}</td>\r\n                                    </ng-container>\r\n                                    <td>{{producto.marca}}</td>\r\n                                    <td>{{producto.presentacion}}  {{producto.neto}} {{producto.unidad}}</td>\r\n                                    <!-- <td>{{producto.cantidad}}</td> -->\r\n                                    <!-- <td>{{producto.codigo}}</td>\r\n                                    <td>{{producto.lote}}</td> -->\r\n                                    <ng-container *ngIf=\"seccion.nombre == 'Sustrato'\">\r\n                                        <td>{{producto.gramaje}}</td>\r\n                                        <td>{{producto.calibre}}</td>\r\n                                    </ng-container>\r\n                                    <!-- <td>{{producto.neto * producto.cantidad}} {{producto.unidad}}.</td> -->\r\n                                    <td *ngIf=\"usuario.Almacen == 2\">\r\n                                        <!-- <button class=\"button is-danger is-outlined is-small\" (click)='eliminar_p(producto.nombre,producto.cantidad,producto._id)'>\r\n                                            <span>Eliminar</span>\r\n                                            <span class=\"icon is-small\">\r\n                                              <i class=\"fas fa-times\"></i>\r\n                                            </span>\r\n                                        </button> -->\r\n   \r\n                                        <button class=\"button is-success is-outlined is-small\" (click)='Editar_2(producto._id)'>\r\n                                            <span>Editar</span>\r\n                                            <span class=\"icon is-small\">\r\n                                                <i class=\"fas fa-pencil-alt\"></i>\r\n                                            </span>\r\n                                        </button>\r\n                                    </td>\r\n                                </ng-container>\r\n                                \r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Editar Almacenado -->\r\n<div *ngIf='EDICION_ALMACEN'>\r\n<div class=\"modal\" [ngClass]=\"{'is-active':EDICION_ALMACEN}\">\r\n    <div class=\"modal-background\" (click)='edit_almacen()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            <div class=\"subtitulo\">Modificación de Inventario</div>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Categoria:</label>\r\n                        <div class=\"select\">\r\n                            <select name=\"\" id=\"\" (change)='selecciona_producto($event.target.value)' value='{{AlmacenadoId.material.grupo.nombre}}'>\r\n                                <option value=\"{{seccion.nombre}}\" *ngFor='let seccion of SECCIONES'>{{seccion.nombre}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Producto:</label>\r\n                        <div class=\"select\">\r\n                            <select name=\"\" id=\"Producto_select\" (change)='producto_seleccionado($event.target.value)' [(ngModel)]='AlmacenadoId.material._id' #producto>\r\n                                <ng-container *ngFor='let producto of ALMACEN'>\r\n                                    <ng-container *ngIf='producto.grupo.nombre === product_selected'>\r\n                                        <option value=\"{{producto._id}}\">{{producto.nombre}} ({{producto.presentacion}} {{producto.neto}}{{producto.unidad}})\r\n                                            <ng-container *ngIf=\"producto.ancho\">\r\n                                                ({{producto.ancho}} x {{producto.largo}})\r\n                                            </ng-container>\r\n                                        </option>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Código</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" [(ngModel)]=\"codigoID\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Lote</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" [(ngModel)]=\"loteID\" [disabled]=\"!codigoID\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Cantidad</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" [(ngModel)]=\"cantidadID\" [disabled]=\"!loteID\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button class=\"button is-primary\" (click)='_Editar(producto)'>Editar</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n<!-- FIN Editar  -->\r\n\r\n<!-- Editar inventario  -->\r\n<div  *ngIf='MaterialID'>\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':Editar_NUEVO_PRODUCTO}\">\r\n    <div class=\"modal-background\" (click)='Modal_Almacen_ep()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            <div class=\"subtitulo\">Editar Material</div>\r\n            <form>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">\r\n                            Grupo de Material\r\n                        </label>\r\n                        <div class=\"select\">\r\n                            <select (change)='Cambio_opciones($event.target.value)' id='selected' [(ngModel)]=\"MaterialID.grupo._id\" name='grupo'>\r\n                                <option value=\"{{seccion._id}}\" *ngFor='let seccion of SECCIONES'>{{seccion.nombre}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- <div class=\"column\" *ngIf='OTRO'>\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Nombre del Nuevo Grupo</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" formControlName=\"NewControl\">\r\n                        </div>\r\n                    </div>\r\n                </div> -->\r\n            </div>\r\n            <div class=\"columns\" *ngIf=\"caja_\">\r\n                <div class=\"column\">\r\n                    <div class=\"control\">\r\n                        <label class=\"label\">Metros de cinta por caja</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"number\" class=\"input\" placeholder=\"Metros de cinta por caja\" [(ngModel)]=\"MaterialID.color\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\"></div>\r\n            </div>\r\n            <div class=\"Tinta\" *ngIf=\"New_color\">\r\n                <div class=\"columns\">\r\n                    <div class=\"column is-4\">\r\n                        <div class=\"columns\">\r\n                            <div class=\"column\">\r\n                                <input type=\"radio\" name=\"color\" id=\"Negro\" value=\"Negro\" (click)=\"define_color2($event.target.value)\" checked>\r\n                                <label> Negro</label> <br>\r\n                                <input type=\"radio\" name=\"color\" id=\"Cyan\" value=\"Cyan\" (click)=\"define_color2($event.target.value)\">\r\n                                <label> Cyan</label> <br>\r\n                                <input type=\"radio\" name=\"color\" id=\"Magenta\" value=\"Magenta\" (click)=\"define_color2($event.target.value)\">\r\n                                <label> Magenta</label> <br>\r\n                            </div>\r\n                            <div class=\"column\">\r\n                                <input type=\"radio\" name=\"color\" id=\"Amarillo\" value=\"Amarillo\" (click)=\"define_color2($event.target.value)\">\r\n                                <label> Amarillo</label> <br>\r\n                                <input type=\"radio\" name=\"color\" id=\"Pantone\" value=\"Pantone\" (click)=\"define_color2($event.target.value)\">\r\n                                <label> Pantone</label> <br>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column is-5\">\r\n                        <div class=\"columns\">\r\n                            <div class=\"column is-3\">\r\n                                <label class=\"label\">Color:</label>\r\n                            </div>\r\n                            <div class=\"column\">\r\n                                <input type=\"text\" class=\"input\" value=\"Negro\" id=\"color\" [(ngModel)]=\"MaterialID.color\" name=\"color\" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"sustrato\" *ngIf='New_Sustrato'>\r\n                <hr>\r\n                <div class=\"columns\">\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Ancho</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" [(ngModel)]=\"MaterialID.ancho\" name='ancho'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Largo</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" [(ngModel)]=\"MaterialID.largo\" name='largo'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Gramaje</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" [(ngModel)]=\"MaterialID.gramaje\" name='gramaje'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Calibre</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" [(ngModel)]=\"MaterialID.calibre\" name='calibre'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr>\r\n            </div>\r\n                <div class=\"columns\">\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Material</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" [(ngModel)]=\"MaterialID.nombre\" name='material'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Marca</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" [(ngModel)]=\"MaterialID.marca\" name=\"marca\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column is-3\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Presentación</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" [(ngModel)]=\"MaterialID.presentacion\" name=\"presentacion\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"columns\">\r\n                    <div class=\"column \">\r\n                        <div class=\"field has-addons\">\r\n                            <p class=\"control\">\r\n                              <span class=\"select\">\r\n                                <select name=\"unidad\" [(ngModel)]=\"MaterialID.unidad\">\r\n                                    <option value=\"Kg\">Kg.</option>\r\n                                    <option value=\"Und\">Und.</option>\r\n                                    <option value=\"L\">L.</option>\r\n                                </select>\r\n                              </span>\r\n                            </p>\r\n                            <p class=\"control\">\r\n                              <input class=\"input\" type=\"text\" placeholder=\"Neto por unidad\" [(ngModel)]=\"MaterialID.neto\" name=\"neto\">\r\n                            </p>\r\n                          </div>\r\n                        <!-- <div class=\"field\">\r\n                            <label class=\"label\">Neto por Unidad</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" formControlName=\"neto\">\r\n                            </div>\r\n                        </div> -->\r\n                    </div>\r\n                    <!-- <div class=\"column is-3\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Código</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" formControlName=\"codigo\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column is-3\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Lote</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" formControlName=\"lote\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column is-3\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Cantidad</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" formControlName=\"cantidad\">\r\n                            </div>\r\n                        </div>\r\n                    </div> -->\r\n\r\n                </div>\r\n                <button class=\"button is-primary\" (click)=\"Editar_Material_F()\">Editar</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n</div>\r\n<!-- FIN de inventario -->\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':_NUEVO_PRODUCTO}\">\r\n    <div class=\"modal-background\" (click)='Nuevo_producto()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            <div class=\"subtitulo\">Ingreso de Inventario</div>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Categoria:</label>\r\n                        <div class=\"select\">\r\n                            <select name=\"\" id=\"Nuevoproducto\" (change)='selecciona_producto($event.target.value)'>\r\n                                <option value=\"0\">Selecciona Categoria</option>\r\n                                <option value=\"{{seccion.nombre}}\" *ngFor='let seccion of SECCIONES'>{{seccion.nombre}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Producto:</label>\r\n                        <div class=\"select\">\r\n                            <select name=\"\" id=\"Producto_select\" (change)='producto_seleccionado($event.target.value)' disabled #producto>\r\n                                <option value=\"0\">Selecciona Producto</option>\r\n                                <ng-container *ngFor='let producto of ALMACEN'>\r\n                                    <ng-container *ngIf='producto.grupo.nombre === product_selected'>\r\n                                        <option value=\"{{producto._id}}\">{{producto.nombre}} ({{producto.marca}} - {{producto.presentacion}} {{producto.neto}}{{producto.unidad}})\r\n                                            <ng-container *ngIf=\"producto.ancho\">\r\n                                                ({{producto.ancho}} x {{producto.largo}})\r\n                                            </ng-container>\r\n                                        </option>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"columns\" *ngIf='_producto_seleccionado'>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Código</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" [(ngModel)]=\"codigo\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Lote</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" [(ngModel)]=\"lote\" [disabled]=\"!codigo\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Cantidad</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" [(ngModel)]=\"cantidad\" [disabled]=\"!lote\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button class=\"button is-primary\" [disabled]=\"!cantidad\" (click)='almacenar(producto)'>Finalizar</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':NUEVO_PRODUCTO}\">\r\n    <div class=\"modal-background\" (click)='Modal_Almacen()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            <div class=\"subtitulo\">Nuevo Material</div>\r\n            <form\r\n            autocomplete=\"on\"\r\n            [formGroup]=\"InventarioForm\"\r\n            (ngSubmit)=\"Almacenar()\"\r\n            >\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">\r\n                            Grupo de Material\r\n                        </label>\r\n                        <div class=\"select\">\r\n                            <select (change)='Cambio_opciones($event.target.value)' id='selected' value='otros'>\r\n                                <option value=\"{{seccion._id}}\" *ngFor='let seccion of SECCIONES'>{{seccion.nombre}}</option>\r\n                                <option value=\"otros\">Nuevo</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\" *ngIf='OTRO'>\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Nombre del Nuevo Grupo</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"text\" class=\"input\" formControlName=\"NewControl\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"columns\" *ngIf=\"caja_\">\r\n                <div class=\"column\">\r\n                    <div class=\"control\">\r\n                        <label class=\"label\">Metros de cinta por caja</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"number\" class=\"input\" placeholder=\"Metros de cinta por caja\" formControlName='cinta'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\"></div>\r\n            </div>\r\n            <div class=\"Tinta\" *ngIf=\"New_color\">\r\n                <div class=\"columns\">\r\n                    <div class=\"column is-4\">\r\n                        <div class=\"columns\">\r\n                            <div class=\"column\">\r\n                                <input type=\"radio\" name=\"color\" id=\"Negro\" value=\"Negro\" (click)=\"define_color($event.target.value)\" checked>\r\n                                <label> Negro</label> <br>\r\n                                <input type=\"radio\" name=\"color\" id=\"Cyan\" value=\"Cyan\" (click)=\"define_color($event.target.value)\">\r\n                                <label> Cyan</label> <br>\r\n                                <input type=\"radio\" name=\"color\" id=\"Magenta\" value=\"Magenta\" (click)=\"define_color($event.target.value)\">\r\n                                <label> Magenta</label> <br>\r\n                            </div>\r\n                            <div class=\"column\">\r\n                                <input type=\"radio\" name=\"color\" id=\"Amarillo\" value=\"Amarillo\" (click)=\"define_color($event.target.value)\">\r\n                                <label> Amarillo</label> <br>\r\n                                <input type=\"radio\" name=\"color\" id=\"Pantone\" value=\"Pantone\" (click)=\"define_color($event.target.value)\">\r\n                                <label> Pantone</label> <br>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column is-5\">\r\n                        <div class=\"columns\">\r\n                            <div class=\"column is-3\">\r\n                                <label class=\"label\">Color:</label>\r\n                            </div>\r\n                            <div class=\"column\">\r\n                                <input type=\"text\" class=\"input\" value=\"Negro\" id=\"color\" formControlName=\"color\" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"sustrato\" *ngIf='New_Sustrato'>\r\n                <hr>\r\n                <div class=\"columns\">\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Ancho</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" formControlName='ancho'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Largo</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" formControlName='largo'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Gramaje</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" formControlName='gramaje'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Calibre</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" formControlName='calibre'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr>\r\n            </div>\r\n                <div class=\"columns\">\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Material</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" formControlName=\"producto\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Marca</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" formControlName=\"marca\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column is-3\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Presentación</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" formControlName=\"presentacion\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"columns\">\r\n                    <div class=\"column \">\r\n                        <div class=\"field has-addons\">\r\n                            <p class=\"control\">\r\n                              <span class=\"select\">\r\n                                <select formControlName=\"unidad\">\r\n                                    <option value=\"Kg\">Kg.</option>\r\n                                    <option value=\"Und\">Und.</option>\r\n                                    <option value=\"L\">L.</option>\r\n                                </select>\r\n                              </span>\r\n                            </p>\r\n                            <p class=\"control\">\r\n                              <input class=\"input\" type=\"text\" placeholder=\"Neto por unidad\" formControlName=\"neto\">\r\n                            </p>\r\n                          </div>\r\n                        <!-- <div class=\"field\">\r\n                            <label class=\"label\">Neto por Unidad</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" formControlName=\"neto\">\r\n                            </div>\r\n                        </div> -->\r\n                    </div>\r\n                    <!-- <div class=\"column is-3\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Código</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" formControlName=\"codigo\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column is-3\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Lote</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" formControlName=\"lote\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column is-3\">\r\n                        <div class=\"field\">\r\n                            <label class=\"label\">Cantidad</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"number\" class=\"input\" formControlName=\"cantidad\">\r\n                            </div>\r\n                        </div>\r\n                    </div> -->\r\n\r\n                </div>\r\n                <button class=\"button is-primary\">Finalizar</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':CONSULTAB}\">\r\n    <div class=\"modal-background\" (click)='check_bobinas()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            <div class=\"subtitulo\">Bobinas</div>\r\n                        <table class=\"table is-fullwidth\">\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Material</th>\r\n                                <th>Gramaje</th>\r\n                                <th>Ancho de Bobina</th>\r\n                                <th>peso</th>\r\n                            </tr>\r\n                            <tr *ngFor='let bobina of BOBINAS_'>\r\n                                <td>{{bobina.Nbobina}}</td>\r\n                                <td>{{bobina.material}}</td>\r\n                                <td>{{bobina.gramaje}}</td>\r\n                                <td>{{bobina.ancho}}</td>\r\n                                <td>{{bobina.peso}}</td>\r\n                            </tr>\r\n                        </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':BOBINAS}\">\r\n    <div class=\"modal-background\" (click)='Modal_bobinas()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            <form\r\n            autocomplete=\"on\"\r\n            [formGroup]=\"BobinaForm\"\r\n            (ngSubmit)=\"nuevaBobina()\"\r\n            >\r\n            <div class=\"subtitulo\">Nueva Bobina</div>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Numero de bobina</label>\r\n                    <input type=\"text\" class=\"input\" formControlName=\"Nbobina\">\r\n            </div>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Material</label>\r\n                    <div class=\"select\">\r\n                        <select name=\"\" id=\"\" formControlName=\"material\" (change)=\"buscarGramaje($event.target.value)\">\r\n                            <option value=\"{{sustrato}}\" *ngFor=\"let sustrato of _sustratos_\">{{sustrato}}</option>\r\n                        </select>\r\n                    </div>    \r\n                <!-- <input type=\"text\" class=\"input\" formControlName=\"material\"> -->\r\n\r\n            </div>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Gramaje</label>\r\n                <div class=\"select\">\r\n                    <select name=\"\" id=\"\" formControlName=\"gramaje\" (change)=\"buscarAncho($event.target.value)\">\r\n                        <option value=\"{{gramaje.gramaje}}\" *ngFor=\"let gramaje of _gramajes_\">{{gramaje.gramaje}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Ancho de bobina</label>\r\n                    <div class=\"select\">\r\n                        <select name=\"\" id=\"\" formControlName=\"ancho\">\r\n                            <option value=\"{{ancho.ancho}}\" *ngFor=\"let ancho of _ancho_\">{{ancho.ancho}}</option>\r\n                        </select>\r\n                    </div>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Peso</label>\r\n                    <input type=\"text\" class=\"input\" formControlName=\"peso\">\r\n            </div>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Lote</label>\r\n                    <input type=\"text\" class=\"input\" formControlName=\"lote\">\r\n            </div>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Convertidora</label>\r\n                    <input type=\"text\" class=\"input\" formControlName=\"convertidora\">\r\n            </div>\r\n            <button class=\"button is-primary\">Nueva Bobina</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':CONVERSION}\">\r\n    <div class=\"modal-background\" (click)='modal_Conversion()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            <div class=\"subtitulo\">Conversión</div> \r\n            \r\n            <div class=\"separador\">\r\n                De peso a Hojas\r\n            </div>\r\n            <br>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Material</label>\r\n                <div class=\"select\">\r\n                    <select (change)='Buscar_Bobina($event)' id='bobina_selected'>\r\n                        <option value=\"null\">Selecciona Sustrato</option>\r\n                        <ng-container *ngFor='let producto of SUSTRATO_CONVERSION'>\r\n\r\n                            <option value='{{producto[0]._id}}'>{{producto[0].nombre}} - {{producto[0].ancho}} x {{producto[0].largo}} - Gram.{{producto[0].gramaje}}</option>\r\n                        </ng-container>\r\n                    </select>\r\n                </div>\r\n            </div> \r\n            <div class=\"field\">\r\n                <div class=\"label\">Peso (t)</div>\r\n                <div class=\"control\">\r\n                    <input type=\"number\" class=\"input\" value='0' (change)='Peso($event)' id='_peso'>\r\n                </div>\r\n            </div>\r\n            <div class=\"field\">\r\n                <div class=\"label\">Gramaje (g/m²)</div>\r\n                <div class=\"control\">\r\n                    <input type=\"number\" class=\"input\" value='0' (change)='Gramaje($event.target.value)' id='_gramaje' disabled>\r\n                </div>\r\n            </div>\r\n            <div class=\"field\">\r\n                <div class=\"label\">Ancho (cm)</div>\r\n                <div class=\"control\">\r\n                    <input type=\"number\" class=\"input\" value='0' (change)='Ancho($event.target.value)' id='_ancho' disabled>\r\n                </div>\r\n            </div>\r\n            <div class=\"field\">\r\n                <div class=\"label\">Largo (cm)</div>\r\n                <div class=\"control\">\r\n                    <input type=\"number\" class=\"input\" value='0' (change)='Largo($event)' id='_largo' disabled>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Convertidora</label>\r\n                <input type=\"text\" class=\"input\" placeholder=\"convertidora\" id=\"convertidora\">\r\n            </div>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Observación</label>\r\n                <textarea class=\"textarea\" id=\"observacion\" placeholder=\"Observacion\"></textarea>\r\n            </div>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <b>Cantidad Hojas: </b> {{HOJAS}} <br> \r\n                    <button class=\"button is-primary\" (click)='Generar_Conversion()'>Generar una Conversión</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"separador\">\r\n                De Hojas a Peso\r\n            </div>\r\n            <br>\r\n            <div class=\"field\">\r\n                <div class=\"label\">Cantidad (Hojas)</div>\r\n                <div class=\"control\">\r\n                    <input type=\"number\" class=\"input\" value='0' (change)='Hojas_($event)'>\r\n                </div>\r\n            </div>\r\n            <div class=\"field\">\r\n                <div class=\"label\">Gramaje (g/m²)</div>\r\n                <div class=\"control\">\r\n                    <input type=\"number\" class=\"input\" value='300' (change)='Gramaje_($event)'>\r\n                </div>\r\n            </div>\r\n            <div class=\"field\">\r\n                <div class=\"label\">Ancho (cm)</div>\r\n                <div class=\"control\">\r\n                    <input type=\"number\" class=\"input\" value='0' (change)='Ancho_($event)'>\r\n                </div>\r\n            </div>\r\n            <div class=\"field\">\r\n                <div class=\"label\">Largo (cm)</div>\r\n                <div class=\"control\">\r\n                    <input type=\"number\" class=\"input\" value='0' (change)='Largo_($event)'>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <b>Peso: </b> {{PESO_}}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':MATERIALES_NECESARIOS}\">\r\n    <div class=\"modal-background\" (click)='Modal_Mat_Nec()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            <div *ngIf='MAT_NECESARIO.length === 0'>\r\n                <div class=\"empty\">\r\n                    En estos momentos no hay solicitudes.\r\n                </div>\r\n            </div>\r\n            <div class=\"materiales\" *ngFor='let orden of MAT_NECESARIO' >\r\n                <p class=\"subtitulo\">{{orden.sort}}</p>\r\n\r\n                <table class=\"table is-fullwidth is-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Material</th>\r\n                            <th>Resumen</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor='let materiales of orden.producto.materiales[orden.montaje];let i = index'>\r\n                            <td>\r\n                                <div class=\"material\" >\r\n                                    <div class=\"field\">\r\n                                        <label class=\"label\"> <i>\r\n                                            <!-- {{materiales.producto.nombre}} {{materiales.producto.marca}}: ({{materiales.cantidad * orden.cantidad}}{{Unidad(materiales.producto.nombre)}}) -->\r\n                                            {{materiales.producto.nombre}} {{materiales.producto.marca}}: \r\n                                            <ng-container *ngIf=\"materiales.producto.grupo.nombre == 'Tinta'\">\r\n                                                {{((materiales.cantidad * orden.paginas)/1000).toFixed(2)}}{{Unidad(materiales.producto.nombre)}}\r\n                                            </ng-container>\r\n                                            <ng-container *ngIf=\"materiales.producto.grupo.nombre == 'Barniz'\">\r\n                                                {{((materiales.cantidad * orden.paginas)/1000).toFixed(2)}}{{Unidad(materiales.producto.nombre)}}\r\n                                            </ng-container>\r\n                                            <ng-container *ngIf=\"materiales.producto.grupo.nombre == 'Pega'\">\r\n                                                {{((materiales.cantidad * orden.cantidad)/1000).toFixed(2)}}{{Unidad(materiales.producto.nombre)}}\r\n                                            </ng-container>\r\n                                            <ng-container *ngIf=\"materiales.producto.grupo.nombre == 'Cajas Corrugadas'\">\r\n                                                {{Caja_((orden.cantidad / materiales.cantidad),materiales.producto.cinta)}}{{Unidad(materiales.producto.nombre)}}\r\n                                                <!-- {{caja((Math.ceil(orden.cantidad / materiales.cantidad))*materiales.producto.cinta)}} -->\r\n                                            </ng-container>\r\n                                            <ng-container *ngIf=\"materiales.producto.grupo.nombre == 'Cinta de Embalaje'\">\r\n                                                {{cintas_}}{{Unidad(materiales.producto.nombre)}}\r\n                                            </ng-container>\r\n\r\n                                        </i></label>\r\n                                        <div class=\"control\">\r\n                                            <div class=\"select\">\r\n                                                <select id=\"\" (change)='Lote($event.target.value, materiales.producto.nombre, i, orden.paginas, materiales.producto.grupo.nombre,orden.cantidad,materiales.cantidad,materiales.cinta)'>\r\n                                                    <option value=\"#\">Seleccionar LOTE</option>\r\n                                                    <ng-container *ngFor='let almacen of Almacenado'>\r\n                                                        <option value=\"{{almacen.codigo}}-{{almacen.lote}}\" *ngIf='almacen.material.nombre == materiales.producto.nombre && almacen.material.marca == materiales.producto.marca'>\r\n                                                            {{almacen.codigo}} Lote {{almacen.lote}} ({{almacen.material.presentacion}} {{almacen.material.neto}}{{almacen.material.unidad}})\r\n                                                        </option>\r\n                                                    </ng-container>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                <div class=\"resumen\">\r\n\r\n                                    <div class=\"Inf_lotes\">\r\n                                        <div class=\"informacion\">\r\n                                            <ng-container *ngFor='let lote of LOTES'>\r\n                                                <ng-container *ngIf='lote.i == i'>\r\n                                                    Lote: {{lote.lote}} x {{lote.almacenado}} \r\n                                                    <span class=\"icon has-text-danger\" (click)=\"borrarLote(lote.lote)\">\r\n                                                        <i class=\"fas fa-backspace\"></i>\r\n                                                      </span>\r\n                                                      <br>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                        <b>\r\n                                            Lotes con descuento ({{cantidad_lotes(i)}})\r\n                                        </b>\r\n                                    </div>\r\n                                    <div id='Almacenados-{{i}}'></div>\r\n                                    <div id='Necesario-{{i}}'></div>\r\n                                    <div id='Almacenados-{{i}}'></div>\r\n                                    <div id='Restante-{{i}}'></div>\r\n                                    <div class='fijar_lote' id='fijar_lote-{{i}}'>\r\n                                        <div id='boton_add'>Fijar lote</div>\r\n                                    </div>\r\n                                    \r\n\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <!-- <div class=\"material\" *ngFor='let materiales of orden.producto.materiales'>\r\n                    <hr>\r\n                            <b>\r\n                                {{materiales.material}} ({{materiales.marca}}) x {{(materiales.cantidad / 1000) * orden.cantidad}} (Kg/Und.)\r\n                            </b>\r\n                            <br>\r\n                            <div class=\"field\">\r\n                                <label class=\"label\"> <i>Selecciona de Almacen:</i></label>\r\n                                <div class=\"control\">\r\n                                    <div class=\"select\">\r\n                                        <select id=\"\">\r\n                                            <ng-container *ngFor='let almacen of ALMACEN'>\r\n                                                <option value=\"\" *ngIf='almacen.nombre == materiales.material && almacen.marca == materiales.marca'>{{almacen.nombre}} {{almacen.marca}} (Lote {{almacen.lote}})</option>\r\n                                            </ng-container>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                </div> -->\r\n                \r\n                <!-- <table class=\"table is-fullwidth\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Materiales</th>\r\n                            <th>Cantidad</th>\r\n                            <th>Total Presentacion</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-container  *ngFor='let Material of orden.producto.materiales'>\r\n                            <tr> \r\n                                <td>{{Material.material}}</td>\r\n                                <td>{{(Material.cantidad / 1000) * orden.cantidad}}</td>\r\n                                <td>{{BuscarTotal(Material.material, Material.cantidad, orden.cantidad).presentacion}} x {{BuscarTotal(Material.material, Material.cantidad, orden.cantidad).total}}</td>\r\n                                {{RestarMaterial(Material,BuscarTotal(Material.material, Material.cantidad, orden.cantidad).total )}}\r\n                            </tr>\r\n                        </ng-container>\r\n                    </tbody>\r\n                </table> -->\r\n                <br>\r\n                <button class=\"button is-primary\" (click)='Restar(orden.sort)'>Confirmar</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':eliminacion}\">\r\n    <div class=\"modal-background\" (click)='modal_eliminacion();'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            <h1>{{name_p_e}} x {{cantidad_p_e}}</h1>\r\n            <div class=\"field\">\r\n                <label class=\"label\">Razon de Eliminacion</label>\r\n                <div class=\"control\">\r\n                    <textarea class=\"textarea\" placeholder=\"Motivo de eliminación\" #motivo></textarea>\r\n                </div>\r\n            </div>\r\n            <button class=\"button is-danger\" (click)='confirmar_eliminacion(motivo)'>Eliminar Producto</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal\" [ngClass]=\"{'is-active':reporte}\">\r\n    <div class=\"modal-background\" (click)='modal_reporte()'></div>\r\n    <div class=\"modal-card\">\r\n        <div class=\"modal-card-body\">\r\n            <h1 class=\"subtitulo\">Resumen De Inventario</h1>\r\n            <hr>\r\n            <div class=\"columns\">\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Desde:</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"date\" #desde>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Hasta:</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"date\" #hasta>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button class=\"button is-primary\" (click)='descargarInventario(desde, hasta)'>Descargar inventario</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { RestApiService } from 'src/app/services/rest-api.service';\r\nimport { PdfMakeWrapper, Txt, Img, Table, Cell, Columns, Stack } from 'pdfmake-wrapper';\r\nimport * as pdfFonts from \"pdfmake/build/vfs_fonts\";\r\nimport * as moment from 'moment';\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport Swal from 'sweetalert2';\r\nimport { materialize } from 'rxjs/operators';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  fileName= 'ExcelSheet.xlsx';\r\n\r\n  public resumido:boolean = false;\r\n  public detallado:boolean = true;\r\n\r\n  public NUEVO_PRODUCTO:boolean = false;\r\n  public ALMACEN;\r\n  public SECCIONES\r\n\r\n  public PESO= 0\r\n  public GRAMAJE = 300\r\n  public ANCHO= 0\r\n  public LARGO= 0\r\n  public HOJAS = 0\r\n\r\n  public PESO_= 0\r\n  public GRAMAJE_ = 300\r\n  public ANCHO_= 0\r\n  public LARGO_= 0\r\n  public HOJAS_ = 0\r\n\r\n  empty:boolean = true;\r\n\r\n  public OTRO:boolean = true;\r\n  public Gs;\r\n\r\n  public CONVERSION:boolean = false;\r\n  public BOBINAS:boolean = false;\r\n  public CONSULTAB:boolean = false;\r\n\r\n  public BOBINAS_;\r\n  public product_selected;\r\n  public _producto_seleccionado;\r\n\r\n  public boolean_sustrato:boolean = false;\r\n  public Sustratos;\r\n\r\n  public New_Sustrato:boolean = false;\r\n\r\n  public Mat_Selected;\r\n  public Num_Bobina\r\n\r\n  public MAT_NECESARIO;\r\n\r\n  public MATERIALES_NECESARIOS:boolean = false;\r\n  public _NUEVO_PRODUCTO:boolean = false;\r\n  public EDICION_ALMACEN:boolean = false;\r\n\r\n  public DESCUENTOS = [];\r\n\r\n  public name_p_e\r\n  public cantidad_p_e\r\n  public id_p_e\r\n  public eliminacion:boolean = false;\r\n  public eliminar_sustrato:boolean = false;\r\n\r\n  public reporte:boolean = false;\r\n\r\n\r\n  public AlmacenadoId;\r\n  public MaterialID;\r\n\r\n  public loading:boolean = true;\r\n\r\n  public _bobina:boolean = false;\r\n  public descontar_b:boolean = false;\r\n\r\n  public cintas_;\r\n\r\n  codigoID = '';\r\n  loteID = '';\r\n  cantidadID = '';\r\n\r\n  codigo = '';\r\n  lote = '';\r\n  cantidad = '';\r\n\r\n  public New_color:boolean = false;\r\n  public caja_:boolean = false;\r\n\r\n\r\n\r\n  public _Almacenado:boolean = true;\r\n  public Editar_NUEVO_PRODUCTO:boolean = false;\r\n\r\n  public TOTALES = [\r\n    {\r\n      material:null,\r\n      marca:null,\r\n      calibre:null,\r\n      gramaje:null,\r\n      total:null,\r\n      grupo:null,\r\n      presentacion:null,\r\n      neto:null,\r\n      unidad:null,\r\n      ancho:null,\r\n      largo:null\r\n    }\r\n  ];\r\n\r\n  public _bobina_ = ''\r\n  \r\n  public LOTES = [];\r\n  public Almacenado = [];\r\n\r\n\r\n  InventarioForm:FormGroup = this.fb.group({\r\n    ancho:[''],\r\n    largo:[''],\r\n    gramaje:[''],\r\n    calibre:[''],\r\n    producto:['', Validators.required],\r\n    marca:['',Validators.required],\r\n    presentacion:['', Validators.required],\r\n    unidad:['',Validators.required],\r\n    neto:['', Validators.required],\r\n    color:['Negro',Validators.required],\r\n    cinta:[''],\r\n    // codigo:['',Validators.required],\r\n    // cantidad:['', Validators.required],\r\n    // lote:['', Validators.required],\r\n    NewControl:['']\r\n  });\r\n\r\n  BobinaForm:FormGroup = this.fb.group({\r\n    Nbobina:['', Validators.required],\r\n    material:['CARTON REV. BLANCO', Validators.required],\r\n    gramaje:['', Validators.required],\r\n    ancho:['', Validators.required],\r\n    peso:['', Validators.required],\r\n    lote:['', Validators.required],\r\n    convertidora:['',Validators.required]\r\n  });\r\n\r\n\r\n  constructor(private fb:FormBuilder,\r\n              private api:RestApiService) { \r\n                this.usuario = api.usuario;\r\n              }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.BuscarAlmacen();\r\n    this.getAalmacenado();\r\n    this.BuscarGruposEnAlmacen();\r\n    // this.getSustratos();\r\n    this.porConfirmar();\r\n    this.totalizar_materiales()\r\n    this.Gs = (<HTMLInputElement>document.getElementById('selected')).value\r\n    this.Buscar_conversiones()\r\n    this.getbobinas();\r\n  }\r\n\r\n  public usuario\r\n\r\n  define_color(e){\r\n    if(e != 'Pantone'){\r\n      this.InventarioForm.get('color').setValue(e);\r\n      (<HTMLInputElement>document.getElementById('color')).value = e;\r\n    }else{\r\n      (<HTMLInputElement>document.getElementById('color')).value = '';\r\n      (<HTMLInputElement>document.getElementById('color')).disabled = false;\r\n    }\r\n  }\r\n\r\n  Modal_Almacen_ep(){\r\n    if(this.Editar_NUEVO_PRODUCTO){\r\n      this.Editar_NUEVO_PRODUCTO = false;\r\n    }else{\r\n      this.Editar_NUEVO_PRODUCTO = true;\r\n    }\r\n  }\r\n\r\n  existencia_(seccion){\r\n\r\n    let existencia = this.Almacenado.find(x => x.material.grupo.nombre === seccion)\r\n\r\n    if(existencia){\r\n      return true\r\n    }else{\r\n      return false\r\n    }\r\n\r\n  }\r\n\r\n  public _sustratos_ = []\r\n  buscarSustratos(){\r\n    let sustratos = this.ALMACEN.filter(x => x.grupo.nombre == 'Sustrato')\r\n    for(let i=0; i<sustratos.length; i++){\r\n      let sustrato = this._sustratos_.find(x=> x == sustratos[i].nombre);\r\n      if(!sustrato){\r\n        this._sustratos_.push(sustratos[i].nombre)\r\n      }\r\n    }\r\n  }\r\n\r\n  public _gramajes_ = []\r\n  buscarGramaje(e){\r\n    this._gramajes_ = []\r\n    let sustratos = this.ALMACEN.filter(x => x.nombre == e)\r\n    for(let i=0; i<sustratos.length; i++){\r\n      let gramaje = this._gramajes_.find(x=> x.gramaje == sustratos[i].gramaje);\r\n      if(!gramaje){\r\n        this._gramajes_.push(sustratos[i])\r\n        }\r\n    }\r\n    //console.log(this._gramajes_)\r\n  }\r\n\r\n  public _ancho_ = []\r\n  buscarAncho(e){\r\n    this._ancho_ = []\r\n    let sustratos = this._gramajes_.filter(x => x.gramaje == e)\r\n    for(let i=0; i<sustratos.length; i++){\r\n      let ancho = this._ancho_.find(x=> x == sustratos[i].ancho);\r\n      if(!ancho){\r\n        this._ancho_.push(sustratos[i])\r\n        }\r\n    }\r\n  }\r\n\r\n  define_color2(e){\r\n    if(e != 'Pantone'){\r\n      this.MaterialID.color = e;\r\n    }else{\r\n      (<HTMLInputElement>document.getElementById('color')).disabled = false;\r\n      (<HTMLInputElement>document.getElementById('color')).value = '';\r\n    }\r\n  }\r\n\r\n  Editar_2(id){\r\n    this.Modal_Almacen_ep()\r\n    this.api.getMaterialesID(id)\r\n      .subscribe((resp:any)=>{\r\n        this.MaterialID = resp;\r\n        if(resp.grupo.nombre === 'Tinta'){\r\n          this.New_color = true;\r\n        }\r\n        if(resp.grupo.nombre === 'Cajas Corrugadas'){\r\n          this.caja_ = true;\r\n        }\r\n        //console.log(this.MaterialID,'ok')\r\n      })\r\n  }\r\n\r\n  Editar_Material_F(){\r\n    let grupo = this.MaterialID.grupo._id;\r\n\r\n    this.MaterialID.grupo = grupo;\r\n\r\n    //console.log(this.MaterialID)\r\n\r\n    this.api.putMaterialID(this.MaterialID._id, this.MaterialID)\r\n          .subscribe((resp:any)=>{\r\n            this.Modal_Almacen_ep();\r\n            this.getAalmacenado();\r\n                this.BuscarAlmacen();\r\n                this.totalizar_materiales();\r\n                Swal.fire({\r\n                  position:'center',\r\n                  icon:'success',\r\n                  title:'Material editado con exito!',\r\n                  showConfirmButton: false,\r\n                  timer:1500\r\n                })\r\n\r\n          })\r\n  }\r\n\r\n  Editar(id){\r\n    this.edit_almacen()\r\n    this.api.getAlmacenadoID(id)\r\n      .subscribe((resp:any)=>{\r\n        this.AlmacenadoId = resp;\r\n        this.selecciona_producto(this.AlmacenadoId.material.grupo.nombre)\r\n        this.codigoID = this.AlmacenadoId.codigo;\r\n        this.loteID = this.AlmacenadoId.lote;\r\n        this.cantidadID = this.AlmacenadoId.cantidad;\r\n\r\n      })\r\n  }\r\n\r\n  _Editar(producto){\r\n    let body = {\r\n      material:this.AlmacenadoId.material._id,\r\n      codigo:this.codigoID,\r\n      lote:this.loteID,\r\n      cantidad:this.cantidadID\r\n\r\n      \r\n    }\r\n    \r\n    this.api.putAlmacenadoID(this.AlmacenadoId._id, body)\r\n    .subscribe((resp:any)=>{\r\n      this.edit_almacen();\r\n      Swal.fire({\r\n        position:'center',\r\n        icon:'success',\r\n        title:'El inventario fue editado con exito',\r\n        showConfirmButton: false,\r\n        timer:1500\r\n      })\r\n      this.getAalmacenado();\r\n      this.BuscarAlmacen();\r\n      this.totalizar_materiales();\r\n      this.codigoID = ''\r\n      this.loteID = ''\r\n      this.cantidadID = ''\r\n      this.AlmacenadoId = ''\r\n    })\r\n    \r\n  }\r\n  \r\n  public edit_almacen(){\r\n    if(this.EDICION_ALMACEN){\r\n      this.EDICION_ALMACEN = false;\r\n    }else{\r\n      this.EDICION_ALMACEN = true;\r\n    }\r\n  }\r\n\r\n  Almacenes(e){\r\n    if(e == 'Almacenada'){\r\n      this._Almacenado = true;\r\n      this._bobina = false;\r\n    }else if(e == 'Bobinas'){\r\n      this._Almacenado = false;\r\n      this._bobina = true;\r\n    }else{\r\n      this._Almacenado = false;\r\n      this._bobina = false;\r\n    }\r\n  }\r\n\r\n  getAalmacenado(){\r\n    this.api.getAlmacenado()\r\n      .subscribe((resp:any)=>{\r\n        this.Almacenado = resp;\r\n        this.totalizar_materiales();\r\n      })\r\n  }\r\n\r\n  Cambio_opciones(e){\r\n    if(e === 'otros'){\r\n      this.OTRO = true\r\n    }else{\r\n      this.OTRO = false;\r\n      this.Gs = e;\r\n    }\r\n\r\n    if(e === '61f92a1f2126d717f004cca6'){\r\n      this.New_Sustrato = true;\r\n    }else{\r\n      this.New_Sustrato = false;\r\n    }\r\n\r\n    if(e === '61fd54e2d9115415a4416f17'){\r\n      this.New_color = true;\r\n    }else{\r\n      this.New_color = false;\r\n    }\r\n\r\n    if(e === '61fd7a8ed9115415a4416f74'){\r\n      this.caja_ = true;\r\n    }else{\r\n      this.caja_ = false\r\n    }\r\n\r\n  }\r\n\r\n  public Modal_Mat_Nec(){\r\n    if(this.MATERIALES_NECESARIOS){\r\n      this.MATERIALES_NECESARIOS = false;\r\n    }else{\r\n      this.MATERIALES_NECESARIOS = true;\r\n    }\r\n  }\r\n\r\n  public Nuevo_producto(){\r\n    if(this._NUEVO_PRODUCTO){\r\n      this._NUEVO_PRODUCTO = false;\r\n    }else{\r\n      this._NUEVO_PRODUCTO = true;\r\n    }\r\n\r\n  }\r\n\r\n  public Modal_Almacen(){\r\n    if(this.NUEVO_PRODUCTO){\r\n      this.NUEVO_PRODUCTO = false;\r\n    }else{\r\n      this.NUEVO_PRODUCTO = true;\r\n    }\r\n  }\r\n\r\n  public Modal_bobinas(){\r\n    if(this.BOBINAS){\r\n      this.BOBINAS = false;\r\n    }else{\r\n      this.BOBINAS = true;\r\n      this.buscarSustratos()\r\n    }\r\n  }\r\n\r\n  public modal_Conversion(){\r\n    if(this.CONVERSION){\r\n      this.CONVERSION = false;\r\n    }else{\r\n      this.CONVERSION = true;\r\n    }\r\n  }\r\n\r\n  public modal_reporte(){\r\n    if(this.reporte){\r\n      this.reporte = false;\r\n    }else{\r\n      this.reporte = true;\r\n    }\r\n  }\r\n\r\n  public check_bobinas(){\r\n    if(this.CONSULTAB){\r\n      this.CONSULTAB = false;\r\n    }else{\r\n      this.CONSULTAB = true;\r\n    }\r\n  }\r\n\r\n  public bobina__;\r\n  descontar_bobina(bobina?){\r\n    if(this.descontar_b){\r\n      this.descontar_b = false;\r\n    }else{\r\n      this.descontar_b = true;\r\n      this.bobina__ = bobina;\r\n    }\r\n  }\r\n  descontar_bobina_(numero){\r\n    let data = {\r\n      bobina:this.bobina__,\r\n      numero\r\n    }\r\n    this.api.deleteBobina(data)\r\n      .subscribe((resp:any)=>{\r\n        Swal.fire({\r\n          text:resp,\r\n          icon:'info',\r\n          showConfirmButton:false\r\n        });\r\n        this.getbobinas();\r\n        this.descontar_bobina();\r\n        this.Buscar_conversiones();\r\n      })\r\n  }\r\n\r\n  BuscarGruposEnAlmacen(){\r\n    this.loading = true;\r\n    this.api.GetGrupoMp()\r\n      .subscribe((resp:any)=>{\r\n        this.SECCIONES = resp\r\n        this.loading = false;\r\n      })\r\n  }\r\n\r\n  BuscarAlmacen(){\r\n    this.loading = true;\r\n    this.api.getAlmacen()\r\n      .subscribe((resp:any) => {\r\n        this.ALMACEN = resp.materiales;\r\n        this.totalizar_materiales()\r\n        this.loading = false;\r\n      })\r\n  }\r\n\r\n\r\n  selecciona_producto(e){\r\n    if(e == 0){\r\n      (<HTMLInputElement>document.getElementById('Producto_select')).disabled = true;\r\n    }else{\r\n      (<HTMLInputElement>document.getElementById('Producto_select')).disabled = false;\r\n      this.product_selected = e;\r\n    }\r\n  }\r\n\r\n  almacenar(producto){\r\n    let data = {\r\n      material:producto.value,\r\n      codigo:this.codigo,\r\n      lote:this.lote,\r\n      cantidad:this.cantidad\r\n    }\r\n\r\n    this.api.postAlmacenado(data)\r\n      .subscribe((resp:any)=>{\r\n        Swal.fire({\r\n          position:'center',\r\n          icon:'success',\r\n          title:'Nueva materia prima agregada',\r\n          showConfirmButton: false,\r\n          timer:1500\r\n        })\r\n        this.Nuevo_producto();\r\n        this.BuscarAlmacen();\r\n        this.getAalmacenado();\r\n        this.codigo = '';\r\n        this.lote = '';\r\n        this.cantidad ='';\r\n        (<HTMLInputElement>document.getElementById('Nuevoproducto')).value = \"0\";\r\n      })\r\n  }\r\n\r\n  producto_seleccionado(e){\r\n    if(e == 0){\r\n      this._producto_seleccionado = false\r\n      this.codigo = '';\r\n      this.lote = '';\r\n      this.cantidad = '';\r\n    }else{\r\n      this._producto_seleccionado = true\r\n    }\r\n  }\r\n  \r\n\r\n  Almacenar(){\r\n\r\n    let grupo;\r\n\r\n    if(this.OTRO){\r\n    grupo = this.InventarioForm.get('NewControl').value\r\n    }\r\n    else{\r\n      grupo = this.Gs;\r\n    }\r\n\r\n\r\n    const data = {\r\n      producto: this.InventarioForm.get('producto').value,\r\n      marca:this.InventarioForm.get('marca').value,\r\n\r\n      ancho:this.InventarioForm.get('ancho').value,\r\n      largo:this.InventarioForm.get('largo').value,\r\n      gramaje:this.InventarioForm.get('gramaje').value,\r\n      calibre:this.InventarioForm.get('calibre').value,\r\n\r\n\r\n      // cantidad: this.InventarioForm.get('cantidad').value,\r\n      unidad: this.InventarioForm.get('unidad').value,\r\n      presentacion: this.InventarioForm.get('presentacion').value,\r\n      neto: this.InventarioForm.get('neto').value,\r\n      color:this.InventarioForm.get('color').value,\r\n      // codigo: this.InventarioForm.get('codigo').value,\r\n      // lote: this.InventarioForm.get('lote').value,\r\n      cinta:this.InventarioForm.get('cinta').value,\r\n      grupo,\r\n      nuevo:this.OTRO\r\n\r\n    }\r\n\r\n    //console.log(this.InventarioForm.get('color').value)\r\n\r\n    if(this.InventarioForm.invalid){\r\n      return\r\n    }\r\n\r\n\r\n\r\n    this.api.PostAlmacen(data)\r\n     .subscribe(resp=>{\r\n        this.InventarioForm.reset();\r\n        this.BuscarAlmacen();\r\n        this.BuscarGruposEnAlmacen();\r\n        this.Modal_Almacen();\r\n        // this.getSustratos();\r\n      })\r\n\r\n   }\r\n\r\n   Peso(e){\r\n    this.PESO = e.target.value\r\n    this.HOJAS = this.PESO*10000000000\r\n    let otro = this.GRAMAJE*this.ANCHO*this.LARGO\r\n    this.HOJAS = this.HOJAS/otro\r\n    this.HOJAS = Math.trunc(this.HOJAS)\r\n    // /( this.GRAMAJE*this.ANCHO*this.LARGO)\r\n   }\r\n   Gramaje(e){\r\n     this.GRAMAJE = e\r\n     this.HOJAS = this.PESO*10000000000\r\n     let otro = this.GRAMAJE*this.ANCHO*this.LARGO\r\n     this.HOJAS = this.HOJAS/otro\r\n     this.HOJAS = Math.trunc(this.HOJAS)\r\n     //  /( this.GRAMAJE*this.ANCHO*this.LARGO)\r\n   }\r\n   Ancho(e){\r\n     this.ANCHO = e\r\n     this.HOJAS = this.PESO*10000000000\r\n     let otro = this.GRAMAJE*this.ANCHO*this.LARGO\r\n     this.HOJAS = this.HOJAS/otro\r\n     this.HOJAS = Math.trunc(this.HOJAS)\r\n     //  /( this.GRAMAJE*this.ANCHO*this.LARGO)\r\n   }\r\n   Largo(e){\r\n     this.LARGO = e\r\n     this.HOJAS = this.PESO*10000000000\r\n     let otro = this.GRAMAJE*this.ANCHO*this.LARGO\r\n     this.HOJAS = this.HOJAS/otro\r\n     this.HOJAS = Math.trunc(this.HOJAS)\r\n     //  /( this.GRAMAJE*this.ANCHO*this.LARGO)\r\n   }\r\n\r\n  //  ***********************************************************\r\n  Hojas_(e){\r\n    this.HOJAS_ = e.target.value\r\n    let all = this.HOJAS_ * this.GRAMAJE_*this.ANCHO_*this.LARGO_\r\n    this.PESO_ = all / 10000000000;\r\n    // /( this.GRAMAJE*this.ANCHO*this.LARGO)\r\n   }\r\n   Gramaje_(e){\r\n     this.GRAMAJE_ = e.target.value\r\n     let all = this.HOJAS_ * this.GRAMAJE_*this.ANCHO_*this.LARGO_\r\n     this.PESO_ = all / 10000000000;\r\n     //  /( this.GRAMAJE*this.ANCHO*this.LARGO)\r\n   }\r\n   Ancho_(e){\r\n     this.ANCHO_ = e.target.value\r\n     let all = this.HOJAS_ * this.GRAMAJE_*this.ANCHO_*this.LARGO_\r\n     this.PESO_ = all / 10000000000;\r\n     //  /( this.GRAMAJE*this.ANCHO*this.LARGO)\r\n   }\r\n   Largo_(e){\r\n     this.LARGO_ = e.target.value\r\n     let all = this.HOJAS_ * this.GRAMAJE_*this.ANCHO_*this.LARGO_\r\n     this.PESO_ = all / 10000000000;\r\n     //  /( this.GRAMAJE*this.ANCHO*this.LARGO)\r\n   }\r\n  //  ***********************************************************\r\n\r\n\r\n  nuevaBobina(){\r\n    this.api.postNuevaBobina(this.BobinaForm.value)\r\n      .subscribe((resp:any)=>{\r\n        this.BobinaForm.reset();\r\n        this.Modal_bobinas();\r\n        this.getbobinas();\r\n        Swal.fire({\r\n          title:'Nueva Bobina Agregada!',\r\n          text:'Se agregó una nueva bobina al almacen de bobinas',\r\n          icon:'success',\r\n          showConfirmButton:false\r\n        })\r\n      })\r\n  }\r\n\r\n  public SUSTRATO_CONVERSION = [];\r\n\r\n  getbobinas(){\r\n    this.api.getBobina()\r\n      .subscribe((resp:any)=>{\r\n        this.BOBINAS_ = resp;\r\n        for(let i = 0; i<this.BOBINAS_.length; i++){\r\n          let bobina = this.BOBINAS_[i]\r\n          // bobinas\r\n          // material\r\n          // ancho\r\n          // largo\r\n          \r\n          // material \r\n          // nombre\r\n          // ancho\r\n          // largo \r\n\r\n          let sustrato = this.ALMACEN.filter(x => x.nombre == bobina.material && x.gramaje == bobina.gramaje && x.ancho == bobina.ancho)\r\n          if(sustrato){\r\n            this.SUSTRATO_CONVERSION.push(sustrato)\r\n          }\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  public conversiones = []\r\n  Buscar_conversiones(){\r\n    this.api.getConversiones()\r\n      .subscribe((resp:any)=>{\r\n        this.conversiones = resp;\r\n      })\r\n  }\r\n\r\n  Buscar_Bobina(e){\r\n    let material = this.ALMACEN.find(x => x._id == e.target.value)\r\n\r\n    if(material){\r\n      (<HTMLInputElement>document.getElementById('_gramaje')).value = material.gramaje;\r\n      (<HTMLInputElement>document.getElementById('_ancho')).value = material.ancho;\r\n      (<HTMLInputElement>document.getElementById('_largo')).value = material.largo;\r\n      this.Gramaje(material.gramaje);\r\n      this.Ancho(material.ancho);\r\n      this.Largo(material.largo);\r\n      // if(TheBobina){\r\n      // (<HTMLInputElement>document.getElementById('_ancho')).value = TheBobina.ancho\r\n      // }\r\n      // if(TheBobina){\r\n      //   //console.log(TheBobina)\r\n      //   this.Mat_Selected = TheBobina.material;\r\n      //   this.Num_Bobina = TheBobina.Nbobina;\r\n      // }\r\n    }\r\n\r\n  }\r\n\r\n  Generar_Conversion(){\r\n    let sustrato = (<HTMLInputElement>document.getElementById('bobina_selected')).value;\r\n    let peso = (<HTMLInputElement>document.getElementById('_peso')).value;\r\n    let gramaje = (<HTMLInputElement>document.getElementById('_gramaje')).value;\r\n    let ancho = (<HTMLInputElement>document.getElementById('_ancho')).value;\r\n    let largo = (<HTMLInputElement>document.getElementById('_largo')).value;\r\n    let observacion = (<HTMLInputElement>document.getElementById('observacion')).value;\r\n    let convertidora = (<HTMLInputElement>document.getElementById('convertidora')).value;\r\n\r\n    let Material = this.ALMACEN.find(x=> x._id == sustrato)\r\n\r\n    let data = {\r\n      material:Material.nombre,\r\n      codigo:this.Num_Bobina,\r\n      peso,\r\n      sustrato:Material.nombre,\r\n      hojas:this.HOJAS,\r\n    }\r\n\r\n    let solicitado = [\r\n      'Jaime San Juan',\r\n      'Gerente de Operaciones',\r\n      'Poligráfica Industrial, C.A.'\r\n    ]\r\n\r\n    let hojas:string = data.hojas.toString()\r\n\r\n    let hoy = moment().format('DD/MM/YYYY')\r\n\r\n     this.api.postNuevoSustrato(data)\r\n       .subscribe((resp:any)=>{\r\n         this.modal_Conversion();\r\n         Swal.fire({\r\n           title:'Nueva Solicitud de Conversion Creada',\r\n           text:`Su solicitud de conversion para ${Material.nombre}, fue realizada`,\r\n           icon:'success',\r\n           showConfirmButton:false,\r\n         })\r\n\r\n        async function recibo() {\r\n          const pdf = new PdfMakeWrapper();\r\n          PdfMakeWrapper.setFonts(pdfFonts);\r\n          pdf.pageOrientation('landscape');\r\n\r\n\r\n          pdf.add(\r\n            new Table([\r\n              [\r\n                new Cell(await new Img('../../assets/poli_cintillo.png').width(85).margin([35, 5]).build()).rowSpan(4).end,\r\n                new Cell(new Txt(`\r\n                SOLICITUD DE CONVERSIÓN`).bold().end).alignment('center').fontSize(13).rowSpan(4).end,\r\n                new Cell(new Txt('Código: FAL-002').end).fillColor('#dedede').fontSize(9).alignment('center').end,\r\n              ],\r\n              [\r\n                new Cell(new Txt('').end).end,\r\n                new Cell(new Txt('').end).end,\r\n                new Cell(new Txt('N° de Revisión: 0').end).fillColor('#dedede').fontSize(9).alignment('center').end,\r\n              ],\r\n              [\r\n                new Cell(new Txt('').end).end,\r\n                new Cell(new Txt('').end).end,\r\n                new Cell(new Txt('Fecha de Revision: 18/03/2022').end).fillColor('#dedede').fontSize(9).alignment('center').end,\r\n              ],\r\n              [\r\n                new Cell(new Txt('').end).end,\r\n                new Cell(new Txt('').end).end,\r\n                new Cell(new Txt('Página: 1 de 1').end).fillColor('#dedede').fontSize(9).alignment('center').end,\r\n              ],\r\n            ]).widths(['25%','50%','25%']).end\r\n          )\r\n\r\n          pdf.add(\r\n\r\n            pdf.ln(2)\r\n            \r\n          )\r\n\r\n          pdf.add(\r\n            new Table([\r\n              [\r\n                new Cell(new Table(([\r\n                  [\r\n                    new Cell(new Txt('CONVERTIDORA').end).fillColor('#dedede').end,\r\n                    new Cell(new Txt(convertidora).end).end,\r\n                  ]\r\n                ])\r\n                ).widths(['30%','70%']).end\r\n                ).alignment('center').end,\r\n\r\n                new Cell(new Txt('').end).end,\r\n\r\n                new Cell(new Table(([\r\n                  [\r\n                    new Cell(new Txt('CONVERSIÓN').end).alignment('center').colSpan(2).color('#ffffff').fillColor('#000000').end,\r\n                    new Cell(new Txt('').end).end\r\n                  ],\r\n                  [\r\n                    new Cell(new Txt('N°').margin([0,6]).end).alignment('center').fillColor('#dedede').end,\r\n                    new Cell(new Txt(resp).bold().end).fontSize(20).end\r\n                  ],\r\n                  [\r\n                    new Cell(new Txt('FECHA DE SOLICITUD').end).alignment('center').fillColor('#dedede').end,\r\n                    new Cell(new Txt(`${hoy}`).margin([0,6]).bold().end).end\r\n                  ]\r\n                ])).widths(['30%','70%']).end\r\n                ).alignment('center').end,\r\n\r\n              ]\r\n            ]).widths(['45%','15%','40%']).layout('noBorders').end\r\n            \r\n          )\r\n\r\n\r\n          pdf.add(\r\n\r\n            pdf.ln(2)\r\n            \r\n          )\r\n\r\n          pdf.add(\r\n            new Table(([\r\n              [\r\n                new Cell(new Txt('MATERIAL').margin([0,6]).bold().end).fillColor('#dedede').end,\r\n                new Cell(new Txt('GRAMAJE    (g/m²)').bold().end).fillColor('#dedede').end,\r\n                new Cell(new Txt('ANCHO DE BOBINA (cm)').bold().end).fillColor('#dedede').end,\r\n                new Cell(new Txt('CORTE (cm)').margin([0,6]).bold().end).fillColor('#dedede').colSpan(2).end,\r\n                new Cell(new Txt('').end).fillColor('#dedede').end,\r\n                new Cell(new Txt('PESO (t)').margin([0,6]).bold().end).fillColor('#dedede').end,\r\n                new Cell(new Txt('HOJAS (und)').margin([0,6]).bold().end).fillColor('#dedede').end,\r\n                new Cell(new Txt('OBSERVACIÓN').margin([0,6]).bold().end).fillColor('#dedede').end,\r\n              ],\r\n              [\r\n                new Cell(new Txt(data.sustrato).end).end,\r\n                new Cell(new Txt(gramaje).end).end,\r\n                new Cell(new Txt(ancho).end).end,\r\n                new Cell(new Txt(ancho).end).end,\r\n                new Cell(new Txt(largo).end).end,\r\n                new Cell(new Txt(peso).end).end,\r\n                new Cell(new Txt(hojas).color('red').end).end,\r\n                new Cell(new Txt(observacion).end).end,\r\n              ]\r\n            ])).widths(['17%','11%','11%','11%','11%','11%','11%','17%']).alignment('center').end\r\n          )\r\n\r\n          pdf.add(\r\n\r\n            pdf.ln(2)\r\n            \r\n          )\r\n\r\n          pdf.add(\r\n            new Table(([\r\n              [\r\n                new Cell(new Txt(\"\").end).end,\r\n\r\n                new Cell(new Table(([\r\n                  [\r\n                    new Cell(new Txt('SOLICITADO POR:').color('#ffffff').end).fillColor('#000000').alignment('center').end\r\n                  ],\r\n                  [\r\n                    new Cell(new Stack(solicitado).end).alignment('center').end\r\n\r\n                  ]\r\n                ])).widths(['100%']).end\r\n                ).end,\r\n              ]\r\n\r\n            ])).widths(['60%','40%']).layout('noBorders').alignment('center').end\r\n          )\r\n\r\n\r\n\r\n\r\n          pdf.create().download()\r\n\r\n        }\r\n\r\n        recibo();\r\n\r\n      })\r\n  }\r\n\r\n  // getSustratos(){\r\n  //   this.api.getSustratos()\r\n  //     .subscribe((resp:any)=>{\r\n  //       //console.log(resp)\r\n  //       if(resp.length>0){\r\n  //         this.boolean_sustrato = true;\r\n  //         this.Sustratos = resp;\r\n  //       }\r\n  //     })\r\n\r\n  totalizar(neto,cantidad){\r\n    let total = neto*cantidad;\r\n    return total;\r\n  }\r\n\r\n  porConfirmar(){\r\n    this.api.getMaterialesPorConfirmar()\r\n      .subscribe((resp:any)=>{\r\n        this.MAT_NECESARIO = resp;\r\n        //console.log(this.MAT_NECESARIO, 'this')\r\n      })\r\n  }\r\n\r\n  BuscarTotal(Material:any, cantidad_Mat:any, cantidad_orden:any){\r\n    let El_Material = this.ALMACEN.find(x=> x.nombre == Material)\r\n    const total_necesario = (cantidad_Mat / 1000) * cantidad_orden\r\n    let Total_en_Presentacion = total_necesario / El_Material.neto\r\n\r\n    if( Total_en_Presentacion % 1 == 0 ){\r\n\r\n      if(Total_en_Presentacion < 1){\r\n        Total_en_Presentacion = 1;\r\n      }\r\n    \r\n      return {total:Total_en_Presentacion,\r\n        presentacion: El_Material.presentacion}\r\n\r\n    }else {\r\n      Total_en_Presentacion = Math.round(Total_en_Presentacion)\r\n\r\n      if(Total_en_Presentacion < 1){\r\n        Total_en_Presentacion = 1;\r\n      }\r\n      \r\n      return {total:Total_en_Presentacion,\r\n              presentacion: El_Material.presentacion}\r\n    }\r\n\r\n  }\r\n\r\n  Restar(orden){\r\n\r\n\r\n    // let data = {descuento:this.DESCUENTOS, \r\n    //             orden:orden}\r\n\r\n    // this.api.modificarMaterialTal(data)\r\n    //   .subscribe((resp:any) => {\r\n    //     this.Modal_Mat_Nec()\r\n    //     this.BuscarAlmacen();\r\n    //     this.porConfirmar();\r\n    //   })\r\n\r\n    let En_Almacen = this.MAT_NECESARIO[0].producto.materiales;\r\n    let Cargados = this.LOTES.length\r\n\r\n    \r\n    for(let i = 0; i<En_Almacen.length; i++){\r\n      let existe = this.LOTES.find(x => x.i === i);\r\n\r\n      if(!existe){\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: 'Debes cubrir toda la materia prima para esta orden',\r\n          showConfirmButton: false,\r\n          timer:1500\r\n        })\r\n        return\r\n      }\r\n\r\n      \r\n      \r\n    }\r\n\r\n    let data = {\r\n      lotes:this.LOTES,\r\n      orden\r\n    }\r\n    this.api.realizarDescuentoAlmacen(data)\r\n      .subscribe(resp=> {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Excelente!',\r\n          text: 'La nueva orden ya esta generada',\r\n          showConfirmButton: false,\r\n          timer:1500\r\n        })\r\n\r\n        this.MATERIALES_NECESARIOS = false;\r\n        this.BuscarAlmacen();\r\n        this.porConfirmar();\r\n        this.getAalmacenado();\r\n      })\r\n\r\n  }\r\n\r\n  RestarMaterial(material, total){\r\n    const data = {\r\n      material:material.material,\r\n      total\r\n    }\r\n\r\n\r\n    let Descuento = this.DESCUENTOS.find(x => x.material == material.material)\r\n\r\n    if(!Descuento){\r\n      this.DESCUENTOS.push(data)\r\n    }\r\n\r\n  }\r\n\r\n  modal_eliminacion(){\r\n    if(this.eliminacion){\r\n      this.eliminacion = false;\r\n    }else{\r\n      this.eliminacion = true;\r\n    }\r\n  }\r\n\r\n  eliminar_p(nombre, cantidad, id, sustrato?){\r\n    this.name_p_e = nombre\r\n    this.cantidad_p_e = cantidad\r\n    this.id_p_e = id\r\n\r\n    if(sustrato){\r\n      this.eliminar_sustrato = true;\r\n    }\r\n\r\n    this.modal_eliminacion();\r\n\r\n  }\r\n\r\n  confirmar_eliminacion(motivo){\r\n\r\n    motivo = motivo.value;\r\n\r\n    if(this.eliminar_sustrato){\r\n      this.api.eliminarSustrato(this.id_p_e, motivo)\r\n      .subscribe((resp:any)=>{\r\n        this.BuscarAlmacen();\r\n        this.porConfirmar();\r\n        this.modal_eliminacion();\r\n        \r\n        this.BuscarAlmacen();\r\n        this.BuscarGruposEnAlmacen();\r\n        this.getbobinas();\r\n        // this.getSustratos();\r\n        this.porConfirmar();\r\n        //console.log(resp)\r\n      })\r\n    }else{\r\n      this.api.eliminarMaterial(this.id_p_e, motivo)\r\n        .subscribe((resp:any)=>{\r\n          //console.log(resp)\r\n          this.BuscarAlmacen();\r\n          this.porConfirmar();\r\n          this.modal_eliminacion();\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  \r\n\r\n  descargarInventario(desde, hasta){\r\n    const data = {\r\n      desde:desde.value,\r\n      hasta:hasta.value\r\n    }\r\n\r\n    this.api.reporteInventario(data)\r\n      .subscribe((resp:any)=>{\r\n\r\n\r\n        //console.log('aqui es la broma:', resp)\r\n\r\n        const pdf = new PdfMakeWrapper();\r\n        PdfMakeWrapper.setFonts(pdfFonts);\r\n\r\n        async function generarPDF(){\r\n\r\n          pdf.add(\r\n            new Table([\r\n              [\r\n                new Cell( new Txt(` Movimientos Realizados en el Almacen`).end).alignment('center').end,\r\n              ],\r\n              [\r\n                new Cell( new Txt(` Desde: ${desde.value} Hasta: ${hasta.value}`).end).alignment('center').end,\r\n              ]\r\n            ]).widths(['100%']).layout('noBorders').end\r\n          )\r\n\r\n          pdf.add(\r\n\r\n            pdf.ln(2)\r\n            \r\n          )\r\n\r\n          pdf.add(\r\n            new Table([\r\n              [\r\n                new Cell( new Txt('PRODUCTOS EN ALMACEN').end).fillColor('#dedede').alignment('center').end,\r\n              ]\r\n            ]).widths(['100%']).layout('noBorders').end\r\n          )\r\n\r\n          pdf.add(\r\n\r\n            pdf.ln(2)\r\n            \r\n          )\r\n          pdf.add(\r\n            new Table([\r\n              [\r\n                new Cell( new Txt(`NOMBRE`).end).end,\r\n                new Cell( new Txt(`PRESENTACIÓN`).end).end,\r\n                new Cell( new Txt(`CANTIDAD`).end).end,\r\n                new Cell( new Txt(`CÓDIGO`).end).end,\r\n                new Cell( new Txt(`LOTE`).end).end,\r\n                \r\n              ]\r\n            ]).widths(['20%','20%','20%', '20%', '20%']).end\r\n          )\r\n          for(let i = 0; i < resp.almacen.length; i++){\r\n            pdf.add(\r\n              new Table([\r\n                [\r\n                  new Cell( new Txt(`${resp.almacen[i].nombre}`).end).end,\r\n                  new Cell( new Txt(`${resp.almacen[i].presentacion} ${resp.almacen[i].neto} ${resp.almacen[i].unidad}`).end).end,\r\n                  new Cell( new Txt(`${resp.almacen[i].cantidad}`).end).end,\r\n                  new Cell( new Txt(`${resp.almacen[i].codigo}`).end).end,\r\n                  new Cell( new Txt(`${resp.almacen[i].lote}`).end).end,\r\n                  \r\n                ]\r\n              ]).widths(['20%','20%','20%', '20%', '20%']).end\r\n            )\r\n          }\r\n\r\n          pdf.add(\r\n\r\n            pdf.ln(2)\r\n            \r\n          )\r\n\r\n          pdf.add(\r\n            new Table([\r\n              [\r\n                new Cell( new Txt('PRODUCTOS INGRESADOS EN LA FECHA ESTIPULADA').end).fillColor('#dedede').alignment('center').end,\r\n              ]\r\n            ]).widths(['100%']).layout('noBorders').end\r\n          )\r\n\r\n          pdf.add(\r\n\r\n            pdf.ln(2)\r\n            \r\n          )\r\n\r\n          pdf.add(\r\n            new Table([\r\n              [\r\n                new Cell( new Txt(`NOMBRE`).end).end,\r\n                new Cell( new Txt(`PRESENTACIÓN`).end).end,\r\n                new Cell( new Txt(`CANTIDAD`).end).end,\r\n                new Cell( new Txt(`CÓDIGO`).end).end,\r\n                new Cell( new Txt(`LOTE`).end).end,\r\n                \r\n              ]\r\n            ]).widths(['20%','20%','20%', '20%', '20%']).end\r\n          )\r\n          for(let i = 0; i < resp.ingresos.length; i++){\r\n            pdf.add(\r\n              new Table([\r\n                [\r\n                  new Cell( new Txt(`${resp.ingresos[i].material.nombre}`).end).end,\r\n                  new Cell( new Txt(`${resp.ingresos[i].material.presentacion} ${resp.ingresos[i].material.neto} ${resp.ingresos[i].material.unidad}`).end).end,\r\n                  new Cell( new Txt(`${resp.ingresos[i].material.cantidad}`).end).end,\r\n                  new Cell( new Txt(`${resp.ingresos[i].material.codigo}`).end).end,\r\n                  new Cell( new Txt(`${resp.ingresos[i].material.lote}`).end).end,\r\n                  \r\n                ]\r\n              ]).widths(['20%','20%','20%', '20%', '20%']).end\r\n            )\r\n          }\r\n\r\n          pdf.add(\r\n\r\n            pdf.ln(2)\r\n            \r\n          )\r\n\r\n          pdf.add(\r\n            new Table([\r\n              [\r\n                new Cell( new Txt('SALIDAS DEL ALMACEN').end).fillColor('#dedede').alignment('center').end,\r\n              ]\r\n            ]).widths(['100%']).layout('noBorders').end\r\n          )\r\n\r\n          pdf.add(\r\n\r\n            pdf.ln(2)\r\n            \r\n          )\r\n\r\n          pdf.add(\r\n            new Table([\r\n              [\r\n                new Cell( new Txt(`NOMBRE`).end).end,\r\n                new Cell( new Txt(`PRESENTACIÓN`).end).end,\r\n                new Cell( new Txt(`CANTIDAD`).end).end,\r\n                new Cell( new Txt(`RAZON`).end).end,\r\n                new Cell( new Txt(`FECHA`).end).end,\r\n                \r\n              ]\r\n            ]).widths(['20%','20%','20%', '20%', '20%']).end\r\n          )\r\n          for(let i = 0; i < resp.descuentos.length; i++){\r\n            pdf.add(\r\n              new Table([\r\n                [\r\n                  new Cell( new Txt(`${resp.descuentos[i].material.nombre}`).end).end,\r\n                  new Cell( new Txt(`${resp.descuentos[i].material.presentacion} ${resp.descuentos[i].material.neto} ${resp.descuentos[i].material.unidad}`).end).end,\r\n                  new Cell( new Txt(`${resp.descuentos[i].descuento}`).end).end,\r\n                  new Cell( new Txt(`${resp.descuentos[i].razon}`).end).end,\r\n                  new Cell( new Txt(`${resp.descuentos[i].fecha.slice(0, 10)}`).end).end,\r\n                  \r\n                ]\r\n              ]).widths(['20%','20%','20%', '20%', '20%']).end\r\n            )\r\n          }\r\n\r\n\r\n\r\n\r\n          \r\n            \r\n          pdf.create().download()\r\n          \r\n        }\r\n        generarPDF();\r\n        this.modal_reporte()\r\n      })\r\n\r\n  }\r\n\r\n  totalizar_materiales(){\r\n\r\n    // material:null,\r\n    // marca:null,\r\n    // // total:null,\r\n    // grupo:null,\r\n    // presentacion:null,\r\n    // neto:null,\r\n    // unidad:null,\r\n    // ancho:null,\r\n    // largo:null\r\n\r\n    for(let i=0; i<this.Almacenado.length; i++){\r\n      let existe = this.TOTALES.find(x => x.material == this.Almacenado[i].material.nombre && x.marca == this.Almacenado[i].material.marca);\r\n      if(existe){\r\n          let x = this.TOTALES.findIndex(x => x.material == this.Almacenado[i].material.nombre && x.marca == this.Almacenado[i].material.marca)\r\n          \r\n          this.TOTALES[x].total = Number(this.TOTALES[x].total)\r\n          this.Almacenado[i].cantidad = Number(this.Almacenado[i].cantidad)\r\n          this.Almacenado[i].neto = Number(this.Almacenado[i].material.neto)\r\n\r\n          let def = (this.Almacenado[i].neto * this.Almacenado[i].cantidad) / this.TOTALES[x].neto\r\n\r\n          this.TOTALES[x].total = this.TOTALES[x].total + def;\r\n\r\n        }else{\r\n        this.TOTALES.push({\r\n                       material:this.Almacenado[i].material.nombre,\r\n                       marca:this.Almacenado[i].material.marca,\r\n                       calibre:this.Almacenado[i].material.calibre,\r\n                       gramaje:this.Almacenado[i].material.gramaje,\r\n                       grupo:this.Almacenado[i].material.grupo.nombre,\r\n                       presentacion:this.Almacenado[i].material.presentacion,\r\n                       neto:this.Almacenado[i].material.neto,\r\n                       unidad:this.Almacenado[i].material.unidad,\r\n                      ancho:this.Almacenado[i].material.ancho,\r\n                      largo:this.Almacenado[i].material.largo,\r\n                      total:this.Almacenado[i].cantidad\r\n                    })\r\n                    //console.log(this.TOTALES, 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  \r\n  //   for(let i=0; i<this.ALMACEN.length; i++){\r\n\r\n  //      let existe = this.TOTALES.find(x => x.material ==  this.ALMACEN[i].nombre && x.marca == this.ALMACEN[i].marca);\r\n\r\n  //      if(existe){\r\n\r\n  //       if(this.ALMACEN[i].grupo.nombre === 'Sustrato'){\r\n  //         let Existe = this.TOTALES.find(x => x.ancho == this.ALMACEN[i].ancho && x.largo == this.ALMACEN[i].largo)\r\n            \r\n  //         if(Existe){\r\n  //           let findIndex = this.TOTALES.findIndex(x => x.ancho == this.ALMACEN[i].ancho && x.largo == this.ALMACEN[i].largo && x.material ==  this.ALMACEN[i].nombre && x.marca == this.ALMACEN[i].marca)\r\n\r\n  //           // let total = this.TOTALES[findIndex].total;\r\n  //           let cantidad = this.ALMACEN[i].cantidad\r\n\r\n  //           let Almacen = cantidad * this.ALMACEN[i].neto;\r\n\r\n\r\n  \r\n  //           this.TOTALES[findIndex].neto = this.TOTALES[findIndex].neto + Almacen\r\n            \r\n  //           // this.TOTALES[findIndex].total = 1;\r\n\r\n  //           // //console.log('HEREEEE ',this.TOTALES[findIndex], 'Almacen: ',this.ALMACEN[i])\r\n\r\n  //         }else{\r\n  //           this.TOTALES.push({\r\n  //             material:this.ALMACEN[i].nombre,\r\n  //             marca:this.ALMACEN[i].marca,\r\n  //             // total:this.ALMACEN[i].cantidad,\r\n  //             grupo:this.ALMACEN[i].grupo.nombre,\r\n  //             presentacion:this.ALMACEN[i].presentacion,\r\n  //             neto:this.ALMACEN[i].neto,\r\n  //             unidad:this.ALMACEN[i].unidad,\r\n  //             // ancho:this.ALMACEN[i].ancho,\r\n  //             // largo:this.ALMACEN[i].largo\r\n  //           })\r\n  //         }\r\n  //         // else{\r\n  //         //   let findIndex = this.TOTALES.findIndex(x => x.material ==  this.ALMACEN[i].nombre && x.marca == this.ALMACEN[i].marca)\r\n\r\n  //         // let total = this.TOTALES[findIndex].total;\r\n  //         // let cantidad = this.ALMACEN[i].cantidad\r\n\r\n  //         // if(this.ALMACEN[i].neto != this.TOTALES[findIndex].neto){\r\n            \r\n  //         //   let NewNETO = this.ALMACEN[i].neto / this.TOTALES[findIndex].neto\r\n            \r\n  //         //   cantidad = this.ALMACEN[i].cantidad * NewNETO;\r\n\r\n  //         // }\r\n          \r\n  //         // this.TOTALES[findIndex].total = total + cantidad;\r\n  //         // }\r\n\r\n  //       }else{\r\n\r\n  //         let findIndex = this.TOTALES.findIndex(x => x.material ==  this.ALMACEN[i].nombre && x.marca == this.ALMACEN[i].marca)\r\n\r\n  //         // let total = this.TOTALES[findIndex].total;\r\n  //         let cantidad = this.ALMACEN[i].cantidad\r\n\r\n  //         if(this.ALMACEN[i].neto != this.TOTALES[findIndex].neto){\r\n            \r\n  //           let NewNETO = this.ALMACEN[i].neto / this.TOTALES[findIndex].neto\r\n            \r\n  //           cantidad = this.ALMACEN[i].cantidad * NewNETO;\r\n\r\n  //         }\r\n          \r\n  //         this.TOTALES[findIndex].total = total + cantidad;\r\n\r\n\r\n  //       }\r\n\r\n  //      }else{\r\n  //        this.TOTALES.push({\r\n  //          material:this.ALMACEN[i].nombre,\r\n  //          marca:this.ALMACEN[i].marca,\r\n  //         //  total:this.ALMACEN[i].cantidad,\r\n  //          grupo:this.ALMACEN[i].grupo.nombre,\r\n  //          presentacion:this.ALMACEN[i].presentacion,\r\n  //          neto:this.ALMACEN[i].neto,\r\n  //          unidad:this.ALMACEN[i].unidad,\r\n  //          ancho:this.ALMACEN[i].ancho,\r\n  //          largo:this.ALMACEN[i].largo\r\n  //        })\r\n  //      }\r\n\r\n  //   }\r\n  // }\r\n\r\n  changeView(){\r\n\r\n    if(this.resumido){\r\n      this.resumido = false;\r\n      this.detallado = true;\r\n    }else{\r\n      this.resumido = true;\r\n      this.detallado = false;\r\n    }\r\n  }\r\n\r\n  seleccion_inventario(material, marca){\r\n    \r\n    let materiales_en_almacen = [];\r\n\r\n    for(let i=0; i<this.ALMACEN.length; i++){\r\n      if(this.ALMACEN[i].nombre == material && this.ALMACEN[i].marca == marca){\r\n        materiales_en_almacen.push({\r\n          nombre:this.ALMACEN[i].nombre,\r\n          marca:this.ALMACEN[i].marca,\r\n\r\n        });\r\n      }\r\n    }\r\n\r\n    return materiales_en_almacen;\r\n  }\r\n  Caja_(caja:number, cinta:number){\r\n    caja = Math.ceil(caja);\r\n    this.cintas_= Number(cinta * caja)\r\n    return caja\r\n  }\r\n  caja(cajas){\r\n    this.caja_ = cajas;\r\n  }\r\n\r\n  Lote(e, material, i, hojas, grupo, cantidad,m_cantidad,cinta?){\r\n\r\n    let splited = e.split('-')\r\n    e = splited[1]\r\n    let codigo = splited[0]\r\n    //console.log(splited)\r\n\r\n    let EnAlmacen = this.Almacenado.find(x => x.material.nombre === material && x.lote === e && x.codigo === codigo)\r\n\r\n    // //console.log('******/*/*/*/*/*/*/*/*/*/*/', cantidad)\r\n    //console.log(this.MAT_NECESARIO)\r\n    let _cantidad\r\n\r\n    if(grupo === 'Tinta'){\r\n      _cantidad = (m_cantidad * hojas) / 1000;\r\n    }else if(grupo === 'Barniz'){\r\n      _cantidad = (m_cantidad * hojas) / 1000;\r\n    }else if(grupo === 'Pega'){\r\n      _cantidad = (m_cantidad * cantidad) / 1000;\r\n    }else if(grupo === 'Cajas Corrugadas'){\r\n      _cantidad = cantidad / m_cantidad;\r\n      cinta  = cinta * _cantidad;\r\n    }else if(grupo === 'Cinta de Embalaje'){\r\n      _cantidad = this.cintas_;\r\n    }\r\n\r\n    let unidad_necesaria = _cantidad / EnAlmacen.material.neto;\r\n    // alert(_cantidad)\r\n    // alert(EnAlmacen.material.neto)\r\n\r\n\r\n    unidad_necesaria = Math.ceil(unidad_necesaria)\r\n    EnAlmacen.cantidad = Math.trunc(EnAlmacen.cantidad)\r\n\r\n    let previo = this.LOTES.filter(x => x.i === i)\r\n\r\n    if(EnAlmacen.material.grupo.nombre === 'Sustrato'){\r\n      unidad_necesaria = hojas\r\n    }\r\n\r\n    if(previo.length > 0){\r\n\r\n      if(previo[previo.length-1].restante){\r\n        unidad_necesaria = previo[previo.length-1].restante\r\n      }\r\n\r\n    }\r\n\r\n\r\n    document.getElementById(`Necesario-${i}`).innerHTML = `${unidad_necesaria} ${EnAlmacen.material.presentacion}(s) necesaria(s)`\r\n    document.getElementById(`Almacenados-${i}`).innerHTML = `${EnAlmacen.cantidad} ${EnAlmacen.material.presentacion}(s) En Almacen`\r\n    \r\n    \r\n    let restante =  EnAlmacen.cantidad - unidad_necesaria;\r\n    restante = Math.trunc(restante)\r\n\r\n    let cantidad_solicitada;\r\n\r\n    if(restante < 0){\r\n      restante = Math.abs(restante);\r\n      document.getElementById(`Restante-${i}`).innerHTML = `\r\n      <b>Faltan: </b>${restante} <br>\r\n      `\r\n      document.getElementById(`fijar_lote-${i}`).style.display = \"block\";\r\n\r\n      let check = document.getElementById(`fijar_lote-${i}`);\r\n\r\n      cantidad_solicitada = EnAlmacen.cantidad;\r\n      check.onclick = () => this.fijalote(e,codigo, 0, i, (EnAlmacen.cantidad*EnAlmacen.material.neto), restante,cantidad_solicitada)\r\n\r\n\r\n      // <input type=\"checkbox\" (click)='fijalote(${e},${EnAlmacen.cantidad})'> Fijar lote\r\n    }else{\r\n      document.getElementById(`fijar_lote-${i}`).style.display = \"none\";\r\n      document.getElementById(`Restante-${i}`).innerHTML = `<b>Restan: </b>${restante} ${EnAlmacen.material.presentacion}(s) En Almacen`\r\n      \r\n      cantidad_solicitada = EnAlmacen.cantidad - restante;\r\n      let existe = this.LOTES.find(x => x.lote === e)\r\n\r\n      if(!existe){\r\n        this.LOTES.push({lote:e,codigo:codigo,resta:restante,i,almacenado:EnAlmacen.cantidad,solicitado:cantidad_solicitada})\r\n      }\r\n      else{\r\n        this.LOTES.push({lote:e,codigo,resta:restante,i,almacenado:EnAlmacen.cantidad,solicitado:cantidad_solicitada})\r\n        //  let index = this.LOTES.findIndex(x => x.lote === e)\r\n        //  this.LOTES.splice(index , 1);\r\n      }\r\n      \r\n      //console.log(this.LOTES)\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  fijalote(lote,codigo, resto, i, almacenado, restante,solicitado){\r\n\r\n    let existe = this.LOTES.find(x => x.lote == lote)\r\n\r\n      if(!existe){\r\n        this.LOTES.push({lote,codigo,resta:resto,i,almacenado,restante:restante,solicitado})\r\n        //console.log(this.LOTES)\r\n      }else{\r\n        let index = this.LOTES.findIndex(x => x.lote == lote)\r\n        this.LOTES.push({lote,codigo,resta:resto,i,almacenado,restante:restante,solicitado})\r\n      }\r\n\r\n      //console.log(this.LOTES)\r\n  \r\n  }\r\n\r\n  Unidad(material){\r\n    let unidad = this.ALMACEN.find(x => x.nombre === material)\r\n\r\n    return unidad.unidad\r\n  }\r\n\r\n  cantidad_lotes(x){\r\n\r\n    let lotes = this.LOTES.length;\r\n    let total = 0;\r\n    \r\n    for(let i = 0; i<lotes; i++){\r\n      if(this.LOTES[i].i == x){\r\n        total ++\r\n      } \r\n    }\r\n\r\n    return total;\r\n\r\n  }\r\n\r\n  existencia(x){\r\n    let lotes = this.LOTES.length;\r\n    let existencia = 0;\r\n    for(let i = 0; i<lotes; i++){\r\n      if(this.LOTES[i].i == x){\r\n        existencia = existencia + this.LOTES[i].almacenado;\r\n      } \r\n    }\r\n\r\n    return existencia\r\n  }\r\n\r\n  borrarLote(lote){\r\n    let index = this.LOTES.findIndex(x => x.lote === lote)\r\n\r\n    this.LOTES.splice(index,1)\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MaquinaInterface } from '../interface/maquinas.interfase';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Usuario } from '../models/usuario.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestApiService {\r\n\r\n\r\n  api_url = environment.api;\r\n\r\n  constructor(public http:HttpClient,\r\n              private router:Router) { }\r\n\r\n  public usuario!:Usuario;\r\n\r\n  get token():string{\r\n    return localStorage.getItem('token') || '';\r\n  }\r\n  get headers(){\r\n    return {\r\n      'Authorization':this.token\r\n    }\r\n   }\r\n\r\n  // **************************************************************************\r\n  // **************************** MAQUINAS ************************************\r\n  // ************************************************************************** \r\n\r\n  GetMaquinas(){\r\n    const url = `${this.api_url}/maquinas`\r\n    return this.http.get<MaquinaInterface[]>(url)\r\n  }\r\n\r\n  PostMaquinas(data:MaquinaInterface){\r\n    const url = `${this.api_url}/maquinas`\r\n    return this.http.post<MaquinaInterface>(url,data)\r\n  }\r\n\r\n  DeleteMaquinas(id){\r\n    const url = `${this.api_url}/maquinas/${id}`\r\n    return this.http.delete(url)\r\n  }\r\n\r\n\r\n  // **************************************************************************\r\n  // **************************** GRUPOS **************************************\r\n  // **************************************************************************\r\n\r\n  getGrupos(){\r\n    const url = `${this.api_url}/grupos`\r\n    return this.http.get(url)\r\n  }\r\n\r\n  PostGrupos(data:any){\r\n    const url = `${this.api_url}/grupos`\r\n    return this.http.post(url,data)\r\n  }\r\n\r\n  // ****************************************************************************\r\n  // **************************** CLIENTES **************************************\r\n  // ****************************************************************************\r\n\r\n  GetClientes(){\r\n    const url = `${this.api_url}/clientes`\r\n    return this.http.get(url)\r\n  }\r\n\r\n  PostClientes(data){\r\n    const url = `${this.api_url}/clientes`\r\n    return this.http.post(url,data)\r\n  }\r\n\r\n  // ****************************************************************************\r\n  // **************************** Almacen ***************************************\r\n  // ****************************************************************************\r\n\r\n\r\n  getAlmacen(){\r\n    const url = `${this.api_url}/materiales`\r\n    return this.http.get(url)\r\n  }\r\n\r\n  GetGrupoMp(){\r\n    const url = `${this.api_url}/tipo-materia-prima`\r\n    return this.http.get(url)\r\n  }\r\n\r\n  PostAlmacen(data){\r\n    const url = `${this.api_url}/nuevo-material`\r\n    return this.http.post(url,data)\r\n  }\r\n\r\n  // ****************************************************************************\r\n  // **************************** Productos *************************************\r\n  // ****************************************************************************\r\n\r\n  postProducto(data){\r\n    const url = `${this.api_url}/nuevo-producto`\r\n    return this.http.post(url,data)\r\n  }\r\n\r\n  getById(id){\r\n    const url = `${this.api_url}/productos/${id}`\r\n    return this.http.get(url)\r\n  }\r\n\r\n  getOneById(id){\r\n    const url = `${this.api_url}/producto/${id}`\r\n    return this.http.get(url)\r\n  }\r\n\r\n\r\n  getFechas(id){\r\n    const url = `${this.api_url}/trabajos/${id}`\r\n    return this.http.get(url);\r\n  }\r\n\r\n  postOrden(data){\r\n    const url = `${this.api_url}/orden`\r\n    return this.http.post(url,data)\r\n  }\r\n  postOrden2(data){\r\n    const url = `${this.api_url}/trabajos`\r\n    return this.http.post(url,data)\r\n  }\r\n  getOrdenById(id){\r\n    const url = `${this.api_url}/orden/${id}`\r\n    return this.http.get(url);\r\n  }\r\n  getOrden(){\r\n    const url = `${this.api_url}/orden`\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getTrabajos(){\r\n    const url = `${this.api_url}/trabajos`\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getEstado(id:any){\r\n    const url = `${this.api_url}/orden/etapa/${id}`\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getInfToday(fecha:any){\r\n    const url = `${this.api_url}/gestion`\r\n    return this.http.post(url,fecha)\r\n  }\r\n\r\n  postGestion(data){\r\n    const url = `${this.api_url}/gestiones`\r\n    return this.http.post(url,data)\r\n  }\r\n\r\n  getGestiones(){\r\n    const url = `${this.api_url}/gestiones`\r\n    return this.http.get(url);\r\n  }\r\n  postRestrasar(data){\r\n    const url = `${this.api_url}/trabajos/retrasar`\r\n    return this.http.post(url,data)\r\n  }\r\n  postAcelerar(data){\r\n    const url = `${this.api_url}/trabajos/acelerar`\r\n    return this.http.post(url,data)\r\n  }\r\n\r\n  postNuevaBobina(data){\r\n    const url = `${this.api_url}/bobina`\r\n    return this.http.post(url,data)\r\n  }\r\n  deleteBobina(data){\r\n    const url = `${this.api_url}/bobina-delete`\r\n    return this.http.post(url, data)\r\n  }\r\n\r\n  getBobina(){\r\n    const url = `${this.api_url}/bobina`\r\n    return this.http.get(url)\r\n  }\r\n\r\n  postNuevoSustrato(data){\r\n    const url = `${this.api_url}/sustrato`\r\n    return this.http.post(url,data)\r\n  }\r\n\r\n  getSustratos(){\r\n    const url = `${this.api_url}/sustrato`\r\n    return this.http.get(url)\r\n  }\r\n\r\n  getConversiones(){\r\n    const url = `${this.api_url}/conversiones`\r\n    return this.http.get(url)\r\n  }\r\n\r\n  Login(data){\r\n    const url = `${this.api_url}/login`\r\n    return this.http.post(url,data)\r\n  }\r\n\r\n  validarToken():Observable<boolean>{\r\n    \r\n\r\n    return this.http.get(`${this.api_url}/renew`,{\r\n      headers:this.headers\r\n    }).pipe(\r\n      tap( (resp:any) =>{\r\n\r\n        const {estado,_id ,Nombre ,Apellido, Correo ,Departamento, Role,Nueva_orden,Consulta,Almacen,Maquinaria, Planificacion,Gestiones } = resp.usuario;\r\n\r\n        this.usuario = new Usuario(estado, _id, Nombre, Apellido, Correo, Departamento,Role,Nueva_orden, Consulta, Almacen,Maquinaria,Planificacion,Gestiones);\r\n        localStorage.setItem('token', resp.token);\r\n        localStorage.setItem('menu', JSON.stringify( resp.menu) );\r\n      }),\r\n      map(resp => true),\r\n      catchError(error => of(false))\r\n    )\r\n\r\n  }\r\n\r\n  logout(){\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('menu');\r\n    this.router.navigateByUrl('login');\r\n  }\r\n\r\n  getMaterialesPorConfirmar(){\r\n    const url = `${this.api_url}/orden_material`\r\n    return this.http.get(url)\r\n  }\r\n\r\n  modificarMaterialTal(data){\r\n    const url = `${this.api_url}/material/descuento`\r\n    return this.http.post(url, data)\r\n  }\r\n\r\n  eliminarMaterial(id:any, motivo){\r\n    const url = `${this.api_url}/materiales/${id}`\r\n    const data = {\r\n      motivo\r\n    }\r\n    return this.http.post(url, data)\r\n  }\r\n\r\n  eliminarSustrato(id:any, motivo){\r\n    const url = `${this.api_url}/sustratos/${id}`\r\n    const data = {\r\n      motivo\r\n    }\r\n    return this.http.post(url, data)\r\n  }\r\n\r\n  reporteInventario(data){\r\n    const url = `${this.api_url}/materialess/reporte`\r\n    return this.http.post(url, data);\r\n  }\r\n\r\n  realizarDescuentoAlmacen(data){\r\n    const url = `${this.api_url}/material/descuento`\r\n    return this.http.post(url, data);\r\n  }\r\n\r\n  postAlmacenado(data){\r\n    const url = `${this.api_url}/almacenado`\r\n    return this.http.post(url, data);\r\n  }\r\n\r\n  getAlmacenado(){\r\n    const url = `${this.api_url}/almacenado`\r\n    return this.http.get(url)\r\n  }\r\n\r\n  getAlmacenadoID(id){\r\n    const url = `${this.api_url}/almacenado/${id}`\r\n    return this.http.get(url)\r\n  }\r\n\r\n  putAlmacenadoID(id,body){\r\n    const url = `${this.api_url}/almacenado/${id}`\r\n    return this.http.put(url,body)\r\n  }\r\n\r\n  getMaterialesID(id){\r\n    const url = `${this.api_url}/materiales/${id}`\r\n    return this.http.get(url)\r\n  }\r\n  \r\n  putMaterialID(id, body){\r\n    const url = `${this.api_url}/material/${id}`\r\n    return this.http.put(url,body)\r\n  }\r\n\r\n  getMaquinaID(id){\r\n    const url = `${this.api_url}/maquinas/${id}`\r\n    return this.http.get(url)\r\n  }\r\n\r\n  putMaquina(id, body){\r\n    const url = `${this.api_url}/maquinas/${id}`\r\n    return this.http.put(url, body)\r\n  }\r\n\r\n  deleteGrupo(id){\r\n    const url = `${this.api_url}/grupo/${id}`\r\n    return this.http.delete(url)\r\n  }\r\n\r\n  getMaquinasByOrdens(id){\r\n    const url = `${this.api_url}/maquina-orden/${id}`\r\n    return this.http.get(url)\r\n  }\r\n\r\n  updateProducto(data, id){\r\n    const url = `${this.api_url}/producto/${id}`\r\n    return this.http.post(url, data)\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainComponent } from './main/main.component';\r\nimport { IndexComponent } from './index.component';\r\n\r\nconst routes: Routes =[\r\n  {\r\n    path:'',\r\n    component:IndexComponent,\r\n    children:[\r\n      {\r\n        path:'',\r\n        component:MainComponent\r\n      }]\r\n}]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class IndexRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"hero is-small is-primary\">\r\n    <!-- <img src=\"../assets/BANNER-SIO-1092x270-v03.jpg\"> -->\r\n</section>\r\n\r\n<div class=\"container\">\r\n    <div class=\"columns menu\">\r\n        <div class=\"column\">\r\n            <!-- <img src=\"../../../assets/BANNER-NUEVA-ORDEN.png\" alt=\"\" routerLink=\"/orden\"> -->\r\n        </div>\r\n        <div class=\"column\">\r\n            <!-- <img src=\"../../../assets/BANNER-NUEVA-ORDEN.png\" alt=\"\" routerLink=\"/orden\"> -->\r\n        </div>\r\n        <div class=\"column\">\r\n            <img src=\"../../../assets/BANNER-PRODUCTOS.png\" alt=\"\" routerLink=\"/gestiones/productos\">\r\n        </div>\r\n        <div class=\"column\">\r\n            <img src=\"../../../assets/BANNER-MAQUINARIA.png\" alt=\"\" routerLink=\"/gestiones/maquinaria\">\r\n        </div>\r\n        <div class=\"column\">\r\n            <!-- <img src=\"../../../assets/BANNER-NUEVA-ORDEN.png\" alt=\"\" routerLink=\"/orden\"> -->\r\n        </div>\r\n        <div class=\"column\">\r\n            <!-- <img src=\"../../../assets/BANNER-NUEVA-ORDEN.png\" alt=\"\" routerLink=\"/orden\"> -->\r\n        </div>\r\n    </div>\r\n</div><!--�\u000eQ�?:�A��y�� �.�C�\u000b\u0003+�'\n��n��\u001ao�\r�U�1�lܦ���I�)8r�\u0015�H���qf���Cxu\u001er^��M�?h>\u00014��\u0007�Ԯ�M���'s���O q˳'�c�;D\t��P\f&'aVˠ��WܽKz��\b��{)h�m4\n9Ke�\"�}�ZM,%=\u000f�4\u0017=��t3���\u00187{\u0014t�\b�� i�mVL��\u000f��r\u001f�,�ob�8J��\u0017�p�X���]��\t=}���J\u0010f�r\t�G�i�'eġ:,��^\u0006<��9A�qC�c\u0000�\u0011nS\\��:Wm��p\u0003��_(.]W��\u0000Ƒd�\u0004��\u0006�\u001b�3��8$�\u0004�lT��Qx\u001dA�c���%\u001b~*�:�\\G��\u001b��;��\u0004\n���n<H{��\f�\u0004[[ZX�\u0015u����v�\u0017'\u001a��U�y���?��\tS�\u0019\u001aD��\u001c\u0007�r%Z�@�|�,���\u001aQ\u00124��%�b/;+�|gռW��Vc\u0005�\u0011�\u00050P7��@�\u000e\u0000�L\u0003RyW�\u0005�L\u0003\u0006�L\u0003\u0015�L\u0003�{�OSM�b9�L\u0003\u0000�L\u0003-->","import { Component, OnInit } from '@angular/core';\r\nimport { RestApiService } from 'src/app/services/rest-api.service';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  constructor(private api:RestApiService) {\r\n      this.usuario = api.usuario\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    //console.log(this.usuario)\r\n  }\r\n\r\n  public usuario\r\n\r\n\r\n  getOrdenes(){\r\n    \r\n  }\r\n\r\n}\r\n","<section class=\"hero is-small is-primary\">\r\n    <!-- <img src=\"../assets/BANNER-SIO-1092x270-v03.jpg\"> -->\r\n</section>\r\n\r\n\r\n<div class=\"container mt-5 animate__animated animate__fadeIn\">\r\n    <div class=\"columns menu\">\r\n        <div class=\"column\" *ngIf=\"usuario.Nueva_orden != 0\">\r\n            <img src=\"../../../assets/BANNER-NUEVA-ORDEN.png\" alt=\"\" routerLink=\"/orden\">\r\n        </div>\r\n        <div class=\"column\" *ngIf=\"usuario.Almacen != 0\">\r\n            <img src=\"../../../assets/BANNER-ALMACEN.png\" routerLink=\"/almacen\">\r\n        </div>\r\n        <div class=\"column\" *ngIf=\"usuario.Maquinaria != 0\">\r\n            <img src=\"../../../assets/BANNER-PRODUCTOS-Y-MAQUINARIA.png\" routerLink=\"/gestiones\">\r\n        </div>\r\n        \r\n        <div class=\"column\" *ngIf=\"usuario.Consulta != 0\">\r\n            <img src=\"../../../assets/BANNER-CONSULTA.png\" routerLink=\"/ordenes\">\r\n        </div>\r\n        <div class=\"column\" *ngIf=\"usuario.Gestiones != 0\">\r\n            <img src=\"../../../assets/BANNER-GESTIONES.png\"  routerLink=\"/ordenes/gestion\">\r\n        </div>\r\n        <div class=\"column\" *ngIf=\"usuario.Planificacion != 0\">\r\n            <img src=\"../../../assets/BANNER-PLANIFICACION.png\" routerLink=\"/planificacion\">\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IndexRoutingModule } from './index-routing.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    IndexRoutingModule\r\n  ]\r\n})\r\nexport class IndexModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { MainComponent } from './index/main/main.component';\r\nimport { OrdenComponent } from './orden/orden.component';\r\nimport { PlanificacionComponent } from './planificacion/planificacion.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthGuard } from './Auth/auth-guard.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    canActivate: [AuthGuard],\r\n    loadChildren: ()=> import('./index/index.module').then(m => m.IndexModule),\r\n  },\r\n  {\r\n    path:'orden-produccion/:id',\r\n    canActivate: [AuthGuard],\r\n    component:OrdenComponent\r\n  },\r\n  {\r\n    path: 'orden',\r\n    canActivate: [AuthGuard],\r\n    loadChildren: ()=> import('./nuevo-pedido/nuevo-pedido.module').then(m => m.NuevoPedidoModule)\r\n  },\r\n  {\r\n    path: 'gestiones',\r\n    canActivate: [AuthGuard],\r\n    loadChildren: ()=> import('./producto-ymaquinaria/producto-ymaquinaria.module').then(m=> m.ProductoYMaquinariaModule)\r\n  },\r\n  {\r\n    path: 'almacen',\r\n    canActivate: [AuthGuard],\r\n    loadChildren: ()=> import('./almacen/almacen.module').then(m=>m.AlmacenModule)\r\n  },\r\n  {\r\n    path: 'ordenes',\r\n    canActivate: [AuthGuard],\r\n    loadChildren: ()=> import('./ordenes/ordenes.module').then(m=>m.OrdenesModule)\r\n  },\r\n  {\r\n    path: 'planificacion',\r\n    canActivate: [AuthGuard],\r\n    component:PlanificacionComponent\r\n  },\r\n  {\r\n    path: 'login',\r\n    component:LoginComponent\r\n  }\r\n\r\n]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot( routes )\r\n  ],\r\n  exports:[\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport Swal from 'sweetalert2'\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { RestApiService } from '../services/rest-api.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: [\r\n    './login.component.css'\r\n  ]\r\n})\r\nexport class LoginComponent implements OnInit{\r\n\r\n  cargando = false;\r\n  correo:string = '';\r\n  email:string = '';\r\n\r\n  \r\n  public formSubmitted = false;\r\n  public loginForm = this.fb.group({\r\n    Correo:['', [Validators.required, Validators.email]],\r\n    Password:['', Validators.required],\r\n    remember: [false]\r\n  });\r\n  \r\n  constructor(private router:Router,\r\n    private fb:FormBuilder,\r\n    private api:RestApiService) {\r\n    }\r\n  \r\n    ngOnInit(){\r\n      this.email = localStorage.getItem('correo') || '';\r\n        if(this.email.length > 2 ){\r\n          this.loginForm.get('remember')?.patchValue(true);\r\n        }\r\n    }\r\n\r\n\r\n\r\n  login(){    \r\n    //Agregar clase de cargar a boton\r\n    this.cargando = true;\r\n\r\n    if(this.loginForm.get('remember')?.value === true){\r\n      this.correo = this.loginForm.get('Correo')?.value;\r\n      localStorage.setItem('correo', this.correo);\r\n    }else{\r\n      localStorage.removeItem('correo');\r\n    }\r\n    \r\n\r\n    this.api.Login(this.loginForm.value)\r\n        .subscribe((resp:any) =>{\r\n          localStorage.setItem('token', resp.token);\r\n          this.router.navigateByUrl('/')\r\n        }, (err) => {\r\n          this.cargando = false;\r\n          //console.log(err)\r\n          Swal.fire('Error', err.error.err.message, 'error')\r\n        })\r\n    // //console.log(this.loginForm.value)\r\n\r\n  }\r\n\r\n}","<div class=\"fondo\">\r\n    <div class=\"login\">\r\n       <!-- ****************************** -->\r\n       <form \r\n       autocomplete=\"off\"\r\n       [formGroup]=\"loginForm\"\r\n       (ngSubmit)=\"login()\"\r\n       >\r\n         <img src=\"../../assets/LOGIN-SIO.png\" alt=\"Poligrafica Industrial\">\r\n         <div class=\"field mt-5\">\r\n             <div class=\"field has-addons\">\r\n                   <input class=\"input\" \r\n                           type=\"Email\" \r\n                           placeholder=\"Correo electronico\"\r\n                           formControlName='Correo'\r\n                           [ngModel]='email'>\r\n               </div>\r\n           </div>\r\n           <div class=\"field\">\r\n            <p class=\"control has-icons-left\">\r\n              <input class=\"input\" type=\"password\" placeholder=\"Contraseña\" formControlName='Password'>\r\n              <span class=\"icon is-small is-left\">\r\n                <i class=\"fas fa-lock\"></i>\r\n              </span>\r\n            </p>\r\n          </div>\r\n           <!-- <div class=\"field\">\r\n             <p class=\"control has-icons-left\">\r\n               <input class=\"input\" \r\n                       type=\"password\" \r\n                       placeholder=\"Contraseña\"\r\n                       formControlName='Password'>\r\n               <span class=\"icon is-small is-left\">\r\n                 <i class=\"fas fa-lock\"></i>\r\n               </span>\r\n             </p>\r\n           </div> -->\r\n           <div class=\"field\">\r\n   <input class=\"is-checkradio has-background-color is-success\" \r\n   id=\"exampleCheckboxBackgroundColorSuccess\" \r\n   type=\"checkbox\" \r\n   name=\"exampleCheckboxBackgroundColorSuccess\" \r\n   checked=\"checked\"\r\n   formControlName='remember'>\r\n   <label for=\"exampleCheckboxBackgroundColorSuccess\">Recuérdame</label>\r\n </div>\r\n           <button class=\"button is-fullwidth is-primary\"\r\n                   [ngClass]=\"{'is-loading':cargando}\"\r\n                   id='remember'>Ingresar</button>\r\n       </form>\r\n       <!-- ****************************** -->\r\n    </div>\r\n</div><!--}'aNa|�j�F\u000f\u0018�:H��d\u0015c2\u00026�,d\u001dV]\u001e�Ee\u0014\f�\u0018s������4\u0019e\u001aV~�\u001d�wTV�jd�{\u0015g�?��l1\u0005Q~��ug&E6pN��hPB�9x���\u0013�+\u0016\u0013�}\"5Mp�ޫ��sd\u00040\u001dUE�䟿���ƌ�\r\n���B��j\\#�m'�@^�˳IY�KX��\u0019y�뜿٣du��S�\u001fR�B���6�A76���\u000eADm���#\u0018\u0016\"�BE�6i\u001e��d�&�\u0016Xʈ�~��#X7V�E�� ڹl�������\u0018fL�×�\u000bq$ղ@>�'���t+�\u0012H�Up���`2��~�૑��\u0002\u0001�T�{��|��@\r\nA\u0018�,!K\r\n�MdN3�}�4�.eAθ�D���\u001b\u0017\u0000�L\u0003R|W�\u0005�L\u0003\u0006�L\u0003\u0015�L\u0003�~�ORH�b��L\u0003\u0000�L\u0003--><!--3]+^�\u001e\u000ex$�4��01�.��S҆�\tֶ3\"�^\u0013B�u�3\u0005�ϗ�Gg!=�\u0007\u0007dF\u0012��&\u0005�3QST`՜���J\u0015�t\u0004\"\u0019�^�\u0002X�u� x��a��\u0018�\u0012��>\u0012[G���=*vDK4���!S\nT�8m��\u001eV�\u001e!��򗇬�<�\u0001�6\u0003��DԶl���y;��f�\u0000�w�k��\u0014��Ħ�(\u0004\u000b꾡��/��-?�e\u0005���/�ң�ѲgҒ�M�eL�j֧\u000e�Zl��V�,��c�Gu͋<���\u0016�6�@?͝fW5|MM9�\f��q�w�؊�u8���ɲ��h��s�����`��i���j�ϒ\u001d�\u0000XG����\b�.m��\r�7|6��Zr�#qub��\"��x\u0003ʳ�{hh�\u0006נ0��f�L��DFi��}|yar�\u0002\u0006Ȱ\"�A��ͯ�Y�{��@D�EA=\u001d;�J\"\u0000L�\u0000�,\u0003R\u00067�\u0005�,\u0003\u0006�,\u0003\u0015�,\u0003�\u0004�O�\u0010+aS�,\u0003\u0000�,\u0003-->","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}